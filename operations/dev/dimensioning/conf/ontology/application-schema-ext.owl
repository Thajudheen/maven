<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY swrl "http://www.w3.org/2003/11/swrl#" >
    <!ENTITY swrlb "http://www.w3.org/2003/11/swrlb#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY afn "http://jena.hpl.hp.com/ARQ/function#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY xpath-fn "http://www.w3.org/2005/xpath-functions#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY ps "http://www.inmindcomputing.com/platform/platform-schema.owl#" >
    <!ENTITY as "http://www.inmindcomputing.com/application/application-schema.owl#" >
    <!ENTITY ase "http://www.inmindcomputing.com/application/application-schema-ext.owl#" >
    <!ENTITY ai "http://www.inmindcomputing.com/application/application-implementation.owl#" >
]>


<rdf:RDF xmlns="http://www.inmindcomputing.com/application/application-schema-ext.owl#"
     xml:base="http://www.inmindcomputing.com/application/application-schema-ext.owl"
     xmlns:afn="http://jena.hpl.hp.com/ARQ/function#"
     xmlns:xpath-fn="http://www.w3.org/2005/xpath-functions#"
     xmlns:as="http://www.inmindcomputing.com/application/application-schema.owl#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:swrl="http://www.w3.org/2003/11/swrl#"
     xmlns:ai="http://www.inmindcomputing.com/application/application-implementation.owl#"
     xmlns:ase="http://www.inmindcomputing.com/application/application-schema-ext.owl#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:swrlb="http://www.w3.org/2003/11/swrlb#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:ps="http://www.inmindcomputing.com/platform/platform-schema.owl#">
    <owl:Ontology rdf:about="http://www.inmindcomputing.com/application/application-schema-ext.owl">
        <owl:versionInfo rdf:datatype="&xsd;string">0.4</owl:versionInfo>
        <rdfs:comment rdf:datatype="&xsd;string">Copyright (c) 2013, In Mind Computing AG. All rights reserved.
IMC PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.</rdfs:comment>
        <owl:imports rdf:resource="http://www.inmindcomputing.com/application/application-schema.owl"/>
        <owl:imports rdf:resource="http://www.inmindcomputing.com/application/report-schema.owl"/>
    </owl:Ontology>
    

    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#documentHeaderPriceBeforeDiscount -->

    <owl:DatatypeProperty rdf:about="&ase;documentHeaderPriceBeforeDiscount">
        <rdf:type rdf:resource="&owl;FunctionalProperty"/>
        <rdfs:label>Header Price Before Discont</rdfs:label>
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (?val as ?documentHeaderPriceBeforeDiscount)
  WHERE {
?subject as:documentHeaderPriceAfterItemDiscount ?aid.
    ?subject ase:documentHeaderTotalDiscountBeforeQuoteDiscount ?qp .
    BIND (xsd:decimal(?aid - ?qp)  AS ?val)
  }</ps:sparql>
        <rdfs:domain rdf:resource="&as;DocumentHeaderPriceItem"/>
        <rdfs:subPropertyOf rdf:resource="&ps;calculation"/>
        <rdfs:subPropertyOf rdf:resource="&ps;materialization"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#documentHeaderTotalDiscountBeforeQuoteDiscount -->

    <owl:DatatypeProperty rdf:about="&ase;documentHeaderTotalDiscountBeforeQuoteDiscount">
        <rdf:type rdf:resource="&owl;FunctionalProperty"/>
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (SUM(?val) as ?documentHeaderTotalDiscountBeforeQuoteDiscount)
  WHERE {
     ?subject as:includesItemHeaderPriceItem ?ihpi .
    {
      SELECT DISTINCT ?ihpi ?val
      WHERE
      {
             ?ihpi as:itemHeaderTotalDiscount ?cp .
             BIND (xsd:decimal(?cp) AS ?val )
      }
    }
   } GROUP BY ?subject</ps:sparql>
        <rdfs:domain rdf:resource="&as;DocumentHeaderPriceItem"/>
        <rdfs:subPropertyOf rdf:resource="&ps;calculation"/>
        <rdfs:subPropertyOf rdf:resource="&ps;materialization"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#documentHeaderTotalDiscountPercentage -->

    <owl:DatatypeProperty rdf:about="&ase;documentHeaderTotalDiscountPercentage">
        <rdf:type rdf:resource="&owl;FunctionalProperty"/>
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (?val as ?documentHeaderTotalDiscountPercentage)
  WHERE {
?subject as:documentHeaderTotalDiscount ?td.
    ?subject ase:documentHeaderPriceBeforeDiscount ?bd .
    BIND (xsd:decimal( ?td *  xsd:decimal(100) / ?bd )  AS ?val)
  }</ps:sparql>
        <rdfs:domain rdf:resource="&as;DocumentHeaderPriceItem"/>
        <rdfs:subPropertyOf rdf:resource="&ps;calculation"/>
        <rdfs:subPropertyOf rdf:resource="&ps;materialization"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#zProductDescription -->

    <owl:DatatypeProperty rdf:about="&ase;zProductDescription">
        <ps:hidden rdf:datatype="&xsd;boolean">false</ps:hidden>
        <rdfs:domain rdf:resource="&as;Product"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&rdfs;Literal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema.owl#itemHeaderTotalDiscount -->

    <owl:DatatypeProperty rdf:about="&as;itemHeaderTotalDiscount">
        <rdf:type rdf:resource="&owl;FunctionalProperty"/>
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (?val as ?itemHeaderTotalDiscount)
  WHERE {
    ?subject as:itemHeaderAdditionalPrice ?ap .
    ?subject as:itemHeaderTotalPrice ?tp .
    ?subject as:itemHeaderPrice ?hp .
    ?subject as:itemHeaderQuantity ?cq .
    ?salesItem as:includesItemHeaderPriceItem ?subject .
    ?salesItem as:salesItemOptional ?co .
    BIND ( IF (?co, xsd:decimal(?tp - (?hp + ?ap) * ?cq), xsd:decimal(0))  as ?val )
  }
    </ps:sparql>
        <rdfs:domain rdf:resource="&as;ItemHeaderPriceItem"/>
        <rdfs:subPropertyOf rdf:resource="&ps;calculation"/>
        <rdfs:subPropertyOf rdf:resource="&ps;materialization"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Individuals
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#ExternalCRM -->

    <owl:NamedIndividual rdf:about="&ase;ExternalCRM">
        <rdf:type rdf:resource="&as;Setting"/>
        <as:settingValue rdf:datatype="&xsd;string">SoD</as:settingValue>
        <ps:objectName rdf:datatype="&xsd;string">This is to define the external system to allow iss to import, synchronize and export.</ps:objectName>
        <as:settingKey rdf:datatype="&xsd;string">setting.externalCRM</as:settingKey>
    </owl:NamedIndividual>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Annotations
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    <rdf:Description rdf:about="&as;accountQuoteVolume">
        <ps:sparql>SELECT ?subject (SUM(?vol) AS ?accountQuoteVolume) WHERE {
   ?subject as:containsQuote ?quote .
   ?quote as:includesDocumentHeaderPriceItem ?price .
   ?price as:documentHeaderPriceAfterExchangeRate ?vol .
} GROUP BY ?subject</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;documentHeaderPrice">
        <ps:defaultValue rdf:datatype="&xsd;decimal">0</ps:defaultValue>
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (?val as ?documentHeaderPrice)
  WHERE {
    ?subject as:documentHeaderPriceAfterItemDiscount ?qp .
    ?subject as:documentHeaderDiscount ?qd .
    BIND (xsd:decimal(xsd:decimal(?qp)*xsd:decimal(100-?qd)*0.01)  AS ?val)
  }</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;itemHeaderCurrentPrice">
        <rdfs:comment rdf:datatype="&xsd;string">SELECT ?subject (?val as ?itemHeaderCurrentPrice)
 WHERE {
  ?subject as:itemHeaderPriceItemIncludedBy ?salesItem.
  ?salesItem as:isProduct ?p .
   OPTIONAL {?p as:productContainedBy pci:Cubicle . ?subject pcs:cubiclePrice ?val .}
   OPTIONAL {?p as:productContainedBy pci:Light . ?subject pcs:lightPrice ?val .}
   OPTIONAL {?p as:productContainedBy pci:Tracks . ?subject pcs:tracksPrice ?val .}
   OPTIONAL {?p as:productContainedBy pci:Subscription . ?subject pcs:subscriptionPrice ?val .}
   OPTIONAL {?p as:productContainedBy pci:Others . ?subject pcs:othersPrice ?val .}
}</rdfs:comment>
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (?val as ?itemHeaderCurrentPrice)
 WHERE {
OPTIONAL {
   ?subject as:itemHeaderPriceItemIncludedBy ?salesItem .
   ?salesItem as:includesConfigItem ?config .
    ?salesItem as:isProduct ?MetalProcess .
   ?config pcs:metalProcessCurrentPrice ?val } .
OPTIONAL {
   ?subject as:itemHeaderPriceItemIncludedBy ?salesItem .
   ?salesItem as:isProduct ?MetalPart .
   ?salesItem as:includesConfigItem ?config .
   ?config pcs:metalPartCurrentPrice ?val } .
OPTIONAL {
   ?subject as:itemHeaderPriceItemIncludedBy ?salesItem .
   ?salesItem as:isProduct ?Assembly .
   ?salesItem as:includesConfigItem ?config .
   ?config pcs:assemblyCurrentPrice ?val} .
OPTIONAL {
   ?subject as:itemHeaderPriceItemIncludedBy ?salesItem .
   ?salesItem as:isProduct ?Item .
   ?salesItem as:includesConfigItem ?config .
   ?config pcs:othersPrice ?val } .
OPTIONAL {
   ?subject as:itemHeaderPriceItemIncludedBy ?salesItem .
   ?salesItem as:isProduct ?PurchasePart.
   ?salesItem as:includesConfigItem ?config .
   ?config pcs:purchasePartCurrentPrice ?val } .
OPTIONAL
   {  ?subject as:itemHeaderPriceItemIncludedBy ?salesItem.
  ?salesItem as:isProduct ?p .
  ?p as:productContainedBy pci:Cubicle . ?subject pcs:cubiclePrice ?val .}
OPTIONAL
   {  ?subject as:itemHeaderPriceItemIncludedBy ?salesItem.
  ?salesItem as:isProduct ?p .
  ?p as:productContainedBy pci:Light . ?subject pcs:lightPrice ?val .}
OPTIONAL
   {  ?subject as:itemHeaderPriceItemIncludedBy ?salesItem.
  ?salesItem as:isProduct ?p .
  ?p as:productContainedBy pci:Tracks . ?subject pcs:tracksPrice ?val .}
OPTIONAL
   {  ?subject as:itemHeaderPriceItemIncludedBy ?salesItem.
  ?salesItem as:isProduct ?p .
  ?p as:productContainedBy pci:Subscription . ?subject pcs:subscriptionPrice ?val .}
OPTIONAL
   {  ?subject as:itemHeaderPriceItemIncludedBy ?salesItem.
  ?salesItem as:isProduct ?p .
  ?p as:productContainedBy pci:Others .
  ?subject pcs:othersPrice ?val .}
OPTIONAL
   {  ?subject as:itemHeaderPriceItemIncludedBy ?salesItem.
  ?salesItem as:isProduct ?p .
?p as:productContainedBy pci:NetworkEquipment.
?subject pcs:routerPrice ?val  .
}
OPTIONAL
   {  ?subject as:itemHeaderPriceItemIncludedBy ?salesItem.
  ?salesItem as:isProduct ?MEXray .
?salesItem as:includesConfigItem ?config .
?p as:productContainedBy pci:MedicalEquipment.
?config pcs:medicalPrice ?val  .
}
 }
</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;productSpec">
        <ps:hidden rdf:datatype="&xsd;string">true</ps:hidden>
    </rdf:Description>
    <rdf:Description rdf:about="&as;opportunityWeightedVolume">
        <ps:defaultValue rdf:datatype="&xsd;decimal">0</ps:defaultValue>
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (?val as ?opportunityWeightedVolume)
  WHERE {
    ?subject as:opportunityVolume ?vol .
    ?subject as:opportunityChanceofSuccess ?prop .
    BIND (xsd:decimal(xsd:decimal(?vol)*xsd:decimal(?prop)*0.01)  AS ?val)
  }</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;documentHeaderPriceAfterDiscount">
        <ps:defaultValue rdf:datatype="&xsd;decimal">0</ps:defaultValue>
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (sum(?val) as ?documentHeaderAfterConfigItemDiscount)
  WHERE
  {
    ?subject as:includesSalesItem+ ?c .
    {
      SELECT DISTINCT ?c ?val
      WHERE
      {
             ?c as:itemHeaderTotalPrice ?cp .
             BIND (xsd:decimal(?cp) AS ?val )
      }
    }
  }
  GROUP BY ?subject</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;productVolumeLimit">
        <ps:hidden rdf:datatype="&xsd;string">true</ps:hidden>
    </rdf:Description>
    <rdf:Description rdf:about="&as;enterpriseImage">
        <ps:defaultValue rdf:datatype="&xsd;string">logo.png</ps:defaultValue>
    </rdf:Description>
    <rdf:Description rdf:about="&as;productIsOptional">
        <ps:defaultValue rdf:datatype="&xsd;boolean">false</ps:defaultValue>
    </rdf:Description>
    <rdf:Description rdf:about="&as;configItemError">
        <ps:defaultValue rdf:datatype="&xsd;boolean">false</ps:defaultValue>
        <ps:sparql rdf:datatype="&xsd;string">select DISTINCT ?subject ?configItemError
  where {
  ?subject as:configItemIncludedBy ?salesItem .
  ?salesItem as:isProduct ?product .
  ?product as:includesKnowledgeBase ?kbObj .
  ?kbObj rdf:type ?kbType .
  ?pred rdfs:domain ?kbType .
  ?pred ps:mandatory true .
  BIND (if(NOT EXISTS { ?subject ?pred ?val }, true, false) as ?configItemError) .
  FILTER NOT EXISTS { ?subject ?pred ?val } .
  }</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;productConfigurable">
        <ps:hidden rdf:datatype="&xsd;string">true</ps:hidden>
    </rdf:Description>
    <rdf:Description rdf:about="&as;salesDocumentVersion">
        <ps:defaultValue rdf:datatype="&xsd;int">1</ps:defaultValue>
    </rdf:Description>
    <rdf:Description rdf:about="&as;itemHeaderPrice">
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (?val as ?itemHeaderPrice)
 WHERE {
    OPTIONAL {
                      ?subject as:includesPriceItem ?price .
                      ?price as:hasPriceItemType as:ListPriceItemType.
                      ?price as:priceItemBaseAmount ?plp .
                      }
    OPTIONAL {
                      ?subject as:itemHeaderCurrentPrice ?ccp .
                      }
     BIND ( IF ( EXISTS {
                     ?subject as:itemHeaderCurrentPrice &quot;-&quot; .
                      },
                IF( NOT EXISTS {
                     ?subject as:includesPriceItem ?price .
                     ?price as:hasPriceItemType as:ListPriceItemType.
                     ?price as:priceItemBaseAmount ?plp
                     }, xsd:decimal(0), ?plp), ?ccp) AS ?val)
 }</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;documentHeaderTotalDiscount">
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (?val as ?documentHeaderTotalDiscount)
  WHERE {
     ?subject ase:documentHeaderTotalDiscountBeforeQuoteDiscount ?tdbqd.
     ?subject as:documentHeaderDiscount ?discount.
     ?subject as:documentHeaderPriceAfterItemDiscount ?aid.
BIND (xsd:decimal( xsd:decimal(-1) * ?tdbqd + (?discount  * ?aid /xsd:decimal(100)) ) AS ?val)
}</ps:sparql>
        <rdfs:comment rdf:datatype="&xsd;string">SELECT ?subject (?val as ?documentHeaderTotalDiscount)
  WHERE {
    ?subject as:documentHeaderListPrice ?priceBeforeDiscount .
    ?subject as:documentHeaderPrice ?priceAfterDiscount .
    BIND ( ((xsd:decimal(?priceBeforeDiscount)  - xsd:decimal(?priceAfterDiscount) ) / xsd:decimal(?priceBeforeDiscount)) * 100  AS ?val)
  }</rdfs:comment>
    </rdf:Description>
    <rdf:Description rdf:about="&as;itemHeaderUnitPrice">
        <ps:defaultValue rdf:datatype="&xsd;decimal">0</ps:defaultValue>
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (?val as ?itemHeaderUnitPrice)
  WHERE {
    ?subject as:itemHeaderPrice ?cp .
    ?subject as:itemHeaderPriceItemIncludedBy ?salesItem .

    ?subject as:itemHeaderAdditionalPrice ?ap .
    OPTIONAL{
          ?subject as:includesPriceItem ?discount1 .
          ?discount1 as:hasPriceItemType as:DiscountPriceItemType .
          ?discount1 as:priceItemBaseAmount ?amount1 .
    }
    BIND (IF (EXISTS {
                  ?subject as:includesPriceItem ?discount1 .
                  ?discount1 as:hasPriceItemType as:DiscountPriceItemType .
                  ?discount1 as:priceItemBaseAmount ?amount1 .
                  },
          ?amount1, xsd:decimal (0)) AS ?itemDiscount)
    OPTIONAL{
          ?subject as:includesPriceItem ?discount2 .
          ?discount2 as:hasPriceItemType as:ProductDiscountType .
          ?discount2 as:priceItemBaseAmount ?amount2 .
    }
    BIND (IF (EXISTS {
                  ?subject as:includesPriceItem ?discount2 .
                  ?discount2 as:hasPriceItemType as:ProductDiscountType .
                  ?discount2 as:priceItemBaseAmount ?amount2 .
                  },
          ?amount2, xsd:decimal (0)) AS ?productDiscount)
    OPTIONAL{
          ?subject as:includesPriceItem ?discount3 .
          ?discount3 as:hasPriceItemType as:CashDiscountType .
          ?discount3 as:priceItemBaseAmount ?amount3 .
    }
    BIND (IF (EXISTS {
                  ?subject as:includesPriceItem ?discount3 .
                  ?discount3 as:hasPriceItemType as:CashDiscountType .
                  ?discount3 as:priceItemBaseAmount ?amount3 .
                  },
          ?amount3, xsd:decimal (0)) AS ?cashDiscount)

    OPTIONAL{
          ?subject as:includesPriceItem ?discount4 .
          ?discount4 as:hasPriceItemType as:AccountDiscountType .
          ?discount4 as:priceItemBaseAmount ?amount4 .
    }
    BIND (IF (EXISTS {
                  ?subject as:includesPriceItem ?discount4 .
                  ?discount4 as:hasPriceItemType as:AccountDiscountType .
                  ?discount4 as:priceItemBaseAmount ?amount4 .
                  },
          ?amount4, xsd:decimal (0)) AS ?accountDiscount)
    BIND (
          xsd:decimal(((?cp * (1-(?productDiscount/100)))* (1-(?itemDiscount/100)) * (1-(?accountDiscount/100)))
                                   - ?cashDiscount + ?ap) AS ?val)
}
  </ps:sparql>
        <rdfs:comment rdf:datatype="&xsd;string">SELECT ?subject (?val as ?itemHeaderUnitPrice)
  WHERE {
    ?subject as:itemHeaderPrice ?cp .
    BIND (xsd:decimal(?cp)  AS ?val)
  }
  </rdfs:comment>
    </rdf:Description>
    <rdf:Description rdf:about="&as;productRating">
        <ps:hidden rdf:datatype="&xsd;string">true</ps:hidden>
    </rdf:Description>
    <rdf:Description rdf:about="&as;itemHeaderTotalPrice">
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (?val as ?itemHeaderTotalPrice)
  WHERE {
    ?subject as:itemHeaderUnitPrice ?cp .
    ?subject as:itemHeaderQuantity ?cq .
    ?salesItem as:includesItemHeaderPriceItem ?subject .
    ?salesItem as:salesItemOptional ?co .
    BIND ( IF (?co, xsd:decimal(?cp * ?cq), xsd:decimal(0))  as ?val )
}</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;itemHeaderQuantity">
        <ps:defaultValue rdf:datatype="&xsd;decimal">1.0</ps:defaultValue>
    </rdf:Description>
    <rdf:Description rdf:about="&as;documentHeaderPriceAfterItemDiscount">
        <ps:defaultValue rdf:datatype="&xsd;decimal">0</ps:defaultValue>
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (sum(?val) as ?documentHeaderPriceAfterItemDiscount)
  WHERE
  {
    ?subject as:documentHeaderPriceItemIncludedBy ?q.
    ?q as:includesSalesItem+ ?si .
    ?si as:includesItemHeaderPriceItem ?c .
    {
      SELECT DISTINCT ?c ?val
      WHERE
      {
             ?c as:itemHeaderTotalPrice ?cp .
             BIND (xsd:decimal(?cp) AS ?val )
      }
    }
  } group by ?subject</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;accountQuoteCount">
        <ps:sparql>SELECT  ?subject (COUNT(?quote) AS ?accountQuoteCount) WHERE {
   ?subject as:containsQuote ?quote.
} GROUP BY ?subject</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;salesItemError">
        <ps:defaultValue rdf:datatype="&xsd;boolean">false</ps:defaultValue>
        <ps:sparql rdf:datatype="&xsd;string">select DISTINCT ?subject ?salesItemError
  where {
  ?subject as:includesConfigItem ?config .
  ?config as:configItemError ?salesItemError .
  }</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;productPrice">
        <ps:hidden rdf:datatype="&xsd;string">true</ps:hidden>
    </rdf:Description>
    <rdf:Description rdf:about="&as;accountOpportunityWeightedVolume">
        <ps:sparql>SELECT ?subject (SUM(?vol) AS ?accountOpportunityWeightedVolume) WHERE {
   ?subject as:containsOpportunity ?opp.
   ?opp as:opportunityWeightedVolume ?vol.
} GROUP BY ?subject</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;productDiscountLimit">
        <ps:hidden rdf:datatype="&xsd;string">true</ps:hidden>
    </rdf:Description>
    <rdf:Description rdf:about="&as;quoteId">
        <rdfs:comment rdf:datatype="&xsd;string">select ?subject (concat(ps:leftPad(ps:sequence(&quot;QUOTESEQUENCE&quot;), 4, &quot;0&quot;), &quot;/&quot;, ?companyAbbr, &quot;/&quot;, ?fyShortText, &quot;/&quot;, ps:leftPad(ps:sequencetable(&quot;COMPANYQUOTE&quot;, ?company  ), 4, &quot;0&quot;)) as ?quoteId)
where {
   ?subject as:containsCompany ?company.
   ?company as:companyAbbreviation ?companyAbbr.
   {
     select ?fyShortText
     where
     {
         ?fy a as:FiscalPeriod.
         ?fy ps:objectName ?fyShortText.
         ?fy as:fiscalPeriodEndDate ?fyEndDate.
         ?fy as:fiscalPeriodStartDate ?fyStartDate.
         filter(now()&gt;?fyStartDate &amp;&amp;  now() &lt;?fyEndDate)
      }
   }
}</rdfs:comment>
        <ps:sparql rdf:datatype="&xsd;string">select ?subject (ps:leftPad(ps:sequence(&quot;QUOTESEQUENCE&quot;), 5, &quot;0&quot;) as ?quoteId) where { }</ps:sparql>
        <rdfs:comment>select ?subject (ps:leftPad(ps:sequence(&quot;QUOTESEQUENCE&quot;), 5, &quot;0&quot;) as ?quoteId) where { }</rdfs:comment>
    </rdf:Description>
    <rdf:Description rdf:about="&as;kbVersion">
        <ps:hidden rdf:datatype="&xsd;string">true</ps:hidden>
    </rdf:Description>
    <rdf:Description rdf:about="&as;salesItemOptional">
        <ps:defaultValue rdf:datatype="&xsd;boolean">true</ps:defaultValue>
    </rdf:Description>
    <rdf:Description rdf:about="&as;documentHeaderDiscount">
        <ps:defaultValue rdf:datatype="&xsd;decimal">0</ps:defaultValue>
    </rdf:Description>
    <rdf:Description rdf:about="&as;groupHidden">
        <ps:defaultValue rdf:datatype="&xsd;boolean">false</ps:defaultValue>
    </rdf:Description>
    <rdf:Description rdf:about="&as;itemHeaderMargin">
        <ps:defaultValue rdf:datatype="&xsd;decimal">0</ps:defaultValue>
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (?val as ?itemHeaderMargin)
  WHERE {
    ?subject as:itemHeaderUnitPrice ?cp .
    ?subject as:itemHeaderCost ?cc .
    BIND ( (xsd:decimal(?cp) - xsd:decimal(?cc)) / xsd:decimal(?cc) * 100  AS ?val)
  }</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;productDescription">
        <ps:hidden rdf:datatype="&xsd;string">false</ps:hidden>
    </rdf:Description>
    <rdf:Description rdf:about="&as;accountOpportunityVolume">
        <ps:sparql>SELECT ?subject (SUM(?vol) AS ?accountOpportunityVolume) WHERE {
   ?subject as:containsOpportunity ?opp.
   ?opp as:opportunityVolume ?vol.
} GROUP BY ?subject</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;kbType">
        <ps:hidden rdf:datatype="&xsd;string">true</ps:hidden>
    </rdf:Description>
    <rdf:Description rdf:about="&as;itemHeaderAdditionalPrice">
        <ps:defaultValue rdf:datatype="&xsd;decimal">0</ps:defaultValue>
        <ps:sparql rdf:datatype="&xsd;string">SELECT DISTINCT ?subject (SUM(?val) as ?itemHeaderAdditionalPrice)
  WHERE {
    ?subject as:includesPriceItem ?priceItem .
    ?priceItem as:hasPriceItemType as:AdditionalPriceItemType .
    ?priceItem as:priceItemBaseAmount ?val.
  } GROUP BY ?subject
    </ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;itemHeaderDiscount">
        <ps:defaultValue rdf:datatype="&xsd;decimal">0</ps:defaultValue>
    </rdf:Description>
    <rdf:Description rdf:about="&as;productOptionsPrice">
        <ps:hidden rdf:datatype="&xsd;boolean">true</ps:hidden>
    </rdf:Description>
    <rdf:Description rdf:about="&as;documentHeaderListPrice">
        <ps:defaultValue rdf:datatype="&xsd;decimal">0</ps:defaultValue>
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (sum(?val) as ?documentHeaderListPrice)
  WHERE
  {
    ?subject as:documentHeaderPriceItemIncludedBy ?q.
    ?q as:includesSalesItem+ ?si .
    ?si as:includesItemHeaderPriceItem ?headerPriceItem .
    {
      SELECT DISTINCT ?c ?val
      WHERE
      {
             ?headerPriceItem as:itemHeaderQuantity ?cq .
             ?headerPriceItem as:itemHeaderPrice ?cp .
             BIND (xsd:decimal(xsd:decimal(?cp) * xsd:decimal(?cq))  AS ?val)
      }
    }
  }
  GROUP BY ?subject</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;itemHeaderCost">
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (?val as ?itemHeaderCost)
  WHERE {
    ?subject as:itemHeaderPrice ?cp .
    BIND (xsd:decimal(?cp * 0.8) AS ?val)
  }</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;productATPSchedule">
        <ps:hidden rdf:datatype="&xsd;string">true</ps:hidden>
    </rdf:Description>
    <rdf:Description rdf:about="&as;productDiscontAllowed">
        <ps:hidden rdf:datatype="&xsd;string">true</ps:hidden>
    </rdf:Description>
    <rdf:Description rdf:about="&as;documentHeaderPriceAfterExchangeRate">
        <ps:defaultValue rdf:datatype="&xsd;decimal">0</ps:defaultValue>
        <ps:sparql rdf:datatype="&xsd;string">SELECT ?subject (?val AS ?documentHeaderPriceAfterExchangeRate)
            WHERE{
                    ?subject as:documentHeaderPrice ?price.
                    ?subject as:documentHeaderPriceItemIncludedBy ?quote.
                    OPTIONAL{
                        ?quote as:includeExchangeRateSalesDocument ?rate .
                        ?quote as:hasBaseCurrency ?baseCurrency .
                        ?quote as:hasTargetCurrency ?targetCurrency .
                        ?rate as:hasBaseCurrency ?baseCurrency .
                        ?rate as:hasTargetCurrency ?targetCurrency .
                        ?rate as:exchangeRate ?rateValue .   }
                        BIND ( IF ( EXISTS {
                        ?quote as:includeExchangeRateSalesDocument ?rate .
                        ?quote as:hasBaseCurrency ?baseCurrency .
                        ?quote as:hasTargetCurrency ?targetCurrency .
                        ?rate as:hasBaseCurrency ?baseCurrency .
                        ?rate as:hasTargetCurrency ?targetCurrency .
                             },
                        xsd:decimal(?price * ?rateValue), ?price ) AS ?val )
    }</ps:sparql>
    </rdf:Description>
    <rdf:Description rdf:about="&as;productVolumeAllowed">
        <ps:hidden rdf:datatype="&xsd;string">true</ps:hidden>
    </rdf:Description>
    <rdf:Description rdf:about="&as;quoteReportTitle">
        <ps:defaultValue xml:lang="de">Angebot</ps:defaultValue>
        <ps:defaultValue xml:lang="en">Quote</ps:defaultValue>
    </rdf:Description>
    <rdf:Description rdf:about="&as;opportunityChanceofSuccess">
        <ps:defaultValue rdf:datatype="&xsd;int">50</ps:defaultValue>
    </rdf:Description>
</rdf:RDF>



<!-- Generated by the OWL API (version 3.4.2) http://owlapi.sourceforge.net -->

