<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY swrl "http://www.w3.org/2003/11/swrl#" >
    <!ENTITY swrlb "http://www.w3.org/2003/11/swrlb#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY afn "http://jena.hpl.hp.com/ARQ/function#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY xpath-fn "http://www.w3.org/2005/xpath-functions#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY ps "http://www.inmindcomputing.com/platform/platform-schema.owl#" >
    <!ENTITY rs "http://www.inmindcomputing.com/application/report-schema.owl#" >
    <!ENTITY as "http://www.inmindcomputing.com/application/application-schema.owl#" >
    <!ENTITY ase "http://www.inmindcomputing.com/application/application-schema-ext.owl#" >
    <!ENTITY ai "http://www.inmindcomputing.com/application/application-implementation.owl#" >
]>


<rdf:RDF xmlns="http://www.inmindcomputing.com/application/report-schema.owl#"
     xml:base="http://www.inmindcomputing.com/application/report-schema.owl"
     xmlns:afn="http://jena.hpl.hp.com/ARQ/function#"
     xmlns:xpath-fn="http://www.w3.org/2005/xpath-functions#"
     xmlns:as="http://www.inmindcomputing.com/application/application-schema.owl#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:swrl="http://www.w3.org/2003/11/swrl#"
     xmlns:ai="http://www.inmindcomputing.com/application/application-implementation.owl#"
     xmlns:ase="http://www.inmindcomputing.com/application/application-schema-ext.owl#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:swrlb="http://www.w3.org/2003/11/swrlb#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:rs="http://www.inmindcomputing.com/application/report-schema.owl#"
     xmlns:ps="http://www.inmindcomputing.com/platform/platform-schema.owl#">
    <owl:Ontology rdf:about="http://www.inmindcomputing.com/application/report-schema.owl">
        <owl:versionInfo rdf:datatype="&xsd;string">0.4</owl:versionInfo>
        <rdfs:comment rdf:datatype="&xsd;string">Copyright (c) 2013, In Mind Cloud. All rights reserved.
IMC PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.</rdfs:comment>
        <owl:imports rdf:resource="http://www.inmindcomputing.com/application/application-schema.owl"/>
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.inmindcomputing.com/platform/platform-schema.owl#dimensionIncludedBy -->

    <owl:ObjectProperty rdf:about="&ps;dimensionIncludedBy"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#activity -->

    <owl:DatatypeProperty rdf:about="&ase;activity">
        <rdfs:domain rdf:resource="&ase;OpportunityRelevanceData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;int"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#calendarYear -->

    <owl:DatatypeProperty rdf:about="&ase;calendarYear">
        <rdfs:domain rdf:resource="&ase;OpportunityVolumePerCalendarYearData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#docType -->

    <owl:DatatypeProperty rdf:about="&ase;docType">
        <rdfs:domain rdf:resource="&ase;OpportunitiesVsQuotesPerQuarterData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#entity -->

    <owl:DatatypeProperty rdf:about="&ase;entity">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ase;WonVsLostData"/>
                    <rdf:Description rdf:about="&rs;PartsVolumePerEntityData"/>
                    <rdf:Description rdf:about="&rs;RelevanceAnalysisData"/>
                    <rdf:Description rdf:about="&rs;WonVsLostVsOpenData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#extractionNegativeSentiment -->

    <owl:DatatypeProperty rdf:about="&ase;extractionNegativeSentiment">
        <rdfs:domain rdf:resource="&ase;OpportunitySentimentData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;int"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#extractionPositiveSentiment -->

    <owl:DatatypeProperty rdf:about="&ase;extractionPositiveSentiment">
        <rdfs:domain rdf:resource="&ase;OpportunitySentimentData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;int"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#extractionProblem -->

    <owl:DatatypeProperty rdf:about="&ase;extractionProblem">
        <rdfs:domain rdf:resource="&ase;OpportunitySentimentData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;int"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#extractionRequests -->

    <owl:DatatypeProperty rdf:about="&ase;extractionRequests">
        <rdfs:domain rdf:resource="&ase;OpportunitySentimentData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;int"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#fiscalYear -->

    <owl:DatatypeProperty rdf:about="&ase;fiscalYear">
        <rdfs:domain rdf:resource="&ase;OpportunityVolumePerFiscalYearData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#lost -->

    <owl:DatatypeProperty rdf:about="&ase;lost">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ase;WonVsLostData"/>
                    <rdf:Description rdf:about="&rs;WonVsLostVsOpenData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#mood -->

    <owl:DatatypeProperty rdf:about="&ase;mood">
        <rdfs:domain rdf:resource="&ase;OpportunityRelevanceData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;int"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#opportunity -->

    <owl:DatatypeProperty rdf:about="&ase;opportunity">
        <rdfs:comment rdf:datatype="&xsd;string">Opportunity name in data point for report.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ase;OpportunitiesPerVolumeData"/>
                    <rdf:Description rdf:about="&ase;OpportunityRelevanceData"/>
                    <rdf:Description rdf:about="&ase;OpportunitySentimentData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#opportunityId -->

    <owl:DatatypeProperty rdf:about="&ase;opportunityId">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ase;OpportunityOpportunitiesPerVolumeData"/>
                    <rdf:Description rdf:about="&ase;OpportunityRelevanceData"/>
                    <rdf:Description rdf:about="&ase;OpportunitySentimentData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#price -->

    <owl:DatatypeProperty rdf:about="&ase;price">
        <rdfs:domain rdf:resource="&ase;QuotesPerPriceData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range>
            <rdfs:Datatype>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&xsd;decimal"/>
                    <rdf:Description rdf:about="&xsd;string"/>
                </owl:unionOf>
            </rdfs:Datatype>
        </rdfs:range>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#productName -->

    <owl:DatatypeProperty rdf:about="&ase;productName">
        <rdfs:domain rdf:resource="&ase;OpportunityVolumeByProductData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#quote -->

    <owl:DatatypeProperty rdf:about="&ase;quote">
        <rdfs:domain rdf:resource="&ase;QuotesPerPriceData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#quoteId -->

    <owl:DatatypeProperty rdf:about="&ase;quoteId">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ase;QuotesPerPriceData"/>
                    <rdf:Description rdf:about="&rs;QuoteAnalyticData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#rOpen -->

    <owl:DatatypeProperty rdf:about="&ase;rOpen">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ase;WonVsLostData"/>
                    <rdf:Description rdf:about="&rs;WonVsLostVsOpenData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#salesPhase -->

    <owl:DatatypeProperty rdf:about="&ase;salesPhase">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ase;OpportunityVolumePerQuarterData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#volume -->

    <owl:DatatypeProperty rdf:about="&ase;volume">
        <rdfs:comment rdf:datatype="&xsd;string">Volume of opportunity.</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ase;OpportunitiesPerVolumeData"/>
                    <rdf:Description rdf:about="&ase;OpportunitiesVsQuotesPerQuarterData"/>
                    <rdf:Description rdf:about="&ase;OpportunityVolumeByProductData"/>
                    <rdf:Description rdf:about="&ase;OpportunityVolumePerCalendarYearData"/>
                    <rdf:Description rdf:about="&ase;OpportunityVolumePerFiscalYearData"/>
                    <rdf:Description rdf:about="&ase;OpportunityVolumePerQuarterData"/>
                    <rdf:Description rdf:about="&ase;QuotesPerPriceData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#weightedVolume -->

    <owl:DatatypeProperty rdf:about="&ase;weightedVolume">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ase;OpportunityRelevanceData"/>
                    <rdf:Description rdf:about="&ase;OpportunityVolumePerCalendarYearData"/>
                    <rdf:Description rdf:about="&ase;OpportunityVolumePerFiscalYearData"/>
                    <rdf:Description rdf:about="&ase;OpportunityVolumePerQuarterData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#won -->

    <owl:DatatypeProperty rdf:about="&ase;won">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ase;WonVsLostData"/>
                    <rdf:Description rdf:about="&rs;PartsVolumePerEntityData"/>
                    <rdf:Description rdf:about="&rs;VolumePerIndustryData"/>
                    <rdf:Description rdf:about="&rs;WonVsLostVsOpenData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#yearQuarter -->

    <owl:DatatypeProperty rdf:about="&ase;yearQuarter">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ase;OpportunitiesVsQuotesPerQuarterData"/>
                    <rdf:Description rdf:about="&ase;OpportunityVolumePerQuarterData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#accountName -->

    <owl:DatatypeProperty rdf:about="&rs;accountName">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;AnalyticData"/>
                    <rdf:Description rdf:about="&rs;QuotationListData"/>
                    <rdf:Description rdf:about="&rs;QuoteAnalyticData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#attribute -->

    <owl:DatatypeProperty rdf:about="&rs;attribute">
        <rdfs:domain rdf:resource="&rs;CisticAnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#attributeValue -->

    <owl:DatatypeProperty rdf:about="&rs;attributeValue">
        <rdfs:domain rdf:resource="&rs;CisticAnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#copa -->

    <owl:DatatypeProperty rdf:about="&rs;copa">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;AnalyticData"/>
                    <rdf:Description rdf:about="&rs;QuoteAnalyticData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#count -->

    <owl:DatatypeProperty rdf:about="&rs;count">
        <rdfs:domain rdf:resource="&rs;CisticAnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#creationDate -->

    <owl:DatatypeProperty rdf:about="&rs;creationDate">
        <rdfs:domain rdf:resource="&rs;QuotationListData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;dateTime"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#creatorName -->

    <owl:DatatypeProperty rdf:about="&rs;creatorName">
        <rdfs:domain rdf:resource="&rs;QuotationListData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicActual -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicActual">
        <rdfs:domain rdf:resource="&rs;DynamicReportData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicActualBill -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicActualBill">
        <rdfs:domain rdf:resource="&rs;DynReportTimeSeriesRevVsCostData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicActualCost -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicActualCost">
        <rdfs:domain rdf:resource="&rs;DynReportTimeSeriesCostData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicActualDeliveredQuantity -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicActualDeliveredQuantity">
        <rdfs:domain rdf:resource="&rs;DynReportTimeSeriesQtyData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicActualProducedQuantity -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicActualProducedQuantity">
        <rdfs:domain rdf:resource="&rs;DynReportTimeSeriesQtyData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicCost -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicCost">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;DynamicReportPieChartData"/>
                    <rdf:Description rdf:about="&rs;DynamicReportRevenueVsCostData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicCustomer -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicCustomer">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;DynamicReportPieChartData"/>
                    <rdf:Description rdf:about="&rs;DynamicReportRevenueVsCostData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicCustomerCountry -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicCustomerCountry">
        <rdfs:domain rdf:resource="&rs;DynamicReportPieChartData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicPartNumber -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicPartNumber">
        <rdfs:domain rdf:resource="&rs;DynReportTimeSeriesRevVsCostData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicPlanned -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicPlanned">
        <rdfs:domain rdf:resource="&rs;DynamicReportData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicPlannedCost -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicPlannedCost">
        <rdfs:domain rdf:resource="&rs;DynReportTimeSeriesCostData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicPlannedQuantity -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicPlannedQuantity">
        <rdfs:domain rdf:resource="&rs;DynReportTimeSeriesQtyData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicPlannedRev -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicPlannedRev">
        <rdfs:domain rdf:resource="&rs;DynReportTimeSeriesRevVsCostData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicPlannedTotalCostUnit -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicPlannedTotalCostUnit">
        <rdfs:domain rdf:resource="&rs;DynReportTimeSeriesUnitCostData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicQuoted -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicQuoted">
        <rdfs:domain rdf:resource="&rs;DynamicReportData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicQuotedCost -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicQuotedCost">
        <rdfs:domain rdf:resource="&rs;DynReportTimeSeriesCostData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicQuotedQuantity -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicQuotedQuantity">
        <rdfs:domain rdf:resource="&rs;DynReportTimeSeriesQtyData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicQuotedRev -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicQuotedRev">
        <rdfs:domain rdf:resource="&rs;DynReportTimeSeriesRevVsCostData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicQuotedTotalCostUnit -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicQuotedTotalCostUnit">
        <rdfs:domain rdf:resource="&rs;DynReportTimeSeriesUnitCostData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicRevenue -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicRevenue">
        <rdfs:domain rdf:resource="&rs;DynamicReportRevenueVsCostData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicSalesPeriod -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicSalesPeriod">
        <rdfs:label xml:lang="en">Period</rdfs:label>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;DynReportTimeSeriesCostData"/>
                    <rdf:Description rdf:about="&rs;DynReportTimeSeriesQtyData"/>
                    <rdf:Description rdf:about="&rs;DynReportTimeSeriesRevVsCostData"/>
                    <rdf:Description rdf:about="&rs;DynReportTimeSeriesUnitCostData"/>
                    <rdf:Description rdf:about="&rs;DynamicReportData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#dynamicYear -->

    <owl:DatatypeProperty rdf:about="&rs;dynamicYear">
        <rdfs:label xml:lang="en">Year</rdfs:label>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;DynReportTimeSeriesCostData"/>
                    <rdf:Description rdf:about="&rs;DynReportTimeSeriesQtyData"/>
                    <rdf:Description rdf:about="&rs;DynReportTimeSeriesRevVsCostData"/>
                    <rdf:Description rdf:about="&rs;DynReportTimeSeriesUnitCostData"/>
                    <rdf:Description rdf:about="&rs;DynamicReportData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#firstName -->

    <owl:DatatypeProperty rdf:about="&rs;firstName">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;QuotationListData"/>
                    <rdf:Description rdf:about="&rs;UserRoleAuthorityData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#gm -->

    <owl:DatatypeProperty rdf:about="&rs;gm">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;AnalyticData"/>
                    <rdf:Description rdf:about="&rs;QuoteAnalyticData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#gmm -->

    <owl:DatatypeProperty rdf:about="&rs;gmm">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;AnalyticData"/>
                    <rdf:Description rdf:about="&rs;QuoteAnalyticData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#industryName -->

    <owl:DatatypeProperty rdf:about="&rs;industryName">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;AnalyticData"/>
                    <rdf:Description rdf:about="&rs;QuoteAnalyticData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#lastName -->

    <owl:DatatypeProperty rdf:about="&rs;lastName">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;QuotationListData"/>
                    <rdf:Description rdf:about="&rs;UserRoleAuthorityData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#lastUpdate -->

    <owl:DatatypeProperty rdf:about="&rs;lastUpdate">
        <rdfs:domain rdf:resource="&rs;QuotationListData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;dateTime"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#partNumber -->

    <owl:DatatypeProperty rdf:about="&rs;partNumber">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;AnalyticData"/>
                    <rdf:Description rdf:about="&rs;QuoteAnalyticData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#pcopa -->

    <owl:DatatypeProperty rdf:about="&rs;pcopa">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;AnalyticData"/>
                    <rdf:Description rdf:about="&rs;QuoteAnalyticData"/>
                    <rdf:Description rdf:about="&rs;RelevanceAnalysisData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#pgm -->

    <owl:DatatypeProperty rdf:about="&rs;pgm">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;AnalyticData"/>
                    <rdf:Description rdf:about="&rs;QuoteAnalyticData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#pgmm -->

    <owl:DatatypeProperty rdf:about="&rs;pgmm">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;AnalyticData"/>
                    <rdf:Description rdf:about="&rs;QuoteAnalyticData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#product -->

    <owl:DatatypeProperty rdf:about="&rs;product">
        <rdfs:domain rdf:resource="&rs;CisticAnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#quoteEffectiveDate -->

    <owl:DatatypeProperty rdf:about="&rs;quoteEffectiveDate">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;dateTimeStamp"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;AnalyticData"/>
                    <rdf:Description rdf:about="&rs;CisticAnalyticData"/>
                    <rdf:Description rdf:about="&rs;QuoteAnalyticData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#quoteId -->

    <owl:DatatypeProperty rdf:about="&rs;quoteId">
        <rdfs:domain rdf:resource="&rs;QuotationListData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#quoteName -->

    <owl:DatatypeProperty rdf:about="&rs;quoteName">
        <rdfs:domain rdf:resource="&rs;QuotationListData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rAnnualVolume -->

    <owl:DatatypeProperty rdf:about="&rs;rAnnualVolume">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;int"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rAwarded -->

    <owl:DatatypeProperty rdf:about="&rs;rAwarded">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;int"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rAwardedJobs -->

    <owl:DatatypeProperty rdf:about="&rs;rAwardedJobs">
        <rdfs:domain rdf:resource="&rs;RelevanceAnalysisData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;int"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rBenchMark -->

    <owl:DatatypeProperty rdf:about="&rs;rBenchMark">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;int"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rCompanyName -->

    <owl:DatatypeProperty rdf:about="&rs;rCompanyName">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;AnalyticData"/>
                    <rdf:Description rdf:about="&rs;QuotationListData"/>
                    <rdf:Description rdf:about="&rs;UserRoleAuthorityData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rCostPerSet -->

    <owl:DatatypeProperty rdf:about="&rs;rCostPerSet">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rCurrentFY -->

    <owl:DatatypeProperty rdf:about="&rs;rCurrentFY">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rIndustry -->

    <owl:DatatypeProperty rdf:about="&rs;rIndustry">
        <rdfs:domain rdf:resource="&rs;VolumePerIndustryData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rLost -->

    <owl:DatatypeProperty rdf:about="&rs;rLost">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;int"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rLostJobs -->

    <owl:DatatypeProperty rdf:about="&rs;rLostJobs">
        <rdfs:domain rdf:resource="&rs;RelevanceAnalysisData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;int"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rMetalParts -->

    <owl:DatatypeProperty rdf:about="&rs;rMetalParts">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;int"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rPending -->

    <owl:DatatypeProperty rdf:about="&rs;rPending">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;int"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rPlasticParts -->

    <owl:DatatypeProperty rdf:about="&rs;rPlasticParts">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;int"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rProductLife -->

    <owl:DatatypeProperty rdf:about="&rs;rProductLife">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rProductType -->

    <owl:DatatypeProperty rdf:about="&rs;rProductType">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rQuoteAwardedDate -->

    <owl:DatatypeProperty rdf:about="&rs;rQuoteAwardedDate">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rQuoteBusinessSeg -->

    <owl:DatatypeProperty rdf:about="&rs;rQuoteBusinessSeg">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rQuoteDateOfExpiry -->

    <owl:DatatypeProperty rdf:about="&rs;rQuoteDateOfExpiry">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;dateTime"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rQuoteLostDate -->

    <owl:DatatypeProperty rdf:about="&rs;rQuoteLostDate">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rQuoteSOPDate -->

    <owl:DatatypeProperty rdf:about="&rs;rQuoteSOPDate">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;dateTime"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rQuotedMonth -->

    <owl:DatatypeProperty rdf:about="&rs;rQuotedMonth">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rRole -->

    <owl:DatatypeProperty rdf:about="&rs;rRole">
        <rdfs:domain rdf:resource="&rs;UserRoleAuthorityData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rRoleAuthority -->

    <owl:DatatypeProperty rdf:about="&rs;rRoleAuthority">
        <rdfs:domain rdf:resource="&rs;UserRoleAuthorityData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;int"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rUser -->

    <owl:DatatypeProperty rdf:about="&rs;rUser">
        <rdfs:domain rdf:resource="&rs;UserRoleAuthorityData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rYear1 -->

    <owl:DatatypeProperty rdf:about="&rs;rYear1">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rYear2 -->

    <owl:DatatypeProperty rdf:about="&rs;rYear2">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rYear3 -->

    <owl:DatatypeProperty rdf:about="&rs;rYear3">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rYear4 -->

    <owl:DatatypeProperty rdf:about="&rs;rYear4">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#rYearlySales -->

    <owl:DatatypeProperty rdf:about="&rs;rYearlySales">
        <rdfs:domain rdf:resource="&rs;AnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#reportDescription -->

    <owl:DatatypeProperty rdf:about="&rs;reportDescription">
        <rdfs:domain rdf:resource="&as;AnalyticReport"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#reportFileName -->

    <owl:DatatypeProperty rdf:about="&rs;reportFileName">
        <rdfs:domain rdf:resource="&as;AnalyticReport"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#status -->

    <owl:DatatypeProperty rdf:about="&rs;status">
        <rdfs:domain rdf:resource="&rs;CisticAnalyticData"/>
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#toolCost -->

    <owl:DatatypeProperty rdf:about="&rs;toolCost">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;AnalyticData"/>
                    <rdf:Description rdf:about="&rs;QuoteAnalyticData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#totalCost -->

    <owl:DatatypeProperty rdf:about="&rs;totalCost">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;decimal"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;AnalyticData"/>
                    <rdf:Description rdf:about="&rs;QuoteAnalyticData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#valueId -->

    <owl:DatatypeProperty rdf:about="&rs;valueId">
        <rdfs:subPropertyOf rdf:resource="&ps;assertion"/>
        <rdfs:range rdf:resource="&xsd;string"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&rs;DynamicReportData"/>
                    <rdf:Description rdf:about="&rs;DynamicReportPieChartData"/>
                    <rdf:Description rdf:about="&rs;DynamicReportRevenueVsCostData"/>
                    <rdf:Description rdf:about="&rs;VolumePerIndustryData"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
    </owl:DatatypeProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#CockpitOpportunitiesPerVolumeData -->

    <owl:Class rdf:about="&ase;CockpitOpportunitiesPerVolumeData">
        <rdfs:subClassOf rdf:resource="&ps;Transient"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#OpportunitiesPerVolumeData -->

    <owl:Class rdf:about="&ase;OpportunitiesPerVolumeData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#OpportunitiesVsQuotesPerQuarterData -->

    <owl:Class rdf:about="&ase;OpportunitiesVsQuotesPerQuarterData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#OpportunityOpportunitiesPerVolumeData -->

    <owl:Class rdf:about="&ase;OpportunityOpportunitiesPerVolumeData">
        <rdfs:subClassOf rdf:resource="&ps;Transient"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#OpportunityRelevanceData -->

    <owl:Class rdf:about="&ase;OpportunityRelevanceData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#OpportunitySentimentData -->

    <owl:Class rdf:about="&ase;OpportunitySentimentData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#OpportunityVolumeByProductData -->

    <owl:Class rdf:about="&ase;OpportunityVolumeByProductData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#OpportunityVolumePerCalendarYearData -->

    <owl:Class rdf:about="&ase;OpportunityVolumePerCalendarYearData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#OpportunityVolumePerFiscalYearData -->

    <owl:Class rdf:about="&ase;OpportunityVolumePerFiscalYearData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#OpportunityVolumePerQuarterData -->

    <owl:Class rdf:about="&ase;OpportunityVolumePerQuarterData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#OpportunityVolumePerYearQuarterData -->

    <owl:Class rdf:about="&ase;OpportunityVolumePerYearQuarterData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#QuotesPerPriceData -->

    <owl:Class rdf:about="&ase;QuotesPerPriceData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#WonVsLostData -->

    <owl:Class rdf:about="&ase;WonVsLostData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#AnalyticData -->

    <owl:Class rdf:about="&rs;AnalyticData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#CisticAnalyticData -->

    <owl:Class rdf:about="&rs;CisticAnalyticData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DynReportTimeSeriesCostData -->

    <owl:Class rdf:about="&rs;DynReportTimeSeriesCostData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DynReportTimeSeriesQtyData -->

    <owl:Class rdf:about="&rs;DynReportTimeSeriesQtyData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DynReportTimeSeriesRevVsCostData -->

    <owl:Class rdf:about="&rs;DynReportTimeSeriesRevVsCostData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DynReportTimeSeriesUnitCostData -->

    <owl:Class rdf:about="&rs;DynReportTimeSeriesUnitCostData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DynamicReportData -->

    <owl:Class rdf:about="&rs;DynamicReportData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DynamicReportPieChartData -->

    <owl:Class rdf:about="&rs;DynamicReportPieChartData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DynamicReportRevenueVsCostData -->

    <owl:Class rdf:about="&rs;DynamicReportRevenueVsCostData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#PartsVolumePerEntityData -->

    <owl:Class rdf:about="&rs;PartsVolumePerEntityData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#QuotationListData -->

    <owl:Class rdf:about="&rs;QuotationListData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#QuoteAnalyticData -->

    <owl:Class rdf:about="&rs;QuoteAnalyticData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#RelevanceAnalysisData -->

    <owl:Class rdf:about="&rs;RelevanceAnalysisData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#UserRoleAuthorityData -->

    <owl:Class rdf:about="&rs;UserRoleAuthorityData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#VolumePerIndustryData -->

    <owl:Class rdf:about="&rs;VolumePerIndustryData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#WonVsLostVsOpenData -->

    <owl:Class rdf:about="&rs;WonVsLostVsOpenData">
        <rdfs:subClassOf rdf:resource="&ps;Data"/>
    </owl:Class>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Individuals
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#CockpitReportOpportunityRelevance -->

    <owl:NamedIndividual rdf:about="&ase;CockpitReportOpportunityRelevance">
        <rdf:type rdf:resource="&as;InactiveReport"/>
        <rdfs:label xml:lang="de">Relevanz von Verkaufsgelegenheiten</rdfs:label>
        <rdfs:label xml:lang="en">Opportunity Relevance</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">BUBBLE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ss: &lt;http://www.inmindcomputing.com/ssc/submodel.owl#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX sec: &lt;http://www.inmindcomputing.com/security/security-implementation.owl#&gt;
PREFIX wi: &lt;http://www.inmindcomputing.com/application/workItem-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
prefix afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
  ?uuid a as-ext:OpportunityRelevanceData;
      a ps:Data;
      as-ext:mood ?mood;
      as-ext:weightedVolume ?volumeDec;
      as-ext:activity ?activity;
      as-ext:opportunity ?comment ;
      as-ext:opportunityId ?opportunityId .
} WHERE {
  {
      SELECT ?opportunityId
      ?comment
      (MAX(?ovolume) as ?volume)
      (COUNT(?note) as ?activity)
      (SUM(?posSentNote) as ?posSentiment)
      (SUM(?negSentNote) as ?negSentiment)
      WHERE {
        SELECT
        #*
        ?opportunityId
        ?comment
        ?note
        (MAX(?owvolume) as ?ovolume)
        (SUM(?positiveAll) as ?posSentNote)
        (SUM(?negativeAll) as ?negSentNote)
        WHERE  {
            ?opp rdf:type as:Opportunity .
            ?opp ps:objectName ?comment.
            # for filter
            ?opp  as:hasSalesDocumentStatus ?status .
            ?opp  as:hasSalesPhase ?phase .
            # volume
            ?opp  as:opportunityWeightedVolume ?owvolume.
            ?opp as:definesAnnotation ?note .
            ?note rdf:type as:Note .

            OPTIONAL {
              # positive sentiment
              ?note as:linksExtractionResult ?extResult .
              ?extResult as:extractedType ?extType .
              BIND(IF(?extType = &apos;WeakPositiveSentiment&apos; || ?extType = &apos;StrongPositiveSentiment&apos;, 1, 0) as ?positive)
              # positive sentiment
              BIND(IF(?extType = &apos;WeakNegativeSentiment&apos; || ?extType = &apos;StrongNegativeSentiment&apos;, 1, 0) as ?negative)
            }

            BIND(IF(BOUND(?negative),?negative,0) as ?negativeAll)
            BIND(IF(BOUND(?positive),?positive,0) as ?positiveAll)
            BIND(str(?opp) as ?opportunityId).
            FILTER(?status != as:LOST).
            FILTER(?status != as:WON).
            FILTER(?phase != as:SalesPhase1).

        }
        GROUP BY
        ?opportunityId
        ?comment
        ?note
      }
      GROUP BY
      ?opportunityId
      ?comment
    }
  BIND(afn:uuid() as ?uuid).
  BIND(xsd:decimal(?volume) as ?volumeDec)
  BIND(?posSentiment - ?negSentiment as ?mood)
}    </ps:sparql>
        <ps:hasDimension rdf:resource="&ase;DimensionOpportunity"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureActivity"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureMood"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureWeightedVolumeGroup3"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#CockpitReportOpportunityVolumePerCalendarYear -->

    <owl:NamedIndividual rdf:about="&ase;CockpitReportOpportunityVolumePerCalendarYear">
        <rdf:type rdf:resource="&as;InactiveReport"/>
        <rdfs:label xml:lang="de">Verkaufsgelegenheitsvolumen pro Kalenderjahr</rdfs:label>
        <rdfs:label xml:lang="en">Opportunity Volume per Calendar Year</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">LINE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
prefix afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
      ?uuid a as-ext:OpportunityVolumePerCalendarYearData;
      ps:orderBy ?year;
      a ps:Data;
      as-ext:weightedVolume ?owvolumeSum;
      as-ext:volume ?ovolumeSum;
      as-ext:calendarYear ?year.
} WHERE {
  {
      SELECT (SUM(?owvolumedec) as ?owvolumeSum)
      (SUM(?ovolumedec) as ?ovolumeSum)
      ?year
      WHERE {
        ?opp  rdf:type as:Opportunity .
        ?opp  as:hasSalesDocumentStatus ?status .
        ?opp  as:hasSalesPhase ?phase .
        ?opp  as:opportunityWeightedVolume ?owvolume .
        ?opp  as:opportunityVolume ?ovolume .
        ?opp  as:salesDocumentDateOfExpiry ?doexpiry .
        BIND(xsd:decimal(?ovolume) as ?ovolumedec) .
        BIND(xsd:decimal(?owvolume) as ?owvolumedec) .
        BIND(xsd:dateTime(?doexpiry) as ?doexpiryDate) .
        BIND(str(year(?doexpiryDate)) as ?year)
        BIND(strafter(str(?phase), &quot;#&quot;) as ?salesPhase).
        FILTER(?status != as:LOST &amp;&amp; ?status!= as:COMPLETED )
        FILTER(?phase != as:SalesPhase1)
      } GROUP BY ?year
  }
  BIND(afn:uuid() as ?uuid).
}</ps:sparql>
        <ps:hasDimension rdf:resource="&ase;DimensionCalendarYear"/>
        <ps:hasDimension rdf:resource="&ase;DimensionSalesPhase"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureVolume"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureWeightedVolumeGroup1"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#CockpitReportOpportunityVolumePerFiscalYear -->

    <owl:NamedIndividual rdf:about="&ase;CockpitReportOpportunityVolumePerFiscalYear">
        <rdf:type rdf:resource="&as;InactiveReport"/>
        <rdfs:label xml:lang="de">Verkaufsgelegenheitsvolumen pro Fiskaljahr</rdfs:label>
        <rdfs:label xml:lang="en">Opportunity Volume per Fiscal Year </rdfs:label>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ss: &lt;http://www.inmindcomputing.com/ssc/submodel.owl#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX sec: &lt;http://www.inmindcomputing.com/security/security-implementation.owl#&gt;
PREFIX wi: &lt;http://www.inmindcomputing.com/application/workItem-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
prefix afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
      ?uuid a as-ext:OpportunityVolumePerFiscalYearData;
      ps:orderBy ?fiscalYear;
      a ps:Data;
      as-ext:weightedVolume ?owvolumeSum;
      as-ext:volume ?ovolumeSum;
      as-ext:fiscalYear ?fiscalYear.
} WHERE {

{
      SELECT (SUM(?owvolumedec) as ?owvolumeSum)
      (SUM(?ovolumedec) as ?ovolumeSum)
        ?opp  rdf:type as:Opportunity .
        ?opp  as:hasSalesDocumentStatus ?status .
        ?opp  as:hasSalesPhase ?phase .
        ?opp  as:opportunityWeightedVolume ?owvolume .
        ?opp  as:opportunityVolume ?ovolume .
        ?opp  as:salesDocumentDateOfExpiry ?doexpiry .
        ?fp   rdf:type as:FiscalPeriod .
        ?fp   as:fiscalPeriodEndDate ?fpend .
        ?fp   as:fiscalPeriodStartDate ?fpsstart .
        BIND(xsd:dateTime(?doexpiry) as ?doexpiryDate) .
        BIND(xsd:decimal(?ovolume) as ?ovolumedec) .
        BIND(xsd:decimal(?owvolume) as ?owvolumedec) .
        BIND(xsd:dateTime(?fpend) as ?fpendDate) .
        BIND(xsd:dateTime(?fpsstart) as ?fpsstartDate) .
        BIND(strafter(str(?fp), &quot;#&quot;) as ?fiscalYear).
        BIND(strafter(str(?phase), &quot;#&quot;) as ?salesPhase).
        FILTER(?doexpiryDate &lt; ?fpendDate &amp;&amp; ?doexpiryDate &gt;= ?fpsstartDate)
        FILTER(?status != as:LOST)
        FILTER(?phase != as:SalesPhase1)
      } GROUP BY ?fiscalYear
  }
  BIND(afn:uuid() as ?uuid).
}</ps:sparql>
        <ps:preferredReportRepresentation>AREA</ps:preferredReportRepresentation>
        <ps:hasDimension rdf:resource="&ase;DimensionFiscalYear"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureVolume"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureWeightedVolumeGroup1"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#CockpitReportOpportunityVolumePerProduct -->

    <owl:NamedIndividual rdf:about="&ase;CockpitReportOpportunityVolumePerProduct">
        <rdf:type rdf:resource="&as;InactiveReport"/>
        <rdfs:label xml:lang="de">Verkaufsgelegenheitsvolumen mit enthaltenen Produkt</rdfs:label>
        <rdfs:label xml:lang="en">Opportunity Volume Aggregated By Containing Product</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">DONUT</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX sec: &lt;http://www.inmindcomputing.com/security/security-implementation.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
  ?uuid a as-ext:OpportunityVolumePerYearQuarterData;
      ps:orderBy ?productName;
      a ps:Data;
      as-ext:volume ?ovolumeSum;
      as-ext:productName ?productName
} WHERE {
  {
      SELECT ?productName (SUM(?ovolumedec) as ?ovolumeSum)   WHERE {

        ?opp as:linksProduct ?product .
        ?product ps:objectName ?productName .
        ?opp  rdf:type as:Opportunity .
        ?opp  as:hasSalesDocumentStatus ?status .
        ?opp  as:hasSalesPhase ?phase .
        ?opp  as:opportunityVolume ?ovolume .
        ?opp  as:salesDocumentDateOfExpiry ?doexpiry .
        BIND(xsd:decimal(?ovolume) as ?ovolumedec) .
        FILTER(?status != as:LOST).
        FILTER(?phase != as:SalesPhase1).
      }
      GROUP BY ?productName
  }
  BIND(afn:uuid() as ?uuid).
}</ps:sparql>
        <ps:hasDimension rdf:resource="&ase;DimensionProduct"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureVolume"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#CockpitReportOpportunityVolumePerQuarter -->

    <owl:NamedIndividual rdf:about="&ase;CockpitReportOpportunityVolumePerQuarter">
        <rdf:type rdf:resource="&as;InactiveReport"/>
        <rdfs:label xml:lang="de">Verkaufsgelegenheitsvolumen pro Quartal</rdfs:label>
        <rdfs:label xml:lang="en">Opportunity Volume per Quarter</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">AREA</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
  ?uuid a as-ext:OpportunityVolumePerYearQuarterData;
      ps:orderBy ?yearQuarter;
      a ps:Data;
      as-ext:volume ?ovolumeSum;
      as-ext:yearQuarter ?yearQuarter;
      as-ext:salesPhase ?salesPhase.
} WHERE {
  {
      SELECT (SUM(?ovolumedec) as ?ovolumeSum)
      ?yearQuarter ?salesPhase
      WHERE {
        ?opp  rdf:type as:Opportunity .
        ?opp  as:hasSalesDocumentStatus ?status .
        ?opp  as:hasSalesPhase ?phase .
        ?opp  as:opportunityVolume ?ovolume .
        ?opp  as:salesDocumentDateOfExpiry ?doexpiry .
        BIND(xsd:decimal(?ovolume) as ?ovolumedec) .
        BIND(xsd:dateTime(?doexpiry) as ?doexpiryDate) .
        BIND(year(?doexpiryDate) as ?year)
        BIND(month(?doexpiryDate) as ?month)
        VALUES (?month ?quarter) {
            (01 &quot; Q1&quot;)
            (02 &quot; Q1&quot;)
            (03 &quot; Q1&quot;)
            (04 &quot; Q2&quot;)
            (05 &quot; Q2&quot;)
            (06 &quot; Q2&quot;)
            (07 &quot; Q3&quot;)
            (08 &quot; Q3&quot;)
            (09 &quot; Q3&quot;)
            (10 &quot; Q4&quot;)
            (11 &quot; Q4&quot;)
            (12 &quot; Q4&quot;)
        }
        BIND(fn:concat(?year,?quarter) as ?yearQuarter).
        BIND(strafter(str(?phase), &quot;#&quot;) as ?salesPhase).
        FILTER(?status != as:LOST).
        FILTER(?phase != as:SalesPhase1).
      } GROUP BY  ?yearQuarter ?salesPhase
  }
  BIND(afn:uuid() as ?uuid).
}</ps:sparql>
        <ps:hasDimension rdf:resource="&ase;DimensionSalesPhase"/>
        <ps:hasDimension rdf:resource="&ase;DimensionYearQuarter"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureVolume"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#CockpitReportOpportunityVsQuoteVolumePerQuarter -->

    <owl:NamedIndividual rdf:about="&ase;CockpitReportOpportunityVsQuoteVolumePerQuarter">
        <rdf:type rdf:resource="&as;InactiveReport"/>
        <rdfs:label xml:lang="de">Verkaufsgelegenheits- gegen Angebotsvolumen pro Quartal</rdfs:label>
        <rdfs:label xml:lang="en">Opportunity vs Quote Volume per Quarter</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">AREA</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
  ?uuid a as-ext:OpportunitiesVsQuotesPerQuarterData;
  ps:orderBy ?yearQuarter;
  a ps:Data;
  as-ext:volume ?volume;
  as-ext:docType ?type;
  as-ext:yearQuarter ?yearQuarter;
} WHERE {
  {
    SELECT (SUM(?volDec) as ?volume)
    ?yearQuarter ?type
    WHERE {

      {
      SELECT ?doc ?vol ?type ?doexpiry {
        ?doc  as:salesDocumentDateOfExpiry ?doexpiry .
        ?doc  rdf:type as:Quote .
        ?doc  as:includesDocumentHeaderPriceItem ?priceItem .
        ?priceItem as:documentHeaderPrice ?vol .
        ?doc  as:hasSalesDocumentStatus ?status .
        BIND(&apos;Quote&apos; as ?type) .
                                FILTER(?status != as:LOST
                                    &amp;&amp; ?status != as:WON
                                    &amp;&amp; ?status != as:REJECTED
                                    &amp;&amp; ?status != as:STOPPED
                                )
      }
      } UNION {
      SELECT ?doc ?vol ?type ?doexpiry {
        ?doc  as:salesDocumentDateOfExpiry ?doexpiry .
        ?doc  rdf:type as:Opportunity .
        ?doc  as:opportunityVolume ?vol .
        ?doc  as:hasSalesPhase ?phase .
        ?doc  as:hasSalesDocumentStatus ?status .
        BIND(&apos;Opportunity (non quoted)&apos;  as ?type) .
        FILTER(?phase != as:SalesPhase1)
                FILTER(?status != as:LOST
          &amp;&amp; ?status != as:WON
          &amp;&amp; ?status != as:QUOTED
          &amp;&amp; ?status != as:REJECTED
          &amp;&amp; ?status != as:STOPPED
                )
      }
      }
      # common

      BIND(fn:floor(xsd:decimal(?vol)) as ?volDec) .
      BIND(xsd:dateTime(?doexpiry) as ?doexpiryDate) .
      BIND(year(?doexpiryDate) as ?year)
      BIND(month(?doexpiryDate) as ?month)
      VALUES (?month ?quarter) {
      (01 &quot; Q1&quot;)
      (02 &quot; Q1&quot;)
      (03 &quot; Q1&quot;)
      (04 &quot; Q2&quot;)
      (05 &quot; Q2&quot;)
      (06 &quot; Q2&quot;)
      (07 &quot; Q3&quot;)
      (08 &quot; Q3&quot;)
      (09 &quot; Q3&quot;)
      (10 &quot; Q4&quot;)
      (11 &quot; Q4&quot;)
      (12 &quot; Q4&quot;)
      }
      BIND(fn:concat(?year,?quarter) as ?yearQuarter)
    } GROUP BY  ?yearQuarter ?type
  }
  BIND(afn:uuid() as ?uuid).
}</ps:sparql>
        <ps:hasDimension rdf:resource="&ase;DimensionDocumentType"/>
        <ps:hasDimension rdf:resource="&ase;DimensionYearQuarter"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureVolume"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#CockpitReportOpportunityWeightedVolumePerQuarter -->

    <owl:NamedIndividual rdf:about="&ase;CockpitReportOpportunityWeightedVolumePerQuarter">
        <rdf:type rdf:resource="&as;InactiveReport"/>
        <rdfs:label xml:lang="de">Gewichtetes Verkaufsgelegenheitsvolumen pro Quartal</rdfs:label>
        <rdfs:label xml:lang="en">Weighted Opportunity Volume per Quarter</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">AREA</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
  ?uuid a as-ext:OpportunityVolumePerYearQuarterData;
      ps:orderBy ?yearQuarter;
      a ps:Data;
      as-ext:weightedVolume ?owvolumeSum;
      as-ext:yearQuarter ?yearQuarter;
      as-ext:salesPhase ?salesPhase.
} WHERE {
  {
      SELECT (SUM(?owvolumedec) as ?owvolumeSum)
      (SUM(?ovolumedec) as ?ovolumeSum)
      ?yearQuarter ?salesPhase
      WHERE {
        ?opp  rdf:type as:Opportunity .
        ?opp  as:hasSalesDocumentStatus ?status .
        ?opp  as:hasSalesPhase ?phase .
        ?opp  as:opportunityWeightedVolume ?owvolume .
        ?opp  as:salesDocumentDateOfExpiry ?doexpiry .
        BIND(xsd:decimal(?owvolume) as ?owvolumedec) .
        BIND(xsd:dateTime(?doexpiry) as ?doexpiryDate) .
        BIND(year(?doexpiryDate) as ?year)
        BIND(month(?doexpiryDate) as ?month)
        VALUES (?month ?quarter) {
            (01 &quot; Q1&quot;)
            (02 &quot; Q1&quot;)
            (03 &quot; Q1&quot;)
            (04 &quot; Q2&quot;)
            (05 &quot; Q2&quot;)
            (06 &quot; Q2&quot;)
            (07 &quot; Q3&quot;)
            (08 &quot; Q3&quot;)
            (09 &quot; Q3&quot;)
            (10 &quot; Q4&quot;)
            (11 &quot; Q4&quot;)
            (12 &quot; Q4&quot;)
        }
        BIND(fn:concat(?year,?quarter) as ?yearQuarter).
        BIND(strafter(str(?phase), &quot;#&quot;) as ?salesPhase).
        FILTER(?status != as:LOST).
        FILTER(?phase != as:SalesPhase1).
      } GROUP BY  ?yearQuarter ?salesPhase
  }
  BIND(afn:uuid() as ?uuid).
}</ps:sparql>
        <ps:hasDimension rdf:resource="&ase;DimensionSalesPhase"/>
        <ps:hasDimension rdf:resource="&ase;DimensionYearQuarter"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureWeightedVolumeGroup1"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#CockpitReportOpportunityWithSentiment -->

    <owl:NamedIndividual rdf:about="&ase;CockpitReportOpportunityWithSentiment">
        <rdf:type rdf:resource="&as;InactiveReport"/>
        <rdfs:label xml:lang="de">Textanalyse Verkaufsgelegenheiten</rdfs:label>
        <rdfs:label xml:lang="en">Opportunity Text Analysis</rdfs:label>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ss: &lt;http://www.inmindcomputing.com/ssc/submodel.owl#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX sec: &lt;http://www.inmindcomputing.com/security/security-implementation.owl#&gt;
PREFIX wi: &lt;http://www.inmindcomputing.com/application/workItem-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
prefix afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
  ?uuid a as-ext:OpportunitySentimentData;
      ps:orderBy ?totalActivity;
      a ps:Data;
      as-ext:extractionRequests ?requests;
      as-ext:extractionProblem ?problem;
      as-ext:extractionPositiveSentiment ?positive;
      as-ext:extractionNegativeSentiment ?negative;
      as-ext:opportunity ?comment ;
      as-ext:opportunityId ?opportunityId .
} WHERE {
  {
      SELECT ?opportunityId
            ?comment(COUNT(?extTypeRequest) as ?requests)
            (COUNT(?extTypePositiv) as ?positive)
            (COUNT(?extTypeNegative) as ?negative)
            (COUNT(?extTypeProblem) as ?problem)
      WHERE {
        {  ?opp ps:objectName ?comment.
        ?opp rdf:type as:Opportunity .
            ?opp as:definesAnnotation ?note .
            ?opp  as:hasSalesDocumentStatus ?status .
            ?opp  as:hasSalesPhase ?phase .
            ?note rdf:type as:Note .
            ?note as:linksExtractionResult ?extResult .
            ?extResult as:extractedType ?extTypeRequest .
            FILTER (?extTypeRequest = &apos;Request&apos; || ?extTypeRequest = &apos;ContactRequest&apos; || ?extTypeRequest = &apos;GeneralRequest&apos;)
        }
        UNION
        {  ?opp ps:objectName ?comment.
        ?opp rdf:type as:Opportunity .
            ?opp as:definesAnnotation ?note .
            ?opp  as:hasSalesDocumentStatus ?status .
            ?opp  as:hasSalesPhase ?phase .
            ?note rdf:type as:Note .
            ?note as:linksExtractionResult ?extResult .
            ?extResult as:extractedType ?extTypePositiv .
            FILTER (?extTypePositiv = &apos;WeakPositiveSentiment&apos; || ?extTypePositiv = &apos;StrongPositiveSentiment&apos;)
        }
        UNION
        {  ?opp ps:objectName ?comment.
        ?opp rdf:type as:Opportunity .
            ?opp  as:hasSalesDocumentStatus ?status .
            ?opp  as:hasSalesPhase ?phase .
            ?opp as:definesAnnotation ?note .
            ?note rdf:type as:Note .
            ?note as:linksExtractionResult ?extResult .
            ?extResult as:extractedType ?extTypeNegative .
            FILTER (?extTypeNegative = &apos;WeakNegativeSentiment&apos; || ?extTypeNegative = &apos;StrongNegativeSentiment&apos;)
        }
        UNION
        {  ?opp ps:objectName ?comment.
        ?opp rdf:type as:Opportunity .
            ?opp  as:hasSalesDocumentStatus ?status .
            ?opp  as:hasSalesPhase ?phase .
            ?opp as:definesAnnotation ?note .
            ?note rdf:type as:Note .
            ?note as:linksExtractionResult ?extResult .
            ?extResult as:extractedType ?extTypeProblem .
            FILTER (?extTypeProblem = &apos;MinorProblem&apos; || ?extTypeProblem = &apos;MajorProblem&apos;)
        }
  BIND(str(?opp) as ?opportunityId).
        FILTER(?status != as:LOST).
        FILTER(?status != as:WON).
        FILTER(?phase != as:SalesPhase1).
      } GROUP BY ?opportunityId  ?comment
  }
  BIND(afn:uuid() as ?uuid).
  BIND(100000 - ?requests - ?positive - ?negative - ?problem as ?totalActivity)
}</ps:sparql>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">STACKED_VBAR</ps:preferredReportRepresentation>
        <ps:hasDimension rdf:resource="&ase;DimensionOpportunity"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureExtractionNegative"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureExtractionPositive"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureExtractionProblem"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureExtractionRequests"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#CockpitReportTopOpportunitiesPerVolume -->

    <owl:NamedIndividual rdf:about="&ase;CockpitReportTopOpportunitiesPerVolume">
        <rdf:type rdf:resource="&as;InactiveReport"/>
        <rdfs:label xml:lang="de">Top 7 Verkaufsgelegenheiten nach Volumen</rdfs:label>
        <rdfs:label xml:lang="en">Top 7 Opportunities per Volume</rdfs:label>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
prefix afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
prefix as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
prefix as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;

CONSTRUCT {
  ?uuid a as-ext:OpportunitiesPerVolumeData;
      ps:orderBy ?orderBy;
      a ps:Data;
      as-ext:volume ?vol;
      as-ext:opportunity ?comment;
      as-ext:opportunityId ?oppId.
} WHERE {
  {
      SELECT ?opp ?vol ?comment ?oppId
      WHERE {
        ?opp a as:Opportunity.
        ?opp as:opportunityVolume ?volume.
        ?opp ps:objectName ?comment.
        ?opp  as:hasSalesDocumentStatus ?status .
        BIND(str(?opp) as ?oppId).
        BIND(xsd:decimal(?volume) as ?vol).
        FILTER(?status != as:LOST).
      }
      ORDER BY DESC(?vol)
      LIMIT 7
  }
  BIND(afn:uuid() as ?uuid).
  BIND(2147483647 - ?vol as ?orderBy)
}</ps:sparql>
        <ps:preferredReportRepresentation>BAR_HORIZONTAL</ps:preferredReportRepresentation>
        <ps:hasDimension rdf:resource="&ase;DimensionOpportunity"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureVolume"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#CockpitReportTopQuotesPerPrice -->

    <owl:NamedIndividual rdf:about="&ase;CockpitReportTopQuotesPerPrice">
        <rdf:type rdf:resource="&as;CockpitReport"/>
        <rdfs:label xml:lang="de">Top 7 Angebote nach Preis</rdfs:label>
        <rdfs:label xml:lang="en">Top 7 Quotes per Price</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">BAR_HORIZONTAL</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
prefix afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
prefix as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
prefix as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;

CONSTRUCT {
      ?uuid a as-ext:QuotesPerPriceData;
            ps:orderBy ?orderBy;
            a ps:Data;
            as-ext:price ?vol;
            as-ext:quote ?comment;
            as-ext:quoteId ?quoteId.
} WHERE {
  {
      SELECT ?quote ?vol ?comment ?quoteId
      WHERE {
        ?quote a as:Quote.
        ?quote as:includesDocumentHeaderPriceItem ?item.
        ?item as:documentHeaderPrice ?price.
        ?quote ps:objectName ?comment.
        ?quote  as:hasSalesDocumentStatus ?status .
        BIND(fn:floor(xsd:decimal(?price)) as ?vol).
        BIND(str(?quote) as ?quoteId).
        FILTER(?status != as:LOST).
      }
      ORDER BY DESC(?vol)
      LIMIT 7
  }
  BIND(afn:uuid() as ?uuid).
  BIND(2147483647 - ?vol as ?orderBy)
}</ps:sparql>
        <ps:hasDimension rdf:resource="&ase;DimensionQuote"/>
        <ps:hasMeasure rdf:resource="&ase;MeasurePrice"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#DimensionCalendarYear -->

    <owl:NamedIndividual rdf:about="&ase;DimensionCalendarYear">
        <rdf:type rdf:resource="&ps;Dimension"/>
        <rdfs:label xml:lang="de">Jahr</rdfs:label>
        <rdfs:label xml:lang="en">Year</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">1</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">calendarYear</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#DimensionDocumentType -->

    <owl:NamedIndividual rdf:about="&ase;DimensionDocumentType">
        <rdf:type rdf:resource="&ps;Dimension"/>
        <rdfs:label xml:lang="de">Dokumenttyp</rdfs:label>
        <rdfs:label xml:lang="en">Document Type</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">5</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">docType</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#DimensionEntity -->

    <owl:NamedIndividual rdf:about="&ase;DimensionEntity">
        <rdf:type rdf:resource="&ps;Dimension"/>
        <rdfs:label xml:lang="en">Entity</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">1</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">entity</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#DimensionFiscalYear -->

    <owl:NamedIndividual rdf:about="&ase;DimensionFiscalYear">
        <rdf:type rdf:resource="&ps;Dimension"/>
        <rdfs:label xml:lang="de">Fiskaljahr</rdfs:label>
        <rdfs:label xml:lang="en">Fiscal Year</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">2</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">fiscalYear</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#DimensionOpportunity -->

    <owl:NamedIndividual rdf:about="&ase;DimensionOpportunity">
        <rdf:type rdf:resource="&ps;Dimension"/>
        <rdfs:label xml:lang="de">Verkaufsgelegenheit</rdfs:label>
        <rdfs:label xml:lang="en">Opportunity</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">3</ps:sequenceID>
        <ps:value>opportunity</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#DimensionProduct -->

    <owl:NamedIndividual rdf:about="&ase;DimensionProduct">
        <rdf:type rdf:resource="&ps;Dimension"/>
        <rdfs:label xml:lang="de">Produkt</rdfs:label>
        <rdfs:label xml:lang="en">Product</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">1</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">productName</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#DimensionQuote -->

    <owl:NamedIndividual rdf:about="&ase;DimensionQuote">
        <rdf:type rdf:resource="&ps;Dimension"/>
        <rdfs:label xml:lang="de">Angebot</rdfs:label>
        <rdfs:label xml:lang="en">Quote</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">6</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">quote</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#DimensionSalesPhase -->

    <owl:NamedIndividual rdf:about="&ase;DimensionSalesPhase">
        <rdf:type rdf:resource="&ps;Dimension"/>
        <rdfs:label xml:lang="de">Verkaufsphase</rdfs:label>
        <rdfs:label xml:lang="en">Sales Phase</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">5</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">salesPhase</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#DimensionYearQuarter -->

    <owl:NamedIndividual rdf:about="&ase;DimensionYearQuarter">
        <rdf:type rdf:resource="&ps;Dimension"/>
        <rdfs:label xml:lang="de">Quartal</rdfs:label>
        <rdfs:label xml:lang="en">Quarter</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">4</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">yearQuarter</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#MeasureActivity -->

    <owl:NamedIndividual rdf:about="&ase;MeasureActivity">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Activity</rdfs:label>
        <rdfs:label xml:lang="en">Aktivität</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">1</ps:sequenceID>
        <ps:measureGroup rdf:datatype="&xsd;integer">1</ps:measureGroup>
        <ps:value rdf:datatype="&xsd;string">activity</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#MeasureExtractionNegative -->

    <owl:NamedIndividual rdf:about="&ase;MeasureExtractionNegative">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="de">Negative Kommentare</rdfs:label>
        <rdfs:label xml:lang="en">Negative Sentiment</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">4</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">extractionNegativeSentiment</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#MeasureExtractionPositive -->

    <owl:NamedIndividual rdf:about="&ase;MeasureExtractionPositive">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="de">Positive Kommentare</rdfs:label>
        <rdfs:label xml:lang="en">Positive Sentiment</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">3</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">extractionPositiveSentiment</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#MeasureExtractionProblem -->

    <owl:NamedIndividual rdf:about="&ase;MeasureExtractionProblem">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="de">Probleme</rdfs:label>
        <rdfs:label xml:lang="en">Problems</rdfs:label>
        <ps:value rdf:datatype="&xsd;string">extractionProblem</ps:value>
        <ps:sequenceID xml:lang="en">2</ps:sequenceID>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#MeasureExtractionRequests -->

    <owl:NamedIndividual rdf:about="&ase;MeasureExtractionRequests">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="de">Fordernde Kommentare</rdfs:label>
        <rdfs:label xml:lang="en">Requests</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">1</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">extractionRequests</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#MeasureLost -->

    <owl:NamedIndividual rdf:about="&ase;MeasureLost">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Lost</rdfs:label>
        <ps:measureGroup rdf:datatype="&xsd;int">1</ps:measureGroup>
        <ps:sequenceID rdf:datatype="&xsd;int">1</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">lost</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#MeasureMood -->

    <owl:NamedIndividual rdf:about="&ase;MeasureMood">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="de">Stimmung</rdfs:label>
        <rdfs:label xml:lang="en">Mood</rdfs:label>
        <ps:measureGroup rdf:datatype="&xsd;integer">2</ps:measureGroup>
        <ps:sequenceID rdf:datatype="&xsd;integer">2</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">mood</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#MeasureOpen -->

    <owl:NamedIndividual rdf:about="&ase;MeasureOpen">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Open</rdfs:label>
        <ps:measureGroup rdf:datatype="&xsd;int">1</ps:measureGroup>
        <ps:sequenceID rdf:datatype="&xsd;int">3</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">rOpen</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#MeasurePrice -->

    <owl:NamedIndividual rdf:about="&ase;MeasurePrice">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="de">Preis</rdfs:label>
        <rdfs:label xml:lang="en">Price</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">3</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">price</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#MeasureVolume -->

    <owl:NamedIndividual rdf:about="&ase;MeasureVolume">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="de">Volumen</rdfs:label>
        <rdfs:label xml:lang="en">Volume</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">1</ps:sequenceID>
        <ps:value>volume</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#MeasureWeightedVolumeGroup1 -->

    <owl:NamedIndividual rdf:about="&ase;MeasureWeightedVolumeGroup1">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="de">Gewichtetes Volumen</rdfs:label>
        <rdfs:label xml:lang="en">Weighted Volume</rdfs:label>
        <ps:measureGroup rdf:datatype="&xsd;integer">1</ps:measureGroup>
        <ps:sequenceID rdf:datatype="&xsd;integer">3</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">weightedVolume</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#MeasureWeightedVolumeGroup3 -->

    <owl:NamedIndividual rdf:about="&ase;MeasureWeightedVolumeGroup3">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="de">Gewichtetes Volumen</rdfs:label>
        <rdfs:label xml:lang="en">Weighted Volume</rdfs:label>
        <ps:measureGroup rdf:datatype="&xsd;integer">3</ps:measureGroup>
        <ps:sequenceID rdf:datatype="&xsd;integer">3</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">weightedVolume</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#MeasureWon -->

    <owl:NamedIndividual rdf:about="&ase;MeasureWon">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Won</rdfs:label>
        <ps:measureGroup rdf:datatype="&xsd;int">1</ps:measureGroup>
        <ps:sequenceID rdf:datatype="&xsd;int">2</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">won</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#MeasureYearQuarter -->

    <owl:NamedIndividual rdf:about="&ase;MeasureYearQuarter">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="de">Quartal</rdfs:label>
        <rdfs:label xml:lang="en">Quarter</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">4</ps:sequenceID>
        <ps:value rdf:datatype="&xsd;string">yearQuarter</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#OpportunityReportTopOpportunitiesPerVolume -->

    <owl:NamedIndividual rdf:about="&ase;OpportunityReportTopOpportunitiesPerVolume">
        <rdf:type rdf:resource="&as;OpportunityReport"/>
        <rdfs:label xml:lang="de">Top 7 Verkaufsgelegenheiten nach Volumen</rdfs:label>
        <rdfs:label xml:lang="en">Top 7 Opportunities per Volume</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">BAR_HORIZONTAL</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
prefix afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
prefix as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
prefix as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;

CONSTRUCT {
  ?uuid a as-ext:OpportunitiesPerVolumeData;
      ps:orderBy ?orderBy;
      a ps:Data;
      as-ext:volume ?vol;
      as-ext:opportunity ?comment;
      as-ext:opportunityId ?oppId.
} WHERE {
  {
      SELECT ?opp ?vol ?comment ?oppId
      WHERE {
        ?opp a as:Opportunity.
        ?opp as:opportunityVolume ?volume.
        ?opp ps:objectName ?comment.
        ?opp  as:hasSalesDocumentStatus ?status .
        BIND(str(?opp) as ?oppId).
        BIND(xsd:decimal(?volume) as ?vol).
        FILTER(?status != as:LOST).
      }
      ORDER BY DESC(?vol)
      LIMIT 7
  }
  BIND(afn:uuid() as ?uuid).
  BIND(2147483647 - ?vol as ?orderBy)
}</ps:sparql>
        <ps:hasDimension rdf:resource="&ase;DimensionOpportunity"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureVolume"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/application-schema-ext.owl#QuoteReportTopQuotesPerPrice -->

    <owl:NamedIndividual rdf:about="&ase;QuoteReportTopQuotesPerPrice">
        <rdf:type rdf:resource="&as;QuoteReport"/>
        <rdfs:label xml:lang="de">Top 7 Angebote nach Volumen</rdfs:label>
        <rdfs:label xml:lang="en">Top 7 Quotes by Volume</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">BAR_HORIZONTAL</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
prefix afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
prefix as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
prefix as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;

CONSTRUCT {
      ?uuid a as-ext:QuotesPerPriceData;
            ps:orderBy ?orderBy;
            a ps:Data;
            as-ext:price ?vol;
            as-ext:quote ?comment;
            as-ext:quoteId ?quoteId.
} WHERE {
  {
      SELECT ?quote ?vol ?comment ?quoteId
      WHERE {
        ?quote a as:Quote.
        ?quote as:includesDocumentHeaderPriceItem ?item.
        ?item as:documentHeaderPrice ?price.
        ?quote ps:objectName ?comment.
        ?quote  as:hasSalesDocumentStatus ?status .
        BIND(fn:floor(xsd:decimal(?price)) as ?vol).
        BIND(str(?quote) as ?quoteId).
        FILTER(?status != as:LOST).
      }
      ORDER BY DESC(?vol)
      LIMIT 7
  }
  BIND(afn:uuid() as ?uuid).
  BIND(2147483647 - ?vol as ?orderBy)
}</ps:sparql>
        <ps:hasDimension rdf:resource="&ase;DimensionQuote"/>
        <ps:hasMeasure rdf:resource="&ase;MeasurePrice"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#AnalyticReportMetalStampingGlobal -->

    <owl:NamedIndividual rdf:about="&rs;AnalyticReportMetalStampingGlobal">
        <rdf:type rdf:resource="&as;AnalyticReport"/>
        <rdfs:label xml:lang="en">Analytic Report Metal Stamping Global</rdfs:label>
        <reportFileName rdf:datatype="&xsd;string">AnalyticReportMetalStampingGlobal</reportFileName>
        <reportDescription rdf:datatype="&xsd;string">Download excel for retrieving quote data based on Metal Stamping.</reportDescription>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX ase: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
  ?uuid a rs:AnalyticData;
      ps:orderBy ?orderBy;
      a ps:Data;
      rs:rCompanyName ?companyname;
      rs:rQuoteDateOfExpiry ?expirydate;
      rs:rQuoteAwardedDate ?awardeddate;
      rs:rQuoteLostDate ?lostdate;
      rs:accountName ?accountname;
      ps:objectName ?projectname;
      rs:rQuoteBusinessSeg ?seg;
      rs:industryName ?industryname;
      rs:rMetalParts ?metalparts;
      #rs:rPlasticParts ?plasticparts;
      rs:toolCost ?toolcost;
      rs:rAnnualVolume ?annualvolume;
      rs:rCostPerSet ?costperset;
      rs:rYearlySales ?yearlysales;
      rs:gmm ?gmm;
      rs:pgmm ?pgmm;
      rs:copa ?copa;
      rs:pcopa ?pcopa;
      rs:gm ?gm;
      rs:pgm ?pgm;
      rs:rQuoteSOPDate ?sopdate;
      rs:rProductLife ?prodlife;
      rs:rProductType ?prodtype;
      rs:rAwarded ?accepted;
      rs:rLost ?lost;
      rs:rPending ?pending;
      rs:rBenchMark ?benchmark;
      rs:rCurrentFY ?currentfy;
      rs:rYear1 ?year1;
      rs:rYear2 ?year2;
      rs:rYear3 ?year3;
      rs:rYear4 ?year4;
      rs:count ?count.
} WHERE
{
  {
      SELECT ?companyname ?expirydate ?awardeddate ?lostdate ?accountname ?projectname ?industryname ?seg ?metalparts ?toolcost ?annualvolume ?costperset ?yearlysales ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm ?sopdate ?prodlife ?prodtype ?accepted ?lost ?pending ?benchmark ?year1 ?year2 ?year3 ?year4 ?currentfy ?orderBy
      {
        {
            select distinct ?partNumber ?companyname ?expirydate ?awardeddate ?lostdate ?accountname ?projectname ?industryname ?seg ?metalparts ?toolcost ?annualvolume ?costperset ?yearlysales ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm ?sopdate ?prodlife ?prodtype ?accepted ?lost ?pending ?benchmark ?year1 ?year2 ?year3 ?year4 ?currentfy
            {
            #company
            BIND(xsd:string(&quot;Global&quot;) AS ?companyname)
            #QuotedMonth
            ?quote as:salesDocumentDateOfExpiry ?eDate.
            BIND (xsd:dateTime(?eDate) AS ?expirydate).
            #BIND(xsd:decimal(xsd:string(CONCAT(STR(YEAR(?expirydate)),STR(MONTH(?expirydate))))) AS ?dateOrderBy)
            #Status
            ?quote as:hasSalesDocumentStatus ?status .
            #quoteType
            ?quote as:hasSalesDocumentType ?quoteType.
            #AwardedDate&amp;LostDate
            ?quote ase:zQuoteClosedDate ?closedate.
            BIND(xsd:string(CONCAT(STR(DAY(?closedate)),&quot;/&quot;,STR(MONTH(?closedate)),&quot;/&quot;,STR(YEAR(?closedate)))) AS ?cdateStr)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:ACCEPTED,?cdateStr,&quot;&quot;) as ?awardeddate)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:REJECTED,?cdateStr,&quot;&quot;) as ?lostdate)
            #Customer
            ?quote as:quoteContainedBy ?account.
            ?account ps:objectName ?accountname.
            #ProjectName
            ?quote ps:objectName ?projectname.
            #Industry
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            #MetalParts
            BIND(xsd:int(1) AS ?metalparts)
            #SOPDate
            OPTIONAL{?quote ase:zQuoteSOPDate ?sDate.}
            BIND (IF(BOUND(?sDate),xsd:dateTime(?sDate),xsd:dateTime(&quot;&quot;)) AS ?sopdate)
            #ProductLife
            OPTIONAL{?quote ase:zQuoteProductLifeSpan ?prodlifespan.}
            BIND(IF(BOUND(?prodlifespan),xsd:decimal(?prodlifespan/12),xsd:decimal(&quot;&quot;)) as ?prodlife) .
            #ProductType
            OPTIONAL{?quote ase:zQuoteNewOrReplacement ?ptype.}
            BIND(IF(BOUND(?ptype),xsd:string(?ptype),xsd:string(&quot;&quot;)) as ?prodtype) .

            #Seg
            OPTIONAL{?quote ase:zQuoteBusinessSegment ?bseg.}
            BIND(IF(BOUND(?bseg),xsd:string(?bseg),xsd:string(&quot;&quot;)) as ?seg) .

            #Current Fiscal Year
            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.
            ?fy ps:objectName ?currentfy.

            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:salesItemOptional ?co.
            ?salesitem as:isProduct pci:MetalStamping.
            ?salesitem as:includesConfigItem ?metalstamping.
            ?metalstamping pcsm:metalStampingCOPAUSD ?copa.
            ?metalstamping pcsm:metalStampingGMUSD ?gm.
            ?metalstamping pcsm:metalStampingGMMUSD ?gmm.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
            ?metalstamping pcs:metalStampingCostPerSetMRBUSD ?costperset.
            OPTIONAL{?metalstamping pcsm:metalStampingYear1 ?y1.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear2 ?y2.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear3 ?y3.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear4 ?y4.}
            #Annaul Volume
            ?metalstamping pcs:metalStampingQtyMth ?qtymth.
            BIND(xsd:int(?qtymth*12) AS ?annualvolume).
            BIND(xsd:decimal(xsd:decimal(?copa) / xsd:decimal(?totalcost)) as ?pcopa) .
            BIND(xsd:decimal(xsd:decimal(?gmm) / xsd:decimal(?totalcost)) as ?pgmm) .
            BIND(xsd:decimal(xsd:decimal(?gm) / xsd:decimal(?totalcost)) as ?pgm) .
            BIND(xsd:decimal(?qtymth*12*?costperset) as ?yearlysales).
          OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}


            #BenchMark
            BIND(IF(?quoteType= ai:BenchMarking,1,&quot;-&quot;) AS ?benchmark).
            #Awarded&amp;Lost&amp;Pending
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:ACCEPTED, 1, &quot;-&quot;) as ?accepted)
            BIND(IF((?quoteType != ai:BenchMarking &amp;&amp; ?co = false &amp;&amp; ?status = as:ACCEPTED) || (?quoteType != ai:BenchMarking &amp;&amp; ?status =as:REJECTED), 1, &quot;-&quot;) as ?lost)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:APPROVED, 1, &quot;-&quot;) as ?pending)
            #Year1/2/3/4
            BIND(IF(BOUND(?y1),xsd:decimal(?y1),xsd:decimal(&quot;&quot;)) as ?year1) .
            BIND(IF(BOUND(?y2),xsd:decimal(?y2),xsd:decimal(&quot;&quot;)) as ?year2) .
            BIND(IF(BOUND(?y3),xsd:decimal(?y3),xsd:decimal(&quot;&quot;)) as ?year3) .
            BIND(IF(BOUND(?y4),xsd:decimal(?y4),xsd:decimal(&quot;&quot;)) as ?year4) .

            FILTER(?expirydate &gt;= ?fyStartDate &amp;&amp; ?expirydate &lt; ?fyEndDate)
            FILTER(?status != as:OPEN)
            }
        }
  UNION
        {
            select distinct ?companyname ?expirydate ?awardeddate ?lostdate ?accountname ?projectname ?industryname ?seg ?metalparts ?toolcost ?annualvolume ?costperset ?yearlysales ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm ?sopdate ?prodlife ?prodtype ?accepted ?lost ?pending ?benchmark ?year1 ?year2 ?year3 ?year4 ?currentfy
            {
            #company
            BIND(xsd:string(&quot;Global&quot;) AS ?companyname)
            #QuotedMonth
            ?quote as:salesDocumentDateOfExpiry ?eDate.
            BIND (xsd:dateTime(?eDate) AS ?expirydate).
            #BIND(xsd:decimal(xsd:string(CONCAT(STR(YEAR(?expirydate)),STR(MONTH(?expirydate))))) AS ?dateOrderBy)
            #Status
            ?quote as:hasSalesDocumentStatus ?status .
            #quoteType
            ?quote as:hasSalesDocumentType ?quoteType.
            #AwardedDate&amp;LostDate
            ?quote ase:zQuoteClosedDate ?closedate.
            BIND(xsd:string(CONCAT(STR(DAY(?closedate)),&quot;/&quot;,STR(MONTH(?closedate)),&quot;/&quot;,STR(YEAR(?closedate)))) AS ?cdateStr)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:ACCEPTED,?cdateStr,&quot;&quot;) as ?awardeddate)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:REJECTED,?cdateStr,&quot;&quot;) as ?lostdate)
            #Customer
            ?quote as:quoteContainedBy ?account.
            ?account ps:objectName ?accountname.
            #ProjectName
            ?quote ps:objectName ?projectname.
            #Industry
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            #MetalParts
            #BIND(xsd:int(1) AS ?metalparts)

            #SOPDate
            OPTIONAL{?quote ase:zQuoteSOPDate ?sDate.}
            BIND (IF(BOUND(?sDate),xsd:dateTime(?sDate),xsd:dateTime(&quot;&quot;)) AS ?sopdate)
            #ProductLife
            OPTIONAL{?quote ase:zQuoteProductLifeSpan ?prodlifespan.}
            BIND(IF(BOUND(?prodlifespan),xsd:decimal(?prodlifespan/12),xsd:decimal(0)) as ?prodlife) .
            #ProductType
            OPTIONAL{?quote ase:zQuoteNewOrReplacement ?ptype.}
            BIND(IF(BOUND(?ptype),xsd:string(?ptype),xsd:string(&quot;&quot;)) as ?prodtype) .

            #Seg
            OPTIONAL{?quote ase:zQuoteBusinessSegment ?bseg.}
            BIND(IF(BOUND(?bseg),xsd:string(?bseg),xsd:string(&quot;&quot;)) as ?seg) .

            #Current Fiscal Year
            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.
            ?fy ps:objectName ?currentfy.

            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:salesItemOptional ?co.
            ?salesitem as:includesSalesItem ?minorSi.
            ?salesitem as:isProduct pci:Assembly.
            ?minorSi as:isProduct pci:MetalStamping.
            ?minorSi as:includesConfigItem ?metalstamping.
            ?metalstamping pcsm:metalStampingCOPAUSD ?copa.
            ?metalstamping pcsm:metalStampingGMUSD ?gm.
            ?metalstamping pcsm:metalStampingGMMUSD ?gmm.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
            OPTIONAL{?metalstamping pcsm:metalStampingYear1 ?y1.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear2 ?y2.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear3 ?y3.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear4 ?y4.}
            #Annaul Volume
            ?metalstamping pcs:metalStampingQtyMth ?qtymth.
            BIND(xsd:int(?qtymth*12) AS ?annualvolume).
            ?metalstamping pcs:metalStampingCostPerSetMRBUSD ?costperset.
            BIND(xsd:decimal(xsd:decimal(?copa) / xsd:decimal(?totalcost)) as ?pcopa) .
            BIND(xsd:decimal(xsd:decimal(?gmm) / xsd:decimal(?totalcost)) as ?pgmm) .
            BIND(xsd:decimal(xsd:decimal(?gm) / xsd:decimal(?totalcost)) as ?pgm) .
            BIND(xsd:decimal(?qtymth*12*?costperset) as ?yearlysales).
            OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}



            #BenchMark
            BIND(IF(?quoteType= ai:BenchMarking,1,&quot;-&quot;) AS ?benchmark).
            #Awarded&amp;Lost&amp;Pending
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:ACCEPTED, 1, &quot;-&quot;) as ?accepted)
            BIND(IF((?quoteType != ai:BenchMarking &amp;&amp; ?co = false &amp;&amp; ?status = as:ACCEPTED) || (?quoteType != ai:BenchMarking &amp;&amp; ?status =as:REJECTED), 1, &quot;-&quot;) as ?lost)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:APPROVED, 1, &quot;-&quot;) as ?pending)
            #Year1/2/3/4
            BIND(IF(BOUND(?y1),xsd:decimal(?y1),xsd:decimal(&quot;&quot;)) as ?year1) .
            BIND(IF(BOUND(?y2),xsd:decimal(?y2),xsd:decimal(&quot;&quot;)) as ?year2) .
            BIND(IF(BOUND(?y3),xsd:decimal(?y3),xsd:decimal(&quot;&quot;)) as ?year3) .
            BIND(IF(BOUND(?y4),xsd:decimal(?y4),xsd:decimal(&quot;&quot;)) as ?year4) .

            FILTER(?expirydate &gt;= ?fyStartDate &amp;&amp; ?expirydate &lt; ?fyEndDate)
            FILTER(?status != as:OPEN)
            }
        }
  #sorting
         BIND(xsd:int(xsd:string(CONCAT(STR(YEAR(?expirydate)),STR(MONTH(?expirydate))))) AS ?orderBy)
      } ORDER BY ?projectname

}
  BIND(afn:uuid() as ?uuid).
}
</ps:sparql>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#AnalyticReportMetalStampingHITL -->

    <owl:NamedIndividual rdf:about="&rs;AnalyticReportMetalStampingHITL">
        <rdf:type rdf:resource="&as;AnalyticReport"/>
        <rdfs:label xml:lang="en">Analytic Report Metal Stamping HITL</rdfs:label>
        <reportFileName rdf:datatype="&xsd;string">AnalyticReportMetalStampingHITL</reportFileName>
        <reportDescription rdf:datatype="&xsd;string">Download excel for retrieving quote data based on Metal Stamping (HITL)</reportDescription>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX ase: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
  ?uuid a rs:AnalyticData;
      ps:orderBy ?orderBy;
      a ps:Data;
      rs:rCompanyName ?companyname;
      rs:rQuoteDateOfExpiry ?expirydate;
      rs:rQuoteAwardedDate ?awardeddate;
      rs:rQuoteLostDate ?lostdate;
      rs:accountName ?accountname;
      ps:objectName ?projectname;
      rs:rQuoteBusinessSeg ?seg;
      rs:industryName ?industryname;
      rs:rMetalParts ?metalparts;
      #rs:rPlasticParts ?plasticparts;
      rs:toolCost ?toolcost;
      rs:rAnnualVolume ?annualvolume;
      rs:rCostPerSet ?costperset;
      rs:rYearlySales ?yearlysales;
      rs:gmm ?gmm;
      rs:pgmm ?pgmm;
      rs:copa ?copa;
      rs:pcopa ?pcopa;
      rs:gm ?gm;
      rs:pgm ?pgm;
      rs:rQuoteSOPDate ?sopdate;
      rs:rProductLife ?prodlife;
      rs:rProductType ?prodtype;
      rs:rAwarded ?accepted;
      rs:rLost ?lost;
      rs:rPending ?pending;
      rs:rBenchMark ?benchmark;
      rs:rCurrentFY ?currentfy;
      rs:rYear1 ?year1;
      rs:rYear2 ?year2;
      rs:rYear3 ?year3;
      rs:rYear4 ?year4;
      rs:count ?count.
} WHERE
{
  {
      SELECT ?companyname ?expirydate ?awardeddate ?lostdate ?accountname ?projectname ?industryname ?seg ?metalparts ?toolcost ?annualvolume ?costperset ?yearlysales ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm ?sopdate ?prodlife ?prodtype ?accepted ?lost ?pending ?benchmark ?year1 ?year2 ?year3 ?year4 ?currentfy ?orderBy
      {
        {
            select distinct ?partNumber ?companyname ?expirydate ?awardeddate ?lostdate ?accountname ?projectname ?industryname ?seg ?metalparts ?toolcost ?annualvolume ?costperset ?yearlysales ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm ?sopdate ?prodlife ?prodtype ?accepted ?lost ?pending ?benchmark ?year1 ?year2 ?year3 ?year4 ?currentfy
            {
            #company
            ?quote as:containsCompany ?company.
            ?company ps:objectName ?companyname.
            #QuotedMonth
            ?quote as:salesDocumentDateOfExpiry ?eDate.
            BIND (xsd:dateTime(?eDate) AS ?expirydate).
            #BIND(xsd:decimal(xsd:string(CONCAT(STR(YEAR(?expirydate)),STR(MONTH(?expirydate))))) AS ?dateOrderBy)
            #Status
            ?quote as:hasSalesDocumentStatus ?status .
            #quoteType
            ?quote as:hasSalesDocumentType ?quoteType.
            #AwardedDate&amp;LostDate
            ?quote ase:zQuoteClosedDate ?closedate.
            BIND(xsd:string(CONCAT(STR(DAY(?closedate)),&quot;/&quot;,STR(MONTH(?closedate)),&quot;/&quot;,STR(YEAR(?closedate)))) AS ?cdateStr)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:ACCEPTED,?cdateStr,&quot;&quot;) as ?awardeddate)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:REJECTED,?cdateStr,&quot;&quot;) as ?lostdate)
            #Customer
            ?quote as:quoteContainedBy ?account.
            ?account ps:objectName ?accountname.
            #ProjectName
            ?quote ps:objectName ?projectname.
            #Industry
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            #MetalParts
            BIND(xsd:int(1) AS ?metalparts)
            #SOPDate
            OPTIONAL{?quote ase:zQuoteSOPDate ?sDate.}
            BIND (IF(BOUND(?sDate),xsd:dateTime(?sDate),xsd:dateTime(&quot;&quot;)) AS ?sopdate)
            #ProductLife
            OPTIONAL{?quote ase:zQuoteProductLifeSpan ?prodlifespan.}
            BIND(IF(BOUND(?prodlifespan),xsd:decimal(?prodlifespan/12),xsd:decimal(&quot;&quot;)) as ?prodlife) .
            #ProductType
            OPTIONAL{?quote ase:zQuoteNewOrReplacement ?ptype.}
            BIND(IF(BOUND(?ptype),xsd:string(?ptype),xsd:string(&quot;&quot;)) as ?prodtype) .

            #Seg
            OPTIONAL{?quote ase:zQuoteBusinessSegment ?bseg.}
            BIND(IF(BOUND(?bseg),xsd:string(?bseg),xsd:string(&quot;&quot;)) as ?seg) .

            #Current Fiscal Year
            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.
            ?fy ps:objectName ?currentfy.

            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:salesItemOptional ?co.
            ?salesitem as:isProduct pci:MetalStamping.
            ?salesitem as:includesConfigItem ?metalstamping.
            ?metalstamping pcsm:metalStampingCOPAUSD ?copa.
            ?metalstamping pcsm:metalStampingGMUSD ?gm.
            ?metalstamping pcsm:metalStampingGMMUSD ?gmm.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
            ?metalstamping pcs:metalStampingCostPerSetMRBUSD ?costperset.
            OPTIONAL{?metalstamping pcsm:metalStampingYear1 ?y1.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear2 ?y2.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear3 ?y3.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear4 ?y4.}
            #Annaul Volume
            ?metalstamping pcs:metalStampingQtyMth ?qtymth.
            BIND(xsd:int(?qtymth*12) AS ?annualvolume).
            BIND(xsd:decimal(xsd:decimal(?copa) / xsd:decimal(?totalcost)) as ?pcopa) .
            BIND(xsd:decimal(xsd:decimal(?gmm) / xsd:decimal(?totalcost)) as ?pgmm) .
            BIND(xsd:decimal(xsd:decimal(?gm) / xsd:decimal(?totalcost)) as ?pgm) .
            BIND(xsd:decimal(?qtymth*12*?costperset) as ?yearlysales).
          OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}


            #BenchMark
            BIND(IF(?quoteType= ai:BenchMarking,1,&quot;-&quot;) AS ?benchmark).
            #Awarded&amp;Lost&amp;Pending
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:ACCEPTED, 1, &quot;-&quot;) as ?accepted)
            BIND(IF((?quoteType != ai:BenchMarking &amp;&amp; ?co = false &amp;&amp; ?status = as:ACCEPTED) || (?quoteType != ai:BenchMarking &amp;&amp; ?status =as:REJECTED), 1, &quot;-&quot;) as ?lost)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:APPROVED, 1, &quot;-&quot;) as ?pending)
            #Year1/2/3/4
            BIND(IF(BOUND(?y1),xsd:decimal(?y1),xsd:decimal(&quot;&quot;)) as ?year1) .
            BIND(IF(BOUND(?y2),xsd:decimal(?y2),xsd:decimal(&quot;&quot;)) as ?year2) .
            BIND(IF(BOUND(?y3),xsd:decimal(?y3),xsd:decimal(&quot;&quot;)) as ?year3) .
            BIND(IF(BOUND(?y4),xsd:decimal(?y4),xsd:decimal(&quot;&quot;)) as ?year4) .

            FILTER(?expirydate &gt;= ?fyStartDate &amp;&amp; ?expirydate &lt; ?fyEndDate)
            FILTER(?status != as:OPEN)
            FILTER(?company = ai:AmtekHATL)
            }
        }
  UNION
        {
            select distinct ?companyname ?expirydate ?awardeddate ?lostdate ?accountname ?projectname ?industryname ?seg ?metalparts ?toolcost ?annualvolume ?costperset ?yearlysales ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm ?sopdate ?prodlife ?prodtype ?accepted ?lost ?pending ?benchmark ?year1 ?year2 ?year3 ?year4 ?currentfy
            {
            #company
            ?quote as:containsCompany ?company.
            ?company ps:objectName ?companyname.
            #QuotedMonth
            ?quote as:salesDocumentDateOfExpiry ?eDate.
            BIND (xsd:dateTime(?eDate) AS ?expirydate).
            #BIND(xsd:decimal(xsd:string(CONCAT(STR(YEAR(?expirydate)),STR(MONTH(?expirydate))))) AS ?dateOrderBy)
            #Status
            ?quote as:hasSalesDocumentStatus ?status .
            #quoteType
            ?quote as:hasSalesDocumentType ?quoteType.
            #AwardedDate&amp;LostDate
            ?quote ase:zQuoteClosedDate ?closedate.
            BIND(xsd:string(CONCAT(STR(DAY(?closedate)),&quot;/&quot;,STR(MONTH(?closedate)),&quot;/&quot;,STR(YEAR(?closedate)))) AS ?cdateStr)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:ACCEPTED,?cdateStr,&quot;&quot;) as ?awardeddate)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:REJECTED,?cdateStr,&quot;&quot;) as ?lostdate)
            #Customer
            ?quote as:quoteContainedBy ?account.
            ?account ps:objectName ?accountname.
            #ProjectName
            ?quote ps:objectName ?projectname.
            #Industry
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            #MetalParts
            #BIND(xsd:int(1) AS ?metalparts)

            #SOPDate
            OPTIONAL{?quote ase:zQuoteSOPDate ?sDate.}
            BIND (IF(BOUND(?sDate),xsd:dateTime(?sDate),xsd:dateTime(&quot;&quot;)) AS ?sopdate)
            #ProductLife
            OPTIONAL{?quote ase:zQuoteProductLifeSpan ?prodlifespan.}
            BIND(IF(BOUND(?prodlifespan),xsd:decimal(?prodlifespan/12),xsd:decimal(0)) as ?prodlife) .
            #ProductType
            OPTIONAL{?quote ase:zQuoteNewOrReplacement ?ptype.}
            BIND(IF(BOUND(?ptype),xsd:string(?ptype),xsd:string(&quot;&quot;)) as ?prodtype) .

            #Seg
            OPTIONAL{?quote ase:zQuoteBusinessSegment ?bseg.}
            BIND(IF(BOUND(?bseg),xsd:string(?bseg),xsd:string(&quot;&quot;)) as ?seg) .

            #Current Fiscal Year
            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.
            ?fy ps:objectName ?currentfy.

            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:salesItemOptional ?co.
            ?salesitem as:includesSalesItem ?minorSi.
            ?salesitem as:isProduct pci:Assembly.
            ?minorSi as:isProduct pci:MetalStamping.
            ?minorSi as:includesConfigItem ?metalstamping.
            ?metalstamping pcsm:metalStampingCOPAUSD ?copa.
            ?metalstamping pcsm:metalStampingGMUSD ?gm.
            ?metalstamping pcsm:metalStampingGMMUSD ?gmm.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
            OPTIONAL{?metalstamping pcsm:metalStampingYear1 ?y1.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear2 ?y2.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear3 ?y3.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear4 ?y4.}
            #Annaul Volume
            ?metalstamping pcs:metalStampingQtyMth ?qtymth.
            BIND(xsd:int(?qtymth*12) AS ?annualvolume).
            ?metalstamping pcs:metalStampingCostPerSetMRBUSD ?costperset.
            BIND(xsd:decimal(xsd:decimal(?copa) / xsd:decimal(?totalcost)) as ?pcopa) .
            BIND(xsd:decimal(xsd:decimal(?gmm) / xsd:decimal(?totalcost)) as ?pgmm) .
            BIND(xsd:decimal(xsd:decimal(?gm) / xsd:decimal(?totalcost)) as ?pgm) .
            BIND(xsd:decimal(?qtymth*12*?costperset) as ?yearlysales).
            OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}



            #BenchMark
            BIND(IF(?quoteType= ai:BenchMarking,1,&quot;-&quot;) AS ?benchmark).
            #Awarded&amp;Lost&amp;Pending
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:ACCEPTED, 1, &quot;-&quot;) as ?accepted)
            BIND(IF((?quoteType != ai:BenchMarking &amp;&amp; ?co = false &amp;&amp; ?status = as:ACCEPTED) || (?quoteType != ai:BenchMarking &amp;&amp; ?status =as:REJECTED), 1, &quot;-&quot;) as ?lost)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:APPROVED, 1, &quot;-&quot;) as ?pending)
            #Year1/2/3/4
            BIND(IF(BOUND(?y1),xsd:decimal(?y1),xsd:decimal(&quot;&quot;)) as ?year1) .
            BIND(IF(BOUND(?y2),xsd:decimal(?y2),xsd:decimal(&quot;&quot;)) as ?year2) .
            BIND(IF(BOUND(?y3),xsd:decimal(?y3),xsd:decimal(&quot;&quot;)) as ?year3) .
            BIND(IF(BOUND(?y4),xsd:decimal(?y4),xsd:decimal(&quot;&quot;)) as ?year4) .

            FILTER(?expirydate &gt;= ?fyStartDate &amp;&amp; ?expirydate &lt; ?fyEndDate)
            FILTER(?status != as:OPEN)
            FILTER(?company = ai:AmtekHATL)
            }
        }

         #sorting
         BIND(xsd:int(xsd:string(CONCAT(STR(YEAR(?expirydate)),STR(MONTH(?expirydate))))) AS ?orderBy)

      } ORDER BY ?projectname

}
  BIND(afn:uuid() as ?uuid).
}
</ps:sparql>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#AnalyticReportMetalStampingIHIL -->

    <owl:NamedIndividual rdf:about="&rs;AnalyticReportMetalStampingIHIL">
        <rdf:type rdf:resource="&as;AnalyticReport"/>
        <rdfs:label xml:lang="en">Analytic Report Metal Stamping IHIL</rdfs:label>
        <reportFileName rdf:datatype="&xsd;string">AnalyticReportMetalStampingIHIL</reportFileName>
        <reportDescription rdf:datatype="&xsd;string">Download excel for retrieving quote data based on Metal Stamping (IHIL)</reportDescription>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX ase: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
  ?uuid a rs:AnalyticData;
      ps:orderBy ?orderBy;
      a ps:Data;
      rs:rCompanyName ?companyname;
      rs:rQuoteDateOfExpiry ?expirydate;
      rs:rQuoteAwardedDate ?awardeddate;
      rs:rQuoteLostDate ?lostdate;
      rs:accountName ?accountname;
      ps:objectName ?projectname;
      rs:rQuoteBusinessSeg ?seg;
      rs:industryName ?industryname;
      rs:rMetalParts ?metalparts;
      #rs:rPlasticParts ?plasticparts;
      rs:toolCost ?toolcost;
      rs:rAnnualVolume ?annualvolume;
      rs:rCostPerSet ?costperset;
      rs:rYearlySales ?yearlysales;
      rs:gmm ?gmm;
      rs:pgmm ?pgmm;
      rs:copa ?copa;
      rs:pcopa ?pcopa;
      rs:gm ?gm;
      rs:pgm ?pgm;
      rs:rQuoteSOPDate ?sopdate;
      rs:rProductLife ?prodlife;
      rs:rProductType ?prodtype;
      rs:rAwarded ?accepted;
      rs:rLost ?lost;
      rs:rPending ?pending;
      rs:rBenchMark ?benchmark;
      rs:rCurrentFY ?currentfy;
      rs:rYear1 ?year1;
      rs:rYear2 ?year2;
      rs:rYear3 ?year3;
      rs:rYear4 ?year4;
      rs:count ?count.
} WHERE
{
  {
      SELECT ?companyname ?expirydate ?awardeddate ?lostdate ?accountname ?projectname ?industryname ?seg ?metalparts ?toolcost ?annualvolume ?costperset ?yearlysales ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm ?sopdate ?prodlife ?prodtype ?accepted ?lost ?pending ?benchmark ?year1 ?year2 ?year3 ?year4 ?currentfy ?orderBy
      {
        {
            select distinct ?partNumber ?companyname ?expirydate ?awardeddate ?lostdate ?accountname ?projectname ?industryname ?seg ?metalparts ?toolcost ?annualvolume ?costperset ?yearlysales ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm ?sopdate ?prodlife ?prodtype ?accepted ?lost ?pending ?benchmark ?year1 ?year2 ?year3 ?year4 ?currentfy
            {
            #company
            ?quote as:containsCompany ?company.
            ?company ps:objectName ?companyname.
            #QuotedMonth
            ?quote as:salesDocumentDateOfExpiry ?eDate.
            BIND (xsd:dateTime(?eDate) AS ?expirydate).
            #BIND(xsd:decimal(xsd:string(CONCAT(STR(YEAR(?expirydate)),STR(MONTH(?expirydate))))) AS ?dateOrderBy)
            #Status
            ?quote as:hasSalesDocumentStatus ?status .
            #quoteType
            ?quote as:hasSalesDocumentType ?quoteType.
            #AwardedDate&amp;LostDate
            ?quote ase:zQuoteClosedDate ?closedate.
            BIND(xsd:string(CONCAT(STR(DAY(?closedate)),&quot;/&quot;,STR(MONTH(?closedate)),&quot;/&quot;,STR(YEAR(?closedate)))) AS ?cdateStr)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:ACCEPTED,?cdateStr,&quot;&quot;) as ?awardeddate)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:REJECTED,?cdateStr,&quot;&quot;) as ?lostdate)
            #Customer
            ?quote as:quoteContainedBy ?account.
            ?account ps:objectName ?accountname.
            #ProjectName
            ?quote ps:objectName ?projectname.
            #Industry
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            #MetalParts
            BIND(xsd:int(1) AS ?metalparts)
            #SOPDate
            OPTIONAL{?quote ase:zQuoteSOPDate ?sDate.}
            BIND (IF(BOUND(?sDate),xsd:dateTime(?sDate),xsd:dateTime(&quot;&quot;)) AS ?sopdate)
            #ProductLife
            OPTIONAL{?quote ase:zQuoteProductLifeSpan ?prodlifespan.}
            BIND(IF(BOUND(?prodlifespan),xsd:decimal(?prodlifespan/12),xsd:decimal(&quot;&quot;)) as ?prodlife) .
            #ProductType
            OPTIONAL{?quote ase:zQuoteNewOrReplacement ?ptype.}
            BIND(IF(BOUND(?ptype),xsd:string(?ptype),xsd:string(&quot;&quot;)) as ?prodtype) .

            #Seg
            OPTIONAL{?quote ase:zQuoteBusinessSegment ?bseg.}
            BIND(IF(BOUND(?bseg),xsd:string(?bseg),xsd:string(&quot;&quot;)) as ?seg) .

            #Current Fiscal Year
            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.
            ?fy ps:objectName ?currentfy.

            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:salesItemOptional ?co.
            ?salesitem as:isProduct pci:MetalStamping.
            ?salesitem as:includesConfigItem ?metalstamping.
            ?metalstamping pcsm:metalStampingCOPAUSD ?copa.
            ?metalstamping pcsm:metalStampingGMUSD ?gm.
            ?metalstamping pcsm:metalStampingGMMUSD ?gmm.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
            ?metalstamping pcs:metalStampingCostPerSetMRBUSD ?costperset.
            OPTIONAL{?metalstamping pcsm:metalStampingYear1 ?y1.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear2 ?y2.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear3 ?y3.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear4 ?y4.}
            #Annaul Volume
            ?metalstamping pcs:metalStampingQtyMth ?qtymth.
            BIND(xsd:int(?qtymth*12) AS ?annualvolume).
            BIND(xsd:decimal(xsd:decimal(?copa) / xsd:decimal(?totalcost)) as ?pcopa) .
            BIND(xsd:decimal(xsd:decimal(?gmm) / xsd:decimal(?totalcost)) as ?pgmm) .
            BIND(xsd:decimal(xsd:decimal(?gm) / xsd:decimal(?totalcost)) as ?pgm) .
            BIND(xsd:decimal(?qtymth*12*?costperset) as ?yearlysales).
          OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}


            #BenchMark
            BIND(IF(?quoteType= ai:BenchMarking,1,&quot;-&quot;) AS ?benchmark).
            #Awarded&amp;Lost&amp;Pending
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:ACCEPTED, 1, &quot;-&quot;) as ?accepted)
            BIND(IF((?quoteType != ai:BenchMarking &amp;&amp; ?co = false &amp;&amp; ?status = as:ACCEPTED) || (?quoteType != ai:BenchMarking &amp;&amp; ?status =as:REJECTED), 1, &quot;-&quot;) as ?lost)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:APPROVED, 1, &quot;-&quot;) as ?pending)
            #Year1/2/3/4
            BIND(IF(BOUND(?y1),xsd:decimal(?y1),xsd:decimal(&quot;&quot;)) as ?year1) .
            BIND(IF(BOUND(?y2),xsd:decimal(?y2),xsd:decimal(&quot;&quot;)) as ?year2) .
            BIND(IF(BOUND(?y3),xsd:decimal(?y3),xsd:decimal(&quot;&quot;)) as ?year3) .
            BIND(IF(BOUND(?y4),xsd:decimal(?y4),xsd:decimal(&quot;&quot;)) as ?year4) .

            FILTER(?expirydate &gt;= ?fyStartDate &amp;&amp; ?expirydate &lt; ?fyEndDate)
            FILTER(?status != as:OPEN)
            FILTER(?company = ai:AmtekAHIL)
            }
        }
  UNION
        {
            select distinct ?companyname ?expirydate ?awardeddate ?lostdate ?accountname ?projectname ?industryname ?seg ?metalparts ?toolcost ?annualvolume ?costperset ?yearlysales ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm ?sopdate ?prodlife ?prodtype ?accepted ?lost ?pending ?benchmark ?year1 ?year2 ?year3 ?year4 ?currentfy
            {
            #company
            ?quote as:containsCompany ?company.
            ?company ps:objectName ?companyname.
            #QuotedMonth
            ?quote as:salesDocumentDateOfExpiry ?eDate.
            BIND (xsd:dateTime(?eDate) AS ?expirydate).
            #BIND(xsd:decimal(xsd:string(CONCAT(STR(YEAR(?expirydate)),STR(MONTH(?expirydate))))) AS ?dateOrderBy)
            #Status
            ?quote as:hasSalesDocumentStatus ?status .
            #quoteType
            ?quote as:hasSalesDocumentType ?quoteType.
            #AwardedDate&amp;LostDate
            ?quote ase:zQuoteClosedDate ?closedate.
            BIND(xsd:string(CONCAT(STR(DAY(?closedate)),&quot;/&quot;,STR(MONTH(?closedate)),&quot;/&quot;,STR(YEAR(?closedate)))) AS ?cdateStr)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:ACCEPTED,?cdateStr,&quot;&quot;) as ?awardeddate)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:REJECTED,?cdateStr,&quot;&quot;) as ?lostdate)
            #Customer
            ?quote as:quoteContainedBy ?account.
            ?account ps:objectName ?accountname.
            #ProjectName
            ?quote ps:objectName ?projectname.
            #Industry
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            #MetalParts
            #BIND(xsd:int(1) AS ?metalparts)

            #SOPDate
            OPTIONAL{?quote ase:zQuoteSOPDate ?sDate.}
            BIND (IF(BOUND(?sDate),xsd:dateTime(?sDate),xsd:dateTime(&quot;&quot;)) AS ?sopdate)
            #ProductLife
            OPTIONAL{?quote ase:zQuoteProductLifeSpan ?prodlifespan.}
            BIND(IF(BOUND(?prodlifespan),xsd:decimal(?prodlifespan/12),xsd:decimal(0)) as ?prodlife) .
            #ProductType
            OPTIONAL{?quote ase:zQuoteNewOrReplacement ?ptype.}
            BIND(IF(BOUND(?ptype),xsd:string(?ptype),xsd:string(&quot;&quot;)) as ?prodtype) .

            #Seg
            OPTIONAL{?quote ase:zQuoteBusinessSegment ?bseg.}
            BIND(IF(BOUND(?bseg),xsd:string(?bseg),xsd:string(&quot;&quot;)) as ?seg) .

            #Current Fiscal Year
            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.
            ?fy ps:objectName ?currentfy.

            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:salesItemOptional ?co.
            ?salesitem as:includesSalesItem ?minorSi.
            ?salesitem as:isProduct pci:Assembly.
            ?minorSi as:isProduct pci:MetalStamping.
            ?minorSi as:includesConfigItem ?metalstamping.
            ?metalstamping pcsm:metalStampingCOPAUSD ?copa.
            ?metalstamping pcsm:metalStampingGMUSD ?gm.
            ?metalstamping pcsm:metalStampingGMMUSD ?gmm.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
            OPTIONAL{?metalstamping pcsm:metalStampingYear1 ?y1.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear2 ?y2.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear3 ?y3.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear4 ?y4.}
            #Annaul Volume
            ?metalstamping pcs:metalStampingQtyMth ?qtymth.
            BIND(xsd:int(?qtymth*12) AS ?annualvolume).
            ?metalstamping pcs:metalStampingCostPerSetMRBUSD ?costperset.
            BIND(xsd:decimal(xsd:decimal(?copa) / xsd:decimal(?totalcost)) as ?pcopa) .
            BIND(xsd:decimal(xsd:decimal(?gmm) / xsd:decimal(?totalcost)) as ?pgmm) .
            BIND(xsd:decimal(xsd:decimal(?gm) / xsd:decimal(?totalcost)) as ?pgm) .
            BIND(xsd:decimal(?qtymth*12*?costperset) as ?yearlysales).
            OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}



            #BenchMark
            BIND(IF(?quoteType= ai:BenchMarking,1,&quot;-&quot;) AS ?benchmark).
            #Awarded&amp;Lost&amp;Pending
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:ACCEPTED, 1, &quot;-&quot;) as ?accepted)
            BIND(IF((?quoteType != ai:BenchMarking &amp;&amp; ?co = false &amp;&amp; ?status = as:ACCEPTED) || (?quoteType != ai:BenchMarking &amp;&amp; ?status =as:REJECTED), 1, &quot;-&quot;) as ?lost)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:APPROVED, 1, &quot;-&quot;) as ?pending)
            #Year1/2/3/4
            BIND(IF(BOUND(?y1),xsd:decimal(?y1),xsd:decimal(&quot;&quot;)) as ?year1) .
            BIND(IF(BOUND(?y2),xsd:decimal(?y2),xsd:decimal(&quot;&quot;)) as ?year2) .
            BIND(IF(BOUND(?y3),xsd:decimal(?y3),xsd:decimal(&quot;&quot;)) as ?year3) .
            BIND(IF(BOUND(?y4),xsd:decimal(?y4),xsd:decimal(&quot;&quot;)) as ?year4) .

            FILTER(?expirydate &gt;= ?fyStartDate &amp;&amp; ?expirydate &lt; ?fyEndDate)
            FILTER(?status != as:OPEN)
            FILTER(?company = ai:AmtekAHIL)
            }
        }

         #sorting
         BIND(xsd:int(xsd:string(CONCAT(STR(YEAR(?expirydate)),STR(MONTH(?expirydate))))) AS ?orderBy)

      } ORDER BY ?projectname

}
  BIND(afn:uuid() as ?uuid).
}
</ps:sparql>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#AnalyticReportMetalStampingIPT -->

    <owl:NamedIndividual rdf:about="&rs;AnalyticReportMetalStampingIPT">
        <rdf:type rdf:resource="&as;AnalyticReport"/>
        <rdfs:label xml:lang="en">Analytic Report Metal Stamping IPT</rdfs:label>
        <reportFileName rdf:datatype="&xsd;string">AnalyticReportMetalStampingIPT</reportFileName>
        <reportDescription rdf:datatype="&xsd;string">Download excel for retrieving quote data based on Metal Stamping (IPT)</reportDescription>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX ase: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
  ?uuid a rs:AnalyticData;
      ps:orderBy ?orderBy;
      a ps:Data;
      rs:rCompanyName ?companyname;
      rs:rQuoteDateOfExpiry ?expirydate;
      rs:rQuoteAwardedDate ?awardeddate;
      rs:rQuoteLostDate ?lostdate;
      rs:accountName ?accountname;
      ps:objectName ?projectname;
      rs:rQuoteBusinessSeg ?seg;
      rs:industryName ?industryname;
      rs:rMetalParts ?metalparts;
      #rs:rPlasticParts ?plasticparts;
      rs:toolCost ?toolcost;
      rs:rAnnualVolume ?annualvolume;
      rs:rCostPerSet ?costperset;
      rs:rYearlySales ?yearlysales;
      rs:gmm ?gmm;
      rs:pgmm ?pgmm;
      rs:copa ?copa;
      rs:pcopa ?pcopa;
      rs:gm ?gm;
      rs:pgm ?pgm;
      rs:rQuoteSOPDate ?sopdate;
      rs:rProductLife ?prodlife;
      rs:rProductType ?prodtype;
      rs:rAwarded ?accepted;
      rs:rLost ?lost;
      rs:rPending ?pending;
      rs:rBenchMark ?benchmark;
      rs:rCurrentFY ?currentfy;
      rs:rYear1 ?year1;
      rs:rYear2 ?year2;
      rs:rYear3 ?year3;
      rs:rYear4 ?year4;
      rs:count ?count.
} WHERE
{
  {
      SELECT ?companyname ?expirydate ?awardeddate ?lostdate ?accountname ?projectname ?industryname ?seg ?metalparts ?toolcost ?annualvolume ?costperset ?yearlysales ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm ?sopdate ?prodlife ?prodtype ?accepted ?lost ?pending ?benchmark ?year1 ?year2 ?year3 ?year4 ?currentfy ?orderBy
      {
        {
            select distinct ?partNumber ?companyname ?expirydate ?awardeddate ?lostdate ?accountname ?projectname ?industryname ?seg ?metalparts ?toolcost ?annualvolume ?costperset ?yearlysales ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm ?sopdate ?prodlife ?prodtype ?accepted ?lost ?pending ?benchmark ?year1 ?year2 ?year3 ?year4 ?currentfy
            {
            #company
            ?quote as:containsCompany ?company.
            ?company ps:objectName ?companyname.
            #QuotedMonth
            ?quote as:salesDocumentDateOfExpiry ?eDate.
            BIND (xsd:dateTime(?eDate) AS ?expirydate).
            #BIND(xsd:decimal(xsd:string(CONCAT(STR(YEAR(?expirydate)),STR(MONTH(?expirydate))))) AS ?dateOrderBy)
            #Status
            ?quote as:hasSalesDocumentStatus ?status .
            #quoteType
            ?quote as:hasSalesDocumentType ?quoteType.
            #AwardedDate&amp;LostDate
            ?quote ase:zQuoteClosedDate ?closedate.
            BIND(xsd:string(CONCAT(STR(DAY(?closedate)),&quot;/&quot;,STR(MONTH(?closedate)),&quot;/&quot;,STR(YEAR(?closedate)))) AS ?cdateStr)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:ACCEPTED,?cdateStr,&quot;&quot;) as ?awardeddate)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:REJECTED,?cdateStr,&quot;&quot;) as ?lostdate)
            #Customer
            ?quote as:quoteContainedBy ?account.
            ?account ps:objectName ?accountname.
            #ProjectName
            ?quote ps:objectName ?projectname.
            #Industry
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            #MetalParts
            BIND(xsd:int(1) AS ?metalparts)
            #SOPDate
            OPTIONAL{?quote ase:zQuoteSOPDate ?sDate.}
            BIND (IF(BOUND(?sDate),xsd:dateTime(?sDate),xsd:dateTime(&quot;&quot;)) AS ?sopdate)
            #ProductLife
            OPTIONAL{?quote ase:zQuoteProductLifeSpan ?prodlifespan.}
            BIND(IF(BOUND(?prodlifespan),xsd:decimal(?prodlifespan/12),xsd:decimal(&quot;&quot;)) as ?prodlife) .
            #ProductType
            OPTIONAL{?quote ase:zQuoteNewOrReplacement ?ptype.}
            BIND(IF(BOUND(?ptype),xsd:string(?ptype),xsd:string(&quot;&quot;)) as ?prodtype) .

            #Seg
            OPTIONAL{?quote ase:zQuoteBusinessSegment ?bseg.}
            BIND(IF(BOUND(?bseg),xsd:string(?bseg),xsd:string(&quot;&quot;)) as ?seg) .

            #Current Fiscal Year
            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.
            ?fy ps:objectName ?currentfy.

            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:salesItemOptional ?co.
            ?salesitem as:isProduct pci:MetalStamping.
            ?salesitem as:includesConfigItem ?metalstamping.
            ?metalstamping pcsm:metalStampingCOPAUSD ?copa.
            ?metalstamping pcsm:metalStampingGMUSD ?gm.
            ?metalstamping pcsm:metalStampingGMMUSD ?gmm.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
            ?metalstamping pcs:metalStampingCostPerSetMRBUSD ?costperset.
            OPTIONAL{?metalstamping pcsm:metalStampingYear1 ?y1.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear2 ?y2.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear3 ?y3.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear4 ?y4.}
            #Annaul Volume
            ?metalstamping pcs:metalStampingQtyMth ?qtymth.
            BIND(xsd:int(?qtymth*12) AS ?annualvolume).
            BIND(xsd:decimal(xsd:decimal(?copa) / xsd:decimal(?totalcost)) as ?pcopa) .
            BIND(xsd:decimal(xsd:decimal(?gmm) / xsd:decimal(?totalcost)) as ?pgmm) .
            BIND(xsd:decimal(xsd:decimal(?gm) / xsd:decimal(?totalcost)) as ?pgm) .
            BIND(xsd:decimal(?qtymth*12*?costperset) as ?yearlysales).
          OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}


            #BenchMark
            BIND(IF(?quoteType= ai:BenchMarking,1,&quot;-&quot;) AS ?benchmark).
            #Awarded&amp;Lost&amp;Pending
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:ACCEPTED, 1, &quot;-&quot;) as ?accepted)
            BIND(IF((?quoteType != ai:BenchMarking &amp;&amp; ?co = false &amp;&amp; ?status = as:ACCEPTED) || (?quoteType != ai:BenchMarking &amp;&amp; ?status =as:REJECTED), 1, &quot;-&quot;) as ?lost)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:APPROVED, 1, &quot;-&quot;) as ?pending)
            #Year1/2/3/4
            BIND(IF(BOUND(?y1),xsd:decimal(?y1),xsd:decimal(&quot;&quot;)) as ?year1) .
            BIND(IF(BOUND(?y2),xsd:decimal(?y2),xsd:decimal(&quot;&quot;)) as ?year2) .
            BIND(IF(BOUND(?y3),xsd:decimal(?y3),xsd:decimal(&quot;&quot;)) as ?year3) .
            BIND(IF(BOUND(?y4),xsd:decimal(?y4),xsd:decimal(&quot;&quot;)) as ?year4) .

            FILTER(?expirydate &gt;= ?fyStartDate &amp;&amp; ?expirydate &lt; ?fyEndDate)
            FILTER(?status != as:OPEN)
            FILTER(?company = ai:Amtek)
            }
        }
  UNION
        {
            select distinct ?companyname ?expirydate ?awardeddate ?lostdate ?accountname ?projectname ?industryname ?seg ?metalparts ?toolcost ?annualvolume ?costperset ?yearlysales ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm ?sopdate ?prodlife ?prodtype ?accepted ?lost ?pending ?benchmark ?year1 ?year2 ?year3 ?year4 ?currentfy
            {
            #company
            ?quote as:containsCompany ?company.
            ?company ps:objectName ?companyname.
            #QuotedMonth
            ?quote as:salesDocumentDateOfExpiry ?eDate.
            BIND (xsd:dateTime(?eDate) AS ?expirydate).
            #BIND(xsd:decimal(xsd:string(CONCAT(STR(YEAR(?expirydate)),STR(MONTH(?expirydate))))) AS ?dateOrderBy)
            #Status
            ?quote as:hasSalesDocumentStatus ?status .
            #quoteType
            ?quote as:hasSalesDocumentType ?quoteType.
            #AwardedDate&amp;LostDate
            ?quote ase:zQuoteClosedDate ?closedate.
            BIND(xsd:string(CONCAT(STR(DAY(?closedate)),&quot;/&quot;,STR(MONTH(?closedate)),&quot;/&quot;,STR(YEAR(?closedate)))) AS ?cdateStr)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:ACCEPTED,?cdateStr,&quot;&quot;) as ?awardeddate)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:REJECTED,?cdateStr,&quot;&quot;) as ?lostdate)
            #Customer
            ?quote as:quoteContainedBy ?account.
            ?account ps:objectName ?accountname.
            #ProjectName
            ?quote ps:objectName ?projectname.
            #Industry
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            #MetalParts
            #BIND(xsd:int(1) AS ?metalparts)

            #SOPDate
            OPTIONAL{?quote ase:zQuoteSOPDate ?sDate.}
            BIND (IF(BOUND(?sDate),xsd:dateTime(?sDate),xsd:dateTime(&quot;&quot;)) AS ?sopdate)
            #ProductLife
            OPTIONAL{?quote ase:zQuoteProductLifeSpan ?prodlifespan.}
            BIND(IF(BOUND(?prodlifespan),xsd:decimal(?prodlifespan/12),xsd:decimal(0)) as ?prodlife) .
            #ProductType
            OPTIONAL{?quote ase:zQuoteNewOrReplacement ?ptype.}
            BIND(IF(BOUND(?ptype),xsd:string(?ptype),xsd:string(&quot;&quot;)) as ?prodtype) .

            #Seg
            OPTIONAL{?quote ase:zQuoteBusinessSegment ?bseg.}
            BIND(IF(BOUND(?bseg),xsd:string(?bseg),xsd:string(&quot;&quot;)) as ?seg) .

            #Current Fiscal Year
            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.
            ?fy ps:objectName ?currentfy.

            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:salesItemOptional ?co.
            ?salesitem as:includesSalesItem ?minorSi.
            ?salesitem as:isProduct pci:Assembly.
            ?minorSi as:isProduct pci:MetalStamping.
            ?minorSi as:includesConfigItem ?metalstamping.
            ?metalstamping pcsm:metalStampingCOPAUSD ?copa.
            ?metalstamping pcsm:metalStampingGMUSD ?gm.
            ?metalstamping pcsm:metalStampingGMMUSD ?gmm.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
            OPTIONAL{?metalstamping pcsm:metalStampingYear1 ?y1.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear2 ?y2.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear3 ?y3.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear4 ?y4.}
            #Annaul Volume
            ?metalstamping pcs:metalStampingQtyMth ?qtymth.
            BIND(xsd:int(?qtymth*12) AS ?annualvolume).
            ?metalstamping pcs:metalStampingCostPerSetMRBUSD ?costperset.
            BIND(xsd:decimal(xsd:decimal(?copa) / xsd:decimal(?totalcost)) as ?pcopa) .
            BIND(xsd:decimal(xsd:decimal(?gmm) / xsd:decimal(?totalcost)) as ?pgmm) .
            BIND(xsd:decimal(xsd:decimal(?gm) / xsd:decimal(?totalcost)) as ?pgm) .
            BIND(xsd:decimal(?qtymth*12*?costperset) as ?yearlysales).
            OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}



            #BenchMark
            BIND(IF(?quoteType= ai:BenchMarking,1,&quot;-&quot;) AS ?benchmark).
            #Awarded&amp;Lost&amp;Pending
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:ACCEPTED, 1, &quot;-&quot;) as ?accepted)
            BIND(IF((?quoteType != ai:BenchMarking &amp;&amp; ?co = false &amp;&amp; ?status = as:ACCEPTED) || (?quoteType != ai:BenchMarking &amp;&amp; ?status =as:REJECTED), 1, &quot;-&quot;) as ?lost)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:APPROVED, 1, &quot;-&quot;) as ?pending)
            #Year1/2/3/4
            BIND(IF(BOUND(?y1),xsd:decimal(?y1),xsd:decimal(&quot;&quot;)) as ?year1) .
            BIND(IF(BOUND(?y2),xsd:decimal(?y2),xsd:decimal(&quot;&quot;)) as ?year2) .
            BIND(IF(BOUND(?y3),xsd:decimal(?y3),xsd:decimal(&quot;&quot;)) as ?year3) .
            BIND(IF(BOUND(?y4),xsd:decimal(?y4),xsd:decimal(&quot;&quot;)) as ?year4) .

            FILTER(?expirydate &gt;= ?fyStartDate &amp;&amp; ?expirydate &lt; ?fyEndDate)
            FILTER(?status != as:OPEN)
            FILTER(?company = ai:Amtek)
            }
        }

         #sorting
         BIND(xsd:int(xsd:string(CONCAT(STR(YEAR(?expirydate)),STR(MONTH(?expirydate))))) AS ?orderBy)

      } ORDER BY ?projectname

}
  BIND(afn:uuid() as ?uuid).
}
</ps:sparql>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#AnalyticReportMetalStampingTCC -->

    <owl:NamedIndividual rdf:about="&rs;AnalyticReportMetalStampingTCC">
        <rdf:type rdf:resource="&as;AnalyticReport"/>
        <rdfs:label xml:lang="en">Analytic Report Metal Stamping TCC</rdfs:label>
        <reportFileName rdf:datatype="&xsd;string">AnalyticReportMetalStampingTCC</reportFileName>
        <reportDescription rdf:datatype="&xsd;string">Download excel for retrieving quote data based on Metal Stamping (TCC)</reportDescription>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX ase: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
  ?uuid a rs:AnalyticData;
      ps:orderBy ?orderBy;
      a ps:Data;
      rs:rCompanyName ?companyname;
      rs:rQuoteDateOfExpiry ?expirydate;
      rs:rQuoteAwardedDate ?awardeddate;
      rs:rQuoteLostDate ?lostdate;
      rs:accountName ?accountname;
      ps:objectName ?projectname;
      rs:rQuoteBusinessSeg ?seg;
      rs:industryName ?industryname;
      rs:rMetalParts ?metalparts;
      #rs:rPlasticParts ?plasticparts;
      rs:toolCost ?toolcost;
      rs:rAnnualVolume ?annualvolume;
      rs:rCostPerSet ?costperset;
      rs:rYearlySales ?yearlysales;
      rs:gmm ?gmm;
      rs:pgmm ?pgmm;
      rs:copa ?copa;
      rs:pcopa ?pcopa;
      rs:gm ?gm;
      rs:pgm ?pgm;
      rs:rQuoteSOPDate ?sopdate;
      rs:rProductLife ?prodlife;
      rs:rProductType ?prodtype;
      rs:rAwarded ?accepted;
      rs:rLost ?lost;
      rs:rPending ?pending;
      rs:rBenchMark ?benchmark;
      rs:rCurrentFY ?currentfy;
      rs:rYear1 ?year1;
      rs:rYear2 ?year2;
      rs:rYear3 ?year3;
      rs:rYear4 ?year4;
      rs:count ?count.
} WHERE
{
  {
      SELECT ?companyname ?expirydate ?awardeddate ?lostdate ?accountname ?projectname ?industryname ?seg ?metalparts ?toolcost ?annualvolume ?costperset ?yearlysales ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm ?sopdate ?prodlife ?prodtype ?accepted ?lost ?pending ?benchmark ?year1 ?year2 ?year3 ?year4 ?currentfy ?orderBy
      {
        {
            select distinct ?partNumber ?companyname ?expirydate ?awardeddate ?lostdate ?accountname ?projectname ?industryname ?seg ?metalparts ?toolcost ?annualvolume ?costperset ?yearlysales ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm ?sopdate ?prodlife ?prodtype ?accepted ?lost ?pending ?benchmark ?year1 ?year2 ?year3 ?year4 ?currentfy
            {
            #company
            ?quote as:containsCompany ?company.
            ?company ps:objectName ?companyname.
            #QuotedMonth
            ?quote as:salesDocumentDateOfExpiry ?eDate.
            BIND (xsd:dateTime(?eDate) AS ?expirydate).
            #BIND(xsd:decimal(xsd:string(CONCAT(STR(YEAR(?expirydate)),STR(MONTH(?expirydate))))) AS ?dateOrderBy)
            #Status
            ?quote as:hasSalesDocumentStatus ?status .
            #quoteType
            ?quote as:hasSalesDocumentType ?quoteType.
            #AwardedDate&amp;LostDate
            ?quote ase:zQuoteClosedDate ?closedate.
            BIND(xsd:string(CONCAT(STR(DAY(?closedate)),&quot;/&quot;,STR(MONTH(?closedate)),&quot;/&quot;,STR(YEAR(?closedate)))) AS ?cdateStr)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:ACCEPTED,?cdateStr,&quot;&quot;) as ?awardeddate)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:REJECTED,?cdateStr,&quot;&quot;) as ?lostdate)
            #Customer
            ?quote as:quoteContainedBy ?account.
            ?account ps:objectName ?accountname.
            #ProjectName
            ?quote ps:objectName ?projectname.
            #Industry
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            #MetalParts
            BIND(xsd:int(1) AS ?metalparts)
            #SOPDate
            OPTIONAL{?quote ase:zQuoteSOPDate ?sDate.}
            BIND (IF(BOUND(?sDate),xsd:dateTime(?sDate),xsd:dateTime(&quot;&quot;)) AS ?sopdate)
            #ProductLife
            OPTIONAL{?quote ase:zQuoteProductLifeSpan ?prodlifespan.}
            BIND(IF(BOUND(?prodlifespan),xsd:decimal(?prodlifespan/12),xsd:decimal(&quot;&quot;)) as ?prodlife) .
            #ProductType
            OPTIONAL{?quote ase:zQuoteNewOrReplacement ?ptype.}
            BIND(IF(BOUND(?ptype),xsd:string(?ptype),xsd:string(&quot;&quot;)) as ?prodtype) .

            #Seg
            OPTIONAL{?quote ase:zQuoteBusinessSegment ?bseg.}
            BIND(IF(BOUND(?bseg),xsd:string(?bseg),xsd:string(&quot;&quot;)) as ?seg) .

            #Current Fiscal Year
            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.
            ?fy ps:objectName ?currentfy.

            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:salesItemOptional ?co.
            ?salesitem as:isProduct pci:MetalStamping.
            ?salesitem as:includesConfigItem ?metalstamping.
            ?metalstamping pcsm:metalStampingCOPAUSD ?copa.
            ?metalstamping pcsm:metalStampingGMUSD ?gm.
            ?metalstamping pcsm:metalStampingGMMUSD ?gmm.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
            ?metalstamping pcs:metalStampingCostPerSetMRBUSD ?costperset.
            OPTIONAL{?metalstamping pcsm:metalStampingYear1 ?y1.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear2 ?y2.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear3 ?y3.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear4 ?y4.}
            #Annaul Volume
            ?metalstamping pcs:metalStampingQtyMth ?qtymth.
            BIND(xsd:int(?qtymth*12) AS ?annualvolume).
            BIND(xsd:decimal(xsd:decimal(?copa) / xsd:decimal(?totalcost)) as ?pcopa) .
            BIND(xsd:decimal(xsd:decimal(?gmm) / xsd:decimal(?totalcost)) as ?pgmm) .
            BIND(xsd:decimal(xsd:decimal(?gm) / xsd:decimal(?totalcost)) as ?pgm) .
            BIND(xsd:decimal(?qtymth*12*?costperset) as ?yearlysales).
          OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}


            #BenchMark
            BIND(IF(?quoteType= ai:BenchMarking,1,&quot;-&quot;) AS ?benchmark).
            #Awarded&amp;Lost&amp;Pending
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:ACCEPTED, 1, &quot;-&quot;) as ?accepted)
            BIND(IF((?quoteType != ai:BenchMarking &amp;&amp; ?co = false &amp;&amp; ?status = as:ACCEPTED) || (?quoteType != ai:BenchMarking &amp;&amp; ?status =as:REJECTED), 1, &quot;-&quot;) as ?lost)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:APPROVED, 1, &quot;-&quot;) as ?pending)
            #Year1/2/3/4
            BIND(IF(BOUND(?y1),xsd:decimal(?y1),xsd:decimal(&quot;&quot;)) as ?year1) .
            BIND(IF(BOUND(?y2),xsd:decimal(?y2),xsd:decimal(&quot;&quot;)) as ?year2) .
            BIND(IF(BOUND(?y3),xsd:decimal(?y3),xsd:decimal(&quot;&quot;)) as ?year3) .
            BIND(IF(BOUND(?y4),xsd:decimal(?y4),xsd:decimal(&quot;&quot;)) as ?year4) .

            FILTER(?expirydate &gt;= ?fyStartDate &amp;&amp; ?expirydate &lt; ?fyEndDate)
            FILTER(?status != as:OPEN)
            FILTER(?company = ai:AmtekTCC)
            }
        }
  UNION
        {
            select distinct ?companyname ?expirydate ?awardeddate ?lostdate ?accountname ?projectname ?industryname ?seg ?metalparts ?toolcost ?annualvolume ?costperset ?yearlysales ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm ?sopdate ?prodlife ?prodtype ?accepted ?lost ?pending ?benchmark ?year1 ?year2 ?year3 ?year4 ?currentfy
            {
            #company
            ?quote as:containsCompany ?company.
            ?company ps:objectName ?companyname.
            #QuotedMonth
            ?quote as:salesDocumentDateOfExpiry ?eDate.
            BIND (xsd:dateTime(?eDate) AS ?expirydate).
            #BIND(xsd:decimal(xsd:string(CONCAT(STR(YEAR(?expirydate)),STR(MONTH(?expirydate))))) AS ?dateOrderBy)
            #Status
            ?quote as:hasSalesDocumentStatus ?status .
            #quoteType
            ?quote as:hasSalesDocumentType ?quoteType.
            #AwardedDate&amp;LostDate
            ?quote ase:zQuoteClosedDate ?closedate.
            BIND(xsd:string(CONCAT(STR(DAY(?closedate)),&quot;/&quot;,STR(MONTH(?closedate)),&quot;/&quot;,STR(YEAR(?closedate)))) AS ?cdateStr)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:ACCEPTED,?cdateStr,&quot;&quot;) as ?awardeddate)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?status=as:REJECTED,?cdateStr,&quot;&quot;) as ?lostdate)
            #Customer
            ?quote as:quoteContainedBy ?account.
            ?account ps:objectName ?accountname.
            #ProjectName
            ?quote ps:objectName ?projectname.
            #Industry
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            #MetalParts
            #BIND(xsd:int(1) AS ?metalparts)

            #SOPDate
            OPTIONAL{?quote ase:zQuoteSOPDate ?sDate.}
            BIND (IF(BOUND(?sDate),xsd:dateTime(?sDate),xsd:dateTime(&quot;&quot;)) AS ?sopdate)
            #ProductLife
            OPTIONAL{?quote ase:zQuoteProductLifeSpan ?prodlifespan.}
            BIND(IF(BOUND(?prodlifespan),xsd:decimal(?prodlifespan/12),xsd:decimal(0)) as ?prodlife) .
            #ProductType
            OPTIONAL{?quote ase:zQuoteNewOrReplacement ?ptype.}
            BIND(IF(BOUND(?ptype),xsd:string(?ptype),xsd:string(&quot;&quot;)) as ?prodtype) .

            #Seg
            OPTIONAL{?quote ase:zQuoteBusinessSegment ?bseg.}
            BIND(IF(BOUND(?bseg),xsd:string(?bseg),xsd:string(&quot;&quot;)) as ?seg) .

            #Current Fiscal Year
            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.
            ?fy ps:objectName ?currentfy.

            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:salesItemOptional ?co.
            ?salesitem as:includesSalesItem ?minorSi.
            ?salesitem as:isProduct pci:Assembly.
            ?minorSi as:isProduct pci:MetalStamping.
            ?minorSi as:includesConfigItem ?metalstamping.
            ?metalstamping pcsm:metalStampingCOPAUSD ?copa.
            ?metalstamping pcsm:metalStampingGMUSD ?gm.
            ?metalstamping pcsm:metalStampingGMMUSD ?gmm.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
            OPTIONAL{?metalstamping pcsm:metalStampingYear1 ?y1.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear2 ?y2.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear3 ?y3.}
            OPTIONAL{?metalstamping pcsm:metalStampingYear4 ?y4.}
            #Annaul Volume
            ?metalstamping pcs:metalStampingQtyMth ?qtymth.
            BIND(xsd:int(?qtymth*12) AS ?annualvolume).
            ?metalstamping pcs:metalStampingCostPerSetMRBUSD ?costperset.
            BIND(xsd:decimal(xsd:decimal(?copa) / xsd:decimal(?totalcost)) as ?pcopa) .
            BIND(xsd:decimal(xsd:decimal(?gmm) / xsd:decimal(?totalcost)) as ?pgmm) .
            BIND(xsd:decimal(xsd:decimal(?gm) / xsd:decimal(?totalcost)) as ?pgm) .
            BIND(xsd:decimal(?qtymth*12*?costperset) as ?yearlysales).
            OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}



            #BenchMark
            BIND(IF(?quoteType= ai:BenchMarking,1,&quot;-&quot;) AS ?benchmark).
            #Awarded&amp;Lost&amp;Pending
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:ACCEPTED, 1, &quot;-&quot;) as ?accepted)
            BIND(IF((?quoteType != ai:BenchMarking &amp;&amp; ?co = false &amp;&amp; ?status = as:ACCEPTED) || (?quoteType != ai:BenchMarking &amp;&amp; ?status =as:REJECTED), 1, &quot;-&quot;) as ?lost)
            BIND(IF(?quoteType != ai:BenchMarking &amp;&amp; ?co = true &amp;&amp; ?status = as:APPROVED, 1, &quot;-&quot;) as ?pending)
            #Year1/2/3/4
            BIND(IF(BOUND(?y1),xsd:decimal(?y1),xsd:decimal(&quot;&quot;)) as ?year1) .
            BIND(IF(BOUND(?y2),xsd:decimal(?y2),xsd:decimal(&quot;&quot;)) as ?year2) .
            BIND(IF(BOUND(?y3),xsd:decimal(?y3),xsd:decimal(&quot;&quot;)) as ?year3) .
            BIND(IF(BOUND(?y4),xsd:decimal(?y4),xsd:decimal(&quot;&quot;)) as ?year4) .

            FILTER(?expirydate &gt;= ?fyStartDate &amp;&amp; ?expirydate &lt; ?fyEndDate)
            FILTER(?status != as:OPEN)
            FILTER(?company = ai:AmtekTCC)
            }
        }

         #sorting
         BIND(xsd:int(xsd:string(CONCAT(STR(YEAR(?expirydate)),STR(MONTH(?expirydate))))) AS ?orderBy)

      } ORDER BY ?projectname

}
  BIND(afn:uuid() as ?uuid).
}
</ps:sparql>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#AnalyticReportQuoteInterplex -->

    <owl:NamedIndividual rdf:about="&rs;AnalyticReportQuoteInterplex">
        <rdf:type rdf:resource="&as;AnalyticReport"/>
        <rdfs:label xml:lang="de">Quote Analytic Report</rdfs:label>
        <rdfs:label xml:lang="en">Quote Analytic Report</rdfs:label>
        <reportDescription rdf:datatype="&xsd;string">Download excel for retrieving quote data based on Metal Stamping.</reportDescription>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
      ?uuid a rs:QuoteAnalyticData;
            a ps:Data;
            rs:quoteEffectiveDate ?date;
            rs:industryName ?industryname;
            rs:accountName ?accountname;
            ps:objectName ?projectname;
            rs:partNumber ?partnumber;
            rs:totalCost ?totalcost;
            rs:toolCost ?toolcost;
            rs:gmm ?gmm;
            rs:pgmm ?pgmm;
            rs:copa ?copa;
            rs:pcopa ?pcopa;
            rs:gm ?gm;
            rs:pgm ?pgm.
} WHERE
{
  {
      SELECT ?date ?industryname ?accountname ?projectname ?partnumber ?toolcost ?totalcost ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm
      WHERE {
      ?industry ps:objectName ?industryname.
      ?account as:hasIndustry ?industry.
      ?account ps:objectName ?accountname.
      ?quote as:quoteContainedBy ?account.
      ?quote as:quoteEffectiveDate ?quoteToDate
      BIND (xsd:dateTime(?quoteToDate) AS ?date).
      ?quote ps:objectName ?projectname.
      ?salesitem as:salesItemIncludedBy ?quote.
      ?salesitem as:isProduct ?product.
      ?salesitem as:includesConfigItem ?metalstamping.
      ?product as:includesKnowledgeBase pci:MetalStamping-KB.
      ?metalstamping pcs:partPartNumber ?partnumber.
      ?metalstamping pcsm:metalStampingCOPA ?copa.
      ?metalstamping pcsm:metalStampingGM ?gm.
      ?metalstamping pcsm:metalStampingGMM ?gmm.
      ?metalstamping pcs:metalStampingToolCostWithTransport ?toolcost.
      ?metalstamping pcs:metalStampingTotalCost ?totalcost.
      BIND(xsd:decimal(xsd:decimal(?copa) / xsd:decimal(?totalcost)) as ?pcopa) .
      BIND(xsd:decimal(xsd:decimal(?gmm) / xsd:decimal(?totalcost)) as ?pgmm) .
      BIND(xsd:decimal(xsd:decimal(?gm) / xsd:decimal(?totalcost)) as ?pgm) .
      BIND(xsd:string(?partnumber) as ?mpartnumber) .
      }
      GROUP BY ?date ?industryname ?accountname ?projectname ?partnumber ?toolcost ?totalcost ?gmm ?pgmm ?copa ?pcopa ?gm ?pgm
  }
  BIND(afn:uuid() as ?uuid).
}</ps:sparql>
        <reportFileName rdf:datatype="&xsd;string">QuoteAnalyticReport</reportFileName>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#AnalyticReportUserRoleAuthority -->

    <owl:NamedIndividual rdf:about="&rs;AnalyticReportUserRoleAuthority">
        <rdf:type rdf:resource="&as;AnalyticReport"/>
        <rdfs:label xml:lang="en">Interplex User Role Authority Report</rdfs:label>
        <reportFileName rdf:datatype="&xsd;string">AnalyticReportUserRoleAuthority</reportFileName>
        <reportDescription rdf:datatype="&xsd;string">Download Report For Interplex User Role Authority</reportDescription>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
   ?uuid a rs:UserRoleAuthorityData;
      #ps:orderBy ?userName;
      a ps:Data;
      rs:rUser ?userName;
      rs:rRole ?roleName;
      rs:rRoleAuthority ?roleAuthority;
      rs:firstName ?firstName;
      rs:lastName ?lastName;
      rs:rCompanyName ?companyName.

}
WHERE
{
  {
      SELECT ?userName ?roleName ?roleAuthority ?firstName ?lastName ?companyName
      WHERE {
         ?s rdf:type as:User.
         ?s ps:objectName ?userName.
         ?s as:hasRole ?role.
         ?role ps:objectName ?roleName.
         OPTIONAL {
            ?s as:includesPerson ?person.
            ?person as:personFirstName ?fn.
            ?person as:personLastName ?ln.}
         BIND(IF(BOUND(?fn),xsd:string(?fn),xsd:string(&quot;&quot;)) as ?firstName)
         BIND(IF(BOUND(?ln),xsd:string(?ln),xsd:string(&quot;&quot;)) as ?lastName)
         OPTIONAL{?role as:roleAuthority ?r.}
         BIND(IF(BOUND(?r),xsd:int(?r),&quot;-&quot;) as ?roleAuthority)
         OPTIONAL {?s as:containsCompany ?company.
            ?company ps:objectName ?c.
         }
         BIND(IF(BOUND(?c),xsd:string(?c),xsd:string(&quot;&quot;)) as ?companyName)
         ?s as:hasUserStatus as:USERACTIVE.
      }
      ORDER BY ?roleName

   }
   BIND(afn:uuid() as ?uuid).
}</ps:sparql>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#CisticAnalyticReport -->

    <owl:NamedIndividual rdf:about="&rs;CisticAnalyticReport">
        <rdf:type rdf:resource="&as;AnalyticReport"/>
        <rdfs:label xml:lang="de">Cummulative Sales Item Details</rdfs:label>
        <rdfs:label xml:lang="en">Cummulative Sales Item Details</rdfs:label>
        <reportFileName rdf:datatype="&xsd;string">CisticAnalyticReport</reportFileName>
        <reportDescription rdf:datatype="&xsd;string">Download excel to find out the most commonly used configuration.</reportDescription>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
    PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
    PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
    PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
    PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
    PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
    PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
    PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
    PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
    PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
    PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
    PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

    CONSTRUCT {
          ?uuid a rs:CisticAnalyticData;
          a ps:Data;
          rs:status ?quoteToStatusStr;
          rs:quoteEffectiveDate ?date;
          rs:product ?productStr;
          rs:attribute ?attributeStr;
          rs:attributeValue ?valueStr;
          rs:count ?count.
    } WHERE
    {
      {
      SELECT ?quoteToStatusStr (MIN(?effectiveDate) as ?date) ?productStr (SUM(?qtyDecimal) as ?count) ?attributeStr ?valueStr WHERE {
        ?salesItem as:salesItemIncludedBy ?quote.
        ?quote as:hasSalesDocumentStatus ?quoteToStatus
        BIND(str(?quoteToStatus) as ?quoteToStatusStr).
        ?quote as:quoteEffectiveDate ?quoteToDate
        BIND (xsd:dateTime(?quoteToDate) AS ?effectiveDate).
        ?salesItem as:isProduct ?product
        BIND(str(?product) as ?productStr).
        ?salesItem as:includesItemHeaderPriceItem ?itemHeaderPriceItem.

        ?itemHeaderPriceItem as:itemHeaderQuantity ?qty
        BIND (xsd:decimal(?qty) AS ?qtyDecimal ).

        ?salesItem as:includesConfigItem ?configItem.
        ?configItem ?attribute ?value
        BIND(str(?attribute) as ?attributeStr)
        BIND(str(?value) as ?valueStr)
        filter ( ?attribute != as:configItemError &amp;&amp;
        ?attribute != ps:objectId &amp;&amp;
        ?attribute != ps:objectName &amp;&amp;
        ?attribute != rdf:type)
      } group by ?quoteToStatusStr ?productStr ?attributeStr ?valueStr
      order by ?quoteToStatusStr ?productStr ?attributeStr
        }
        BIND(afn:uuid() as ?uuid).
    }</ps:sparql>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#CockpitReportPartsVolumePerIndustryCurrentMonth -->

    <owl:NamedIndividual rdf:about="&rs;CockpitReportPartsVolumePerIndustryCurrentMonth">
        <rdf:type rdf:resource="&as;CockpitReport"/>
        <rdfs:label xml:lang="en">Parts Volume Per Product Hierarchy Current Month (US$)</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">PIE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {
  ?uuid a rs:VolumePerIndustryData;
      a ps:Data;
      as-ext:won ?wonAmt;
      rs:rIndustry ?industryname.
} WHERE {
  {
      SELECT DISTINCT ?industryname (sum(?won) AS ?wonAmt)
      WHERE{
        {
            select distinct ?partNumber ?industryname ?won
            {
            ?quote as:quoteContainedBy ?account.
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            ?quote as:hasSalesDocumentStatus ?status.
            #awarded date
            ?quote as-ext:zQuoteClosedDate ?cdate.
            ?quote as:hasSalesDocumentType ?quotetype.
            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:isProduct pci:MetalStamping.
            ?salesitem as:includesConfigItem ?metalstamping.
            ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
            ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
            OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
            BIND(fn:floor(?totalcost*?projvol)  AS ?won)

            FILTER(?quotetype != ai:BenchMarking)
            FILTER(?status = as:ACCEPTED)
            FILTER(MONTH(?cdate) = MONTH(NOW()))
            }
        }
        UNION
        {
            select distinct ?partNumber ?industryname ?won
            {
            ?quote as:quoteContainedBy ?account.
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            ?quote as:hasSalesDocumentStatus ?status.
            #awarded date
            ?quote as-ext:zQuoteClosedDate ?cdate.
            ?quote as:hasSalesDocumentType ?quotetype.
            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:includesSalesItem ?minorSi.
            ?salesitem as:isProduct pci:Assembly.
            ?minorSi as:isProduct pci:MetalStamping.
            ?minorSi as:includesConfigItem ?metalstamping.
            ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
            ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
            OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
            BIND(fn:floor(?totalcost*?projvol)  AS ?won)

            FILTER(?quotetype != ai:BenchMarking)
            FILTER(?status = as:ACCEPTED)
            FILTER(MONTH(?cdate) = MONTH(NOW()))
            }
        }
      } GROUP BY ?industryname
  }
  BIND(afn:uuid() as ?uuid).
}
</ps:sparql>
        <ps:hasMeasure rdf:resource="&ase;MeasureWon"/>
        <ps:hasDimension rdf:resource="&rs;DimensionIndustry"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#CockpitReportPartsVolumePerIndustryYtd -->

    <owl:NamedIndividual rdf:about="&rs;CockpitReportPartsVolumePerIndustryYtd">
        <rdf:type rdf:resource="&as;CockpitReport"/>
        <rdfs:label xml:lang="en">Parts Volume Per Product Hierarchy Ytd (US$)</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">PIE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {
  ?uuid a rs:VolumePerIndustryData;
      a ps:Data;
      as-ext:won ?wonAmt;
      rs:rIndustry ?industryname.
} WHERE {
  {
      SELECT DISTINCT ?industryname (sum(?won) AS ?wonAmt)
      WHERE{
        {
            select distinct ?partNumber ?industryname ?won
            {
            ?quote as:quoteContainedBy ?account.
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            ?quote as:hasSalesDocumentStatus ?status.
            #awarded date
            ?quote as-ext:zQuoteClosedDate ?cdate.
            ?quote as:hasSalesDocumentType ?quotetype.
            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:isProduct pci:MetalStamping.
            ?salesitem as:includesConfigItem ?metalstamping.
            ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
            ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
            OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
            BIND(fn:floor(?totalcost*?projvol)  AS ?won)

            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.

            FILTER (?quotetype != ai:BenchMarking)
            FILTER (?status = as:ACCEPTED)
            FILTER(?cdate &gt;= ?fyStartDate &amp;&amp; ?cdate &lt; ?fyEndDate)
            }
        }
        UNION
        {
            select distinct ?partNumber ?industryname ?won
            {
            ?quote as:quoteContainedBy ?account.
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            ?quote as:hasSalesDocumentStatus ?status.
            #awarded date
            ?quote as-ext:zQuoteClosedDate ?cdate.
            ?quote as:hasSalesDocumentType ?quotetype.
            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:includesSalesItem ?minorSi.
            ?salesitem as:isProduct pci:Assembly.
            ?minorSi as:isProduct pci:MetalStamping.
            ?minorSi as:includesConfigItem ?metalstamping.
            ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
            ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
            OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
            BIND(fn:floor(?totalcost*?projvol)  AS ?won)

            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.

            FILTER (?quotetype != ai:BenchMarking)
            FILTER (?status = as:ACCEPTED)
            FILTER(?cdate &gt;= ?fyStartDate &amp;&amp; ?cdate &lt; ?fyEndDate)
            }
        }
      } GROUP BY ?industryname
  }
  BIND(afn:uuid() as ?uuid).

}
</ps:sparql>
        <ps:hasMeasure rdf:resource="&ase;MeasureWon"/>
        <ps:hasDimension rdf:resource="&rs;DimensionIndustry"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#CockpitReportPartsVolumePerLegalEntityCurrentMonth -->

    <owl:NamedIndividual rdf:about="&rs;CockpitReportPartsVolumePerLegalEntityCurrentMonth">
        <rdf:type rdf:resource="&as;CockpitReport"/>
        <rdfs:label xml:lang="en">Parts Volume Per Legal Entity Current Month (US$)</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">PIE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {
  ?uuid a rs:PartsVolumePerEntityData;
      a ps:Data;
      as-ext:won ?wonAmt;
      as-ext:entity ?entity.
} WHERE {
  {
      SELECT DISTINCT ?entity (sum(?won) AS ?wonAmt)
      WHERE{
        {
            select distinct ?partNumber ?entity ?won
            {
              ?quote as:containsCompany ?company.
              ?company ps:objectName ?entity.
              ?quote as:hasSalesDocumentStatus ?status.
              #awarded date
              ?quote as-ext:zQuoteClosedDate ?cdate.
              ?quote as:hasSalesDocumentType ?quotetype.
              ?salesitem as:salesItemIncludedBy ?quote.
              ?salesitem as:isProduct pci:MetalStamping.
              ?salesitem as:includesConfigItem ?metalstamping.
              ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
              ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
              OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
              BIND(fn:floor(?totalcost*?projvol)  AS ?won)

              FILTER (?quotetype != ai:BenchMarking)
              FILTER (?status = as:ACCEPTED)
              FILTER(MONTH(?cdate) = MONTH(NOW()))
            }
        }
        UNION
        {
            select distinct ?partNumber ?entity ?won
            {
              ?quote as:containsCompany ?company.
              ?company ps:objectName ?entity.
              ?quote as:hasSalesDocumentStatus ?status.
              #awarded date
              ?quote as-ext:zQuoteClosedDate ?cdate.
              ?quote as:hasSalesDocumentType ?quotetype.
              ?salesitem as:salesItemIncludedBy ?quote.
              ?salesitem as:includesSalesItem ?minorSi.
              ?salesitem as:isProduct pci:Assembly.
              ?minorSi as:isProduct pci:MetalStamping.
              ?minorSi as:includesConfigItem ?metalstamping.
              ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
              ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
              OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
              BIND(fn:floor(?totalcost*?projvol)  AS ?won)

              FILTER (?quotetype != ai:BenchMarking)
              FILTER (?status = as:ACCEPTED)
              FILTER(MONTH(?cdate) = MONTH(NOW()))
            }
        }

      } GROUP BY ?entity
  }
  BIND(afn:uuid() as ?uuid).
}
</ps:sparql>
        <ps:hasDimension rdf:resource="&ase;DimensionEntity"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureWon"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#CockpitReportPartsVolumePerLegalEntityCurrentMonthDyn -->

    <owl:NamedIndividual rdf:about="&rs;CockpitReportPartsVolumePerLegalEntityCurrentMonthDyn">
        <rdf:type rdf:resource="&as;InactiveReport"/>
        <rdfs:label xml:lang="en">Parts Volume Per Legal Entity Current Month (US$)</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">PIE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {

  ?uuid a rs:PartsVolumePerEntityData;
      a ps:Data;
      rs:valueId ?company;
      as-ext:won ?wonAmt;
      as-ext:entity ?entityname.
} WHERE {
  {
      SELECT DISTINCT ?entityname ?company (sum(?won) AS ?wonAmt)
      WHERE{
        {
            select distinct ?partNumber ?entityname ?company ?won
            {
              ?quote as:containsCompany ?entity.
              BIND (str(?entity) as ?company)
              ?entity ps:objectName ?entityname.

              ?quote as:quoteContainedBy ?account.
              ?account as:hasIndustry ?rIndustry.
              ?quote as:hasSalesDocumentStatus ?status.
              #awarded date
              ?quote as-ext:zQuoteClosedDate ?cdate.
              ?quote as:hasSalesDocumentType ?quotetype.
              ?salesitem as:salesItemIncludedBy ?quote.
              ?salesitem as:isProduct pci:MetalStamping.
              ?salesitem as:includesConfigItem ?metalstamping.
              ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
              ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
              OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
              BIND(fn:floor(?totalcost*?projvol)  AS ?won)

              #         FILTER (?quotetype != ai:BenchMarking)
              #          FILTER (?status = as:ACCEPTED)
              #         FILTER(MONTH(?cdate) = MONTH(NOW()))
            }
        }
        UNION
        {
            select distinct ?partNumber ?entityname ?company ?won
            {
              ?quote as:containsCompany ?entity.
              BIND (str(?entity) as ?company)
              ?entity ps:objectName ?entityname.
              ?quote as:quoteContainedBy ?account.
              ?account as:hasIndustry ?rIndustry.
              ?quote as:hasSalesDocumentStatus ?status.
              #awarded date
              ?quote as-ext:zQuoteClosedDate ?cdate.
              ?quote as:hasSalesDocumentType ?quotetype.
              ?salesitem as:salesItemIncludedBy ?quote.
              ?salesitem as:includesSalesItem ?minorSi.
              ?salesitem as:isProduct pci:Assembly.
              ?minorSi as:isProduct pci:MetalStamping.
              ?minorSi as:includesConfigItem ?metalstamping.
              ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
              ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
              OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
              BIND(fn:floor(?totalcost*?projvol)  AS ?won)

              # FILTER (?quotetype != ai:BenchMarking)
              #  FILTER (?status = as:ACCEPTED)
              #   FILTER(MONTH(?cdate) = MONTH(NOW()))
            }
        }

      } GROUP BY ?entityname ?company
  }
  BIND(afn:uuid() as ?uuid).

}
</ps:sparql>
        <ps:hasDimension rdf:resource="&ase;DimensionEntity"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureWon"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#CockpitReportPartsVolumePerLegalEntityYtd -->

    <owl:NamedIndividual rdf:about="&rs;CockpitReportPartsVolumePerLegalEntityYtd">
        <rdf:type rdf:resource="&as;CockpitReport"/>
        <rdfs:label xml:lang="en">Parts Volume Per Legal Entity Ytd (US$)</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">PIE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {
  ?uuid a rs:PartsVolumePerEntityData;
      a ps:Data;
      as-ext:won ?wonAmt;
      as-ext:entity ?entity.
} WHERE {
  {
      SELECT DISTINCT ?entity (sum(?won) AS ?wonAmt)
      WHERE{
        {
            select distinct ?partNumber ?entity ?won
            {
              ?quote as:containsCompany ?company.
              ?company ps:objectName ?entity.
              ?quote as:hasSalesDocumentStatus ?status.
              #awarded date
              ?quote as-ext:zQuoteClosedDate ?cdate.
              ?quote as:hasSalesDocumentType ?quotetype.
              ?salesitem as:salesItemIncludedBy ?quote.
              ?salesitem as:isProduct pci:MetalStamping.
              ?salesitem as:includesConfigItem ?metalstamping.
              ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
              ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
              OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
              BIND(fn:floor(?totalcost*?projvol)  AS ?won)

              ?fy a as:FiscalPeriod.
              ?fy as:fiscalPeriodEndDate ?fyEndDate.
              ?fy as:fiscalPeriodStartDate ?fyStartDate.

              FILTER (?quotetype != ai:BenchMarking)
              FILTER (?status = as:ACCEPTED)
              FILTER(?cdate &gt;= ?fyStartDate &amp;&amp; ?cdate &lt; ?fyEndDate)
            }
        }
        UNION
        {
            select distinct ?partNumber ?entity ?won
            {
              ?quote as:containsCompany ?company.
              ?company ps:objectName ?entity.
              ?quote as:hasSalesDocumentStatus ?status.
              #awarded date
              ?quote as-ext:zQuoteClosedDate ?cdate.
              ?quote as:hasSalesDocumentType ?quotetype.
              ?salesitem as:salesItemIncludedBy ?quote.
              ?salesitem as:includesSalesItem ?minorSi.
              ?salesitem as:isProduct pci:Assembly.
              ?minorSi as:isProduct pci:MetalStamping.
              ?minorSi as:includesConfigItem ?metalstamping.
              ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
              ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
              OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
              BIND(fn:floor(?totalcost*?projvol)  AS ?won)

              ?fy a as:FiscalPeriod.
              ?fy as:fiscalPeriodEndDate ?fyEndDate.
              ?fy as:fiscalPeriodStartDate ?fyStartDate.

              FILTER (?quotetype != ai:BenchMarking)
              FILTER (?status = as:ACCEPTED)
              FILTER(?cdate &gt;= ?fyStartDate &amp;&amp; ?cdate &lt; ?fyEndDate)}
        }
      } GROUP BY ?entity
  }
  BIND(afn:uuid() as ?uuid).
}
</ps:sparql>
        <rdfs:comment>Parts – (Volume Per Legal Entity) Year To Date</rdfs:comment>
        <ps:hasDimension rdf:resource="&ase;DimensionEntity"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureWon"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#CockpitReportProjectVolumeofAwardedJobYtd -->

    <owl:NamedIndividual rdf:about="&rs;CockpitReportProjectVolumeofAwardedJobYtd">
        <rdf:type rdf:resource="&as;CockpitReport"/>
        <rdfs:label xml:lang="en">Project Volume of Awarded jobs current financial Year</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">COLUMN</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
  ?uuid a as-ext:QuotesPerPriceData;
      ps:orderBy ?orderBy;
      a ps:Data;
      as-ext:volume ?total;
      as-ext:quote ?quotename;
} WHERE {
  {
      SELECT DISTINCT ?quotename (sum(?vol) as ?total)
      WHERE{
        {
            select distinct ?partNumber ?quotename ?vol
            {
            ?quote a as:Quote.
            ?quote ps:objectName ?quotename.
            #status
            ?quote  as:hasSalesDocumentStatus ?status .
            #awarded date
            ?quote as-ext:zQuoteClosedDate ?cdate.
            ?quote as:hasSalesDocumentType ?quotetype.
            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:isProduct pci:MetalStamping.
            ?salesitem as:includesConfigItem ?metalstamping.
            ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
            OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
            BIND(?projvol  AS ?vol)

            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.

            FILTER (?quotetype != ai:BenchMarking)
            FILTER (?status = as:ACCEPTED)
            FILTER(?cdate &gt;= ?fyStartDate &amp;&amp; ?cdate &lt; ?fyEndDate)
            }
        }
        UNION
        {
            select distinct ?partNumber ?quotename ?vol
            {
            ?quote a as:Quote.
            ?quote ps:objectName ?quotename.
            #status
            ?quote  as:hasSalesDocumentStatus ?status .
            #awarded date
            ?quote as-ext:zQuoteClosedDate ?cdate.
            ?quote as:hasSalesDocumentType ?quotetype.
            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:includesSalesItem ?minorSi.
            ?salesitem as:isProduct pci:Assembly.
            ?minorSi as:isProduct pci:MetalStamping.
            ?minorSi as:includesConfigItem ?metalstamping.
            ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
            OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
            BIND(?projvol  AS ?vol)

            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.

            FILTER (?quotetype != ai:BenchMarking)
            FILTER (?status = as:ACCEPTED)
            FILTER(?cdate &gt;= ?fyStartDate &amp;&amp; ?cdate &lt; ?fyEndDate)
            }
        }

      } #ORDER BY DESC(?vol)
      GROUP BY (?quotename)

  }
  BIND(afn:uuid() as ?uuid).
  BIND(2147483647 - ?vol as ?orderBy)
}
</ps:sparql>
        <ps:hasDimension rdf:resource="&ase;DimensionQuote"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureVolume"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#CockpitReportQuotePerCompany -->

    <owl:NamedIndividual rdf:about="&rs;CockpitReportQuotePerCompany">
        <rdf:type rdf:resource="&as;CockpitReport"/>
        <rdfs:label xml:lang="en">Usage Report - RFP Per Company </rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">COLUMN</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {
   ?uuid a rs:WonVsLostVsOpenData;
      ps:orderBy ?entity;
      a ps:Data;
      as-ext:won ?wonQuote;
      as-ext:lost ?lostQuote;
      as-ext:rOpen ?openQuote;
      as-ext:entity ?entity.
} WHERE {
   {
      SELECT DISTINCT ?entity (sum(?won) AS ?wonQuote) (sum(?lost) AS ?lostQuote) (sum(?open) AS ?openQuote)
      WHERE{


         ?quote as:containsCompany ?company.
         ?quote ps:objectName ?quoteName.
         ?company ps:objectName ?entity.
         ?quote as:hasSalesDocumentStatus ?status.
         ?quote ps:objectDateOfUpdate ?cdate.
         ?quote as:hasSalesDocumentType ?quotetype.
         ?quote rdf:type as:Quote.
          #check for 30days
         BIND(xsd:dateTime(xsd:dateTime(now()) + &quot;-P30D&quot;^^xsd:duration) AS ?date30before).
         BIND(xsd:dateTime(xsd:dateTime(now())) AS ?todayDate).

         FILTER (?status = as:ACCEPTED || ?status = as:REJECTED || ?status = as:OPEN)
         #FILTER (?quotetype != ai:BenchMarking)
         FILTER(?cdate &gt;= ?date30before &amp;&amp; ?cdate &lt;= ?todayDate)
         BIND(IF(?status = as:ACCEPTED,1,0) AS ?won)
         BIND(IF(?status = as:REJECTED,1,0) AS ?lost)
         BIND(IF(?status = as:OPEN,1,0) AS ?open)

      }GROUP BY ?entity

   }
   BIND(afn:uuid() as ?uuid).
}
</ps:sparql>
        <ps:hasDimension rdf:resource="&ase;DimensionEntity"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureLost"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureOpen"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureWon"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#CockpitReportRFPperCompany -->

    <owl:NamedIndividual rdf:about="&rs;CockpitReportRFPperCompany">
        <rdf:type rdf:resource="&as;CockpitReport"/>
        <rdfs:label xml:lang="en">Usage Report - RFP Per Company (US$)</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">COLUMN</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {
  ?uuid a as-ext:WonVsLostData;
      ps:orderBy ?entity;
      a ps:Data;
      as-ext:won ?wonAmt;
      as-ext:lost ?lostAmt;
      as-ext:rOpen ?openAmt;
      as-ext:entity ?entity.
} WHERE {
  {
      SELECT DISTINCT ?entity (sum(?won) AS ?wonAmt) (sum(?lost) AS ?lostAmt) (sum(?open) AS ?openAmt)
      WHERE{
        {
            select distinct ?partNumber ?entity ?won ?lost ?open
            {
              ?quote as:containsCompany ?company.
              ?company ps:objectName ?entity.
              ?quote as:hasSalesDocumentStatus ?status.

              #filter by quoteType and creation Date
              #creation Date
              ?quote ps:objectDateOfCreation ?cdate.
              ?quote as:hasSalesDocumentType ?quotetype.

              ?salesitem as:salesItemIncludedBy ?quote.
              ?salesitem as:isProduct pci:MetalStamping.
              ?salesitem as:includesConfigItem ?metalstamping.
              ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
              ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
              OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
              BIND(IF(?status = as:ACCEPTED,fn:floor(?totalcost*?projvol),0) AS ?won)
              BIND(IF(?status = as:REJECTED,fn:floor(?totalcost*?projvol),0) AS ?lost)
              BIND(IF(?status = as:OPEN,fn:floor(?totalcost*?projvol),0) AS ?open)

              FILTER (?quotetype != ai:BenchMarking)
              FILTER(MONTH(?cdate) = MONTH(NOW()))
            }
  }
  UNION
        {
            select distinct ?partNumber ?entity ?won ?lost ?open
            {
              ?quote as:containsCompany ?company.
              ?company ps:objectName ?entity.
              ?quote as:hasSalesDocumentStatus ?status.

              #filter by quoteType and creation Date
              #creation Date
              ?quote ps:objectDateOfCreation ?cdate.
              ?quote as:hasSalesDocumentType ?quotetype.

              ?salesitem as:salesItemIncludedBy ?quote.
              ?salesitem as:includesSalesItem ?minorSi.
              ?salesitem as:isProduct pci:Assembly.
              ?minorSi as:isProduct pci:MetalStamping.
              ?minorSi as:includesConfigItem ?metalstamping.
              ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
              ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
              OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
              BIND(IF(?status = as:ACCEPTED,fn:floor(?totalcost*?projvol),0) AS ?won)
              BIND(IF(?status = as:REJECTED,fn:floor(?totalcost*?projvol),0) AS ?lost)
              BIND(IF(?status = as:OPEN,fn:floor(?totalcost*?projvol),0) AS ?open)


              FILTER (?quotetype != ai:BenchMarking)
              FILTER(MONTH(?cdate) = MONTH(NOW()))
            }
        }
      } GROUP BY ?entity
  }
  BIND(afn:uuid() as ?uuid).
}
</ps:sparql>
        <ps:hasDimension rdf:resource="&ase;DimensionEntity"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureLost"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureOpen"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureWon"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#CockpitReportToolsVolumePerIndustryCurrentMonth -->

    <owl:NamedIndividual rdf:about="&rs;CockpitReportToolsVolumePerIndustryCurrentMonth">
        <rdf:type rdf:resource="&as;CockpitReport"/>
        <rdfs:label xml:lang="en">Tools Volume Per Product Hierarchy Current Month (US$)</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">PIE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {
  ?uuid a rs:VolumePerIndustryData;
      a ps:Data;
      as-ext:won ?wonAmt;
      rs:rIndustry ?industryname.
} WHERE {
  {
      SELECT DISTINCT ?industryname (sum(?won) AS ?wonAmt)
      WHERE{
        {
            ?quote as:quoteContainedBy ?account.
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            ?quote as:hasSalesDocumentStatus ?status.
            #awarded date
            ?quote as-ext:zQuoteClosedDate ?cdate.
            ?quote as:hasSalesDocumentType ?quotetype.
            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:isProduct pci:MetalStamping.
            ?salesitem as:includesConfigItem ?metalstamping.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            BIND(fn:floor(?toolcost) AS ?won)

            FILTER (?quotetype != ai:BenchMarking)
            FILTER (?status = as:ACCEPTED)
            FILTER(MONTH(?cdate) = MONTH(NOW()))
        }
        UNION
        {
            ?quote as:quoteContainedBy ?account.
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            ?quote as:hasSalesDocumentStatus ?status.
            #awarded date
            ?quote as-ext:zQuoteClosedDate ?cdate.
            ?quote as:hasSalesDocumentType ?quotetype.
            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:includesSalesItem ?minorSi.
            ?salesitem as:isProduct pci:Assembly.
            ?minorSi as:isProduct pci:MetalStamping.
            ?minorSi as:includesConfigItem ?metalstamping.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            BIND(fn:floor(?toolcost) AS ?won)

            FILTER (?quotetype != ai:BenchMarking)
            FILTER (?status = as:ACCEPTED)
            FILTER(MONTH(?cdate) = MONTH(NOW()))
        }

      } GROUP BY ?industryname
  }
  BIND(afn:uuid() as ?uuid).

}
</ps:sparql>
        <ps:hasMeasure rdf:resource="&ase;MeasureWon"/>
        <ps:hasDimension rdf:resource="&rs;DimensionIndustry"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#CockpitReportToolsVolumePerIndustryYtd -->

    <owl:NamedIndividual rdf:about="&rs;CockpitReportToolsVolumePerIndustryYtd">
        <rdf:type rdf:resource="&as;CockpitReport"/>
        <rdfs:label xml:lang="en">Tools Volume Per Product Hierarchy Ytd (US$)</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">PIE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {
  ?uuid a rs:VolumePerIndustryData;
      a ps:Data;
      as-ext:won ?wonAmt;
      rs:rIndustry ?industryname.
} WHERE {
  {
      SELECT DISTINCT ?industryname (sum(?won) AS ?wonAmt)
      WHERE{
        {
            ?quote as:quoteContainedBy ?account.
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            ?quote as:hasSalesDocumentStatus ?status.
            #awarded date
            ?quote as-ext:zQuoteClosedDate ?cdate.
            ?quote as:hasSalesDocumentType ?quotetype.
            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:isProduct pci:MetalStamping.
            ?salesitem as:includesConfigItem ?metalstamping.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            BIND(fn:floor(?toolcost) AS ?won)

            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.

            FILTER (?quotetype != ai:BenchMarking)
            FILTER (?status = as:ACCEPTED)
            FILTER(?cdate &gt;= ?fyStartDate &amp;&amp; ?cdate &lt; ?fyEndDate)
        }
        UNION
        {
            ?quote as:quoteContainedBy ?account.
            ?account as:hasIndustry ?industry.
            ?industry ps:objectName ?industryname.
            ?quote as:hasSalesDocumentStatus ?status.
            #awarded date
            ?quote as-ext:zQuoteClosedDate ?cdate.
            ?quote as:hasSalesDocumentType ?quotetype.
            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:includesSalesItem ?minorSi.
            ?salesitem as:isProduct pci:Assembly.
            ?minorSi as:isProduct pci:MetalStamping.
            ?minorSi as:includesConfigItem ?metalstamping.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            BIND(fn:floor(?toolcost) AS ?won)

            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.

            FILTER (?quotetype != ai:BenchMarking)
            FILTER (?status = as:ACCEPTED)
            FILTER(?cdate &gt;= ?fyStartDate &amp;&amp; ?cdate &lt; ?fyEndDate)
        }

      } GROUP BY ?industryname
  }
  BIND(afn:uuid() as ?uuid).

}
</ps:sparql>
        <ps:hasMeasure rdf:resource="&ase;MeasureWon"/>
        <ps:hasDimension rdf:resource="&rs;DimensionIndustry"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#CockpitReportToolsVolumePerLegalEntityCurrentMonth -->

    <owl:NamedIndividual rdf:about="&rs;CockpitReportToolsVolumePerLegalEntityCurrentMonth">
        <rdf:type rdf:resource="&as;CockpitReport"/>
        <rdfs:label rdf:datatype="&xsd;string">Tools Volume Per Legal Entity Current Month (US$)</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">PIE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {
  ?uuid a rs:PartsVolumePerEntityData;
      a ps:Data;
      as-ext:won ?wonAmt;
      as-ext:entity ?entity.
} WHERE {
  {
      SELECT DISTINCT ?entity (sum(?won) AS ?wonAmt)
      WHERE{
        {
            ?quote as:containsCompany ?company.
            ?company ps:objectName ?entity.
            ?quote as:hasSalesDocumentStatus ?status.
            #awarded date
            ?quote as-ext:zQuoteClosedDate ?cdate.
            ?quote as:hasSalesDocumentType ?quotetype.
            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:isProduct pci:MetalStamping.
            ?salesitem as:includesConfigItem ?metalstamping.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            BIND(fn:floor(?toolcost) AS ?won)

            FILTER (?quotetype != ai:BenchMarking)
            FILTER (?status = as:ACCEPTED)
            FILTER(MONTH(?cdate) = MONTH(NOW()))
        }
        UNION
        {

            ?quote as:containsCompany ?company.
            ?company ps:objectName ?entity.
            ?quote as:hasSalesDocumentStatus ?status.
            #awarded date
            ?quote as-ext:zQuoteClosedDate ?cdate.
            ?quote as:hasSalesDocumentType ?quotetype.
            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:includesSalesItem ?minorSi.
            ?salesitem as:isProduct pci:Assembly.
            ?minorSi as:isProduct pci:MetalStamping.
            ?minorSi as:includesConfigItem ?metalstamping.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            BIND(fn:floor(?toolcost) AS ?won)

            FILTER (?quotetype != ai:BenchMarking)
            FILTER (?status = as:ACCEPTED)
            FILTER(MONTH(?cdate) = MONTH(NOW()))
        }
      } GROUP BY ?entity
  }
  BIND(afn:uuid() as ?uuid).
}
</ps:sparql>
        <ps:hasDimension rdf:resource="&ase;DimensionEntity"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureWon"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#CockpitReportToolsVolumePerLegalEntityYtd -->

    <owl:NamedIndividual rdf:about="&rs;CockpitReportToolsVolumePerLegalEntityYtd">
        <rdf:type rdf:resource="&as;CockpitReport"/>
        <rdfs:label xml:lang="en">Tools Volume Per Legal Entity Ytd (US$)</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">PIE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {
  ?uuid a rs:PartsVolumePerEntityData;
      a ps:Data;
      as-ext:won ?wonAmt;
      as-ext:entity ?entity.
} WHERE {
  {
      SELECT DISTINCT ?entity (sum(?won) AS ?wonAmt)
      WHERE{
        {
            ?quote as:containsCompany ?company.
            ?company ps:objectName ?entity.
            ?quote as:hasSalesDocumentStatus ?status.
            #awarded date
            ?quote as-ext:zQuoteClosedDate ?cdate.
            ?quote as:hasSalesDocumentType ?quotetype.
            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:isProduct pci:MetalStamping.
            ?salesitem as:includesConfigItem ?metalstamping.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            BIND(fn:floor(?toolcost) AS ?won)

            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.

            FILTER (?quotetype != ai:BenchMarking)
            FILTER (?status = as:ACCEPTED)
            FILTER(?cdate &gt;= ?fyStartDate &amp;&amp; ?cdate &lt; ?fyEndDate)
        }
        UNION
        {

            ?quote as:containsCompany ?company.
            ?company ps:objectName ?entity.
            ?quote as:hasSalesDocumentStatus ?status.
            #awarded date
            ?quote as-ext:zQuoteClosedDate ?cdate.
            ?quote as:hasSalesDocumentType ?quotetype.
            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:includesSalesItem ?minorSi.
            ?salesitem as:isProduct pci:Assembly.
            ?minorSi as:isProduct pci:MetalStamping.
            ?minorSi as:includesConfigItem ?metalstamping.
            ?metalstamping pcs:metalStampingToolCostWithTransportUSD ?toolcost.
            BIND(fn:floor(?toolcost) AS ?won)

            ?fy a as:FiscalPeriod.
            ?fy as:fiscalPeriodEndDate ?fyEndDate.
            ?fy as:fiscalPeriodStartDate ?fyStartDate.

            FILTER (?quotetype != ai:BenchMarking)
            FILTER (?status = as:ACCEPTED)
            FILTER(?cdate &gt;= ?fyStartDate &amp;&amp; ?cdate &lt; ?fyEndDate)
        }

      } GROUP BY ?entity
  }
  BIND(afn:uuid() as ?uuid).
}
</ps:sparql>
        <ps:hasDimension rdf:resource="&ase;DimensionEntity"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureWon"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#CockpitReportWonVsLost -->

    <owl:NamedIndividual rdf:about="&rs;CockpitReportWonVsLost">
        <rdf:type rdf:resource="&as;CockpitReport"/>
        <rdfs:label xml:lang="en">Hit Rate Report – Won vs. Lost YtD (US$)</rdfs:label>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {
  ?uuid a as-ext:WonVsLostData;
      ps:orderBy ?orderBy;
      a ps:Data;
      as-ext:won ?wonAmt;
      as-ext:lost ?lostAmt;
      as-ext:entity ?entity.
}
WHERE
{
  {
      SELECT DISTINCT ?entity (sum(?won) AS ?wonAmt) (sum(?lost) AS ?lostAmt) (sum(?total) AS ?totalAmt)
      WHERE{
        {
            select distinct ?partNumber ?entity ?won ?lost ?total
            {
              ?quote as:containsCompany ?company.
              ?company ps:objectName ?entity.
              ?quote as:hasSalesDocumentStatus ?status.
              #closed Date
              ?quote as-ext:zQuoteClosedDate ?cdate.
              ?quote as:hasSalesDocumentType ?quotetype.
              ?salesitem as:salesItemIncludedBy ?quote.
              ?salesitem as:isProduct pci:MetalStamping.
              ?salesitem as:includesConfigItem ?metalstamping.
              ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
              ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
              OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
              BIND(IF(?status = as:ACCEPTED,fn:floor(?totalcost*?projvol),0) AS ?won)
              BIND(IF(?status = as:REJECTED,fn:floor(?totalcost*?projvol),0) AS ?lost)
              #FOR DESCENDING ORDER
              BIND(xsd:decimal(?won+?lost) as ?total)

              ?fy a as:FiscalPeriod.
              ?fy as:fiscalPeriodEndDate ?fyEndDate.
              ?fy as:fiscalPeriodStartDate ?fyStartDate.

              FILTER (?quotetype != ai:BenchMarking)
              FILTER (?status = as:REJECTED ||?status = as:ACCEPTED)
              FILTER(?cdate &gt;= ?fyStartDate &amp;&amp; ?cdate &lt; ?fyEndDate)
            }
        }
        UNION
        {
            select distinct ?partNumber ?entity ?won ?lost ?open
            {
              ?quote as:containsCompany ?company.
              ?company ps:objectName ?entity.
              ?quote as:hasSalesDocumentStatus ?status.
              #closed Date
              ?quote as-ext:zQuoteClosedDate ?cdate.
              ?quote as:hasSalesDocumentType ?quotetype.
              ?salesitem as:salesItemIncludedBy ?quote.
              ?salesitem as:includesSalesItem ?minorSi.
              ?salesitem as:isProduct pci:Assembly.
              ?minorSi as:isProduct pci:MetalStamping.
              ?minorSi as:includesConfigItem ?metalstamping.
              ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
              ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
              OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
              BIND(IF(?status = as:ACCEPTED,fn:floor(?totalcost*?projvol),0) AS ?won)
              BIND(IF(?status = as:REJECTED,fn:floor(?totalcost*?projvol),0) AS ?lost)
              #FOR DESCENDING ORDER
              BIND(xsd:decimal(?won+?lost) as ?total)

              ?fy a as:FiscalPeriod.
              ?fy as:fiscalPeriodEndDate ?fyEndDate.
              ?fy as:fiscalPeriodStartDate ?fyStartDate.

              FILTER (?quotetype != ai:BenchMarking)
              FILTER (?status = as:REJECTED ||?status = as:ACCEPTED)
              FILTER(?cdate &gt;= ?fyStartDate &amp;&amp; ?cdate &lt; ?fyEndDate)
            }
        }

      } GROUP BY ?entity
  }
  BIND(afn:uuid() as ?uuid).
  BIND(2147483647-?totalAmt  AS ?orderBy)
}
</ps:sparql>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">STACKED_VBAR</ps:preferredReportRepresentation>
        <rdfs:comment>The Hitrate is only measured for RFQs and not for Benchmarking quotes.</rdfs:comment>
        <ps:hasDimension rdf:resource="&ase;DimensionEntity"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureLost"/>
        <ps:hasMeasure rdf:resource="&ase;MeasureWon"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#CockpitReportWonVsLostByCOPA -->

    <owl:NamedIndividual rdf:about="&rs;CockpitReportWonVsLostByCOPA">
        <rdf:type rdf:resource="&as;CockpitReport"/>
        <rdfs:label xml:lang="en">Relevance Analysis Lost vs. Won parts – Sized by Margin (COPA) (US$)</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">BUBBLE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {
  ?uuid a rs:RelevanceAnalysisData;
      a ps:Data;
      rs:rAwardedJobs ?wonCount;
      rs:rLostJobs ?lostCount;
      rs:pcopa ?percent;
      as-ext:entity ?entity.
} WHERE {
  {
      SELECT DISTINCT ?entity (sum(?won) AS ?wonCount) (sum(?lost) AS ?lostCount) (sum(?copa)/sum(?totalcost) AS ?percent)
      WHERE{
        {
            ?quote as:containsCompany ?company.
            ?company ps:objectName ?entity.
            ?quote as:hasSalesDocumentStatus ?status.
            #closed Date
            ?quote as-ext:zQuoteClosedDate ?cdate.
            ?quote as:hasSalesDocumentType ?quotetype.
            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:isProduct pci:MetalStamping.
            ?salesitem as:includesConfigItem ?metalstamping.
            ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
            ?metalstamping pcsm:metalStampingCOPAUSD ?copa.
            #BIND(xsd:decimal(?copa) / xsd:decimal(?totalcost) as ?pcopa) .
            BIND(IF(?status = as:ACCEPTED,1,0) AS ?won)
            BIND(IF(?status = as:REJECTED,1,0) AS ?lost)

            FILTER (?quotetype != ai:BenchMarking)
            FILTER (?status = as:REJECTED ||?status = as:ACCEPTED)
            FILTER(MONTH(?cdate) = MONTH(NOW()))
        }
        UNION
        {
            ?quote as:containsCompany ?company.
            ?company ps:objectName ?entity.
            ?quote as:hasSalesDocumentStatus ?status.
            ?quote ps:objectName ?quotename.
            #closed Date
            ?quote as-ext:zQuoteClosedDate ?cdate.
            ?quote as:hasSalesDocumentType ?quotetype.
            ?salesitem as:salesItemIncludedBy ?quote.
            ?salesitem as:includesSalesItem ?minorSi.
            ?salesitem as:isProduct pci:Assembly.
            ?minorSi as:isProduct pci:MetalStamping.
            ?minorSi as:includesConfigItem ?metalstamping.
            ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
            ?metalstamping pcsm:metalStampingCOPAUSD ?copa.
            #BIND(xsd:decimal(?copa) / xsd:decimal(?totalcost) as ?pcopa) .
            BIND(IF(?status = as:ACCEPTED,1,0) AS ?won)
            BIND(IF(?status = as:REJECTED,1,0) AS ?lost)

            FILTER (?quotetype != ai:BenchMarking)
            FILTER (?status = as:REJECTED ||?status = as:ACCEPTED)
            FILTER(MONTH(?cdate) = MONTH(NOW()))
        }
      } GROUP BY ?entity
  }
  BIND(afn:uuid() as ?uuid).
}
</ps:sparql>
        <rdfs:comment xml:lang="en">For each Legal Entity the Won and Lost parts are counted for the current month</rdfs:comment>
        <ps:hasDimension rdf:resource="&ase;DimensionEntity"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureAwardedJobs"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureCOPA"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureLostJobs"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DimensionCustomer -->

    <owl:NamedIndividual rdf:about="&rs;DimensionCustomer">
        <rdf:type rdf:resource="&ps;Dimension"/>
        <rdfs:label xml:lang="en">Customer</rdfs:label>
        <ps:value>dynamicCustomer</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DimensionCustomerCountry -->

    <owl:NamedIndividual rdf:about="&rs;DimensionCustomerCountry">
        <rdf:type rdf:resource="&ps;Dimension"/>
        <rdfs:label xml:lang="en">Country</rdfs:label>
        <ps:value rdf:datatype="&xsd;string">dynamicCustomerCountry</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DimensionIndustry -->

    <owl:NamedIndividual rdf:about="&rs;DimensionIndustry">
        <rdf:type rdf:resource="&ps;Dimension"/>
        <rdfs:label xml:lang="en">Industry</rdfs:label>
        <ps:value rdf:datatype="&xsd;string">rIndustry</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DimensionPartNumber -->

    <owl:NamedIndividual rdf:about="&rs;DimensionPartNumber">
        <rdf:type rdf:resource="&ps;Dimension"/>
        <rdfs:label xml:lang="en">Selling Manufactured Part</rdfs:label>
        <ps:value>dynamicPartNumber</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DimensionSalesPeriod -->

    <owl:NamedIndividual rdf:about="&rs;DimensionSalesPeriod">
        <rdf:type rdf:resource="&ps;Dimension"/>
        <rdfs:label xml:lang="en">Sales Period</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">2</ps:sequenceID>
        <ps:value>dynamicSalesPeriod</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DimensionValueId -->

    <owl:NamedIndividual rdf:about="&rs;DimensionValueId">
        <rdf:type rdf:resource="&ps;Dimension"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DimensionYear -->

    <owl:NamedIndividual rdf:about="&rs;DimensionYear">
        <rdf:type rdf:resource="&ps;Dimension"/>
        <rdfs:label xml:lang="en">Year</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">1</ps:sequenceID>
        <ps:value>dynamicYear</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DynCockpitReportPieChart -->

    <owl:NamedIndividual rdf:about="&rs;DynCockpitReportPieChart">
        <rdf:type rdf:resource="&as;DynCockpitReport"/>
        <rdfs:label xml:lang="en">Actual Material Production Cost/Unit Per Country</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">PIE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX ase: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {
   ?uuid a rs:DynamicReportPieChartData;
      a ps:Data;
      rs:valueId ?customerCountry;
      rs:dynamicCost ?totalAmt2;
      rs:dynamicCustomerCountry ?customerCountry;

}
WHERE
{
   {
      SELECT DISTINCT ?customerCountry  (sum(?amt2) AS ?totalAmt2)
      WHERE{
         {
            select distinct ?customerCountry ?amt2
            {

               #?data ase:businessSegment ?dynamicBusinessSegment.
               #variable must be the same as datapoint
               ?data ase:customerCountry ?dynamicCustomerCountry.
               ?data ase:customer ?dynamicCustomer.
               ?data ase:sellingManufacturedPart ?dynamicPartNumber.
               OPTIONAL{?data ase:actualMaterialProductionCostPerUnit ?amt2.}
               #bind is needed explicitly
               BIND(str(?dynamicCustomerCountry) as ?customerCountry)

            }
         }

      } GROUP BY ?customerCountry
      ORDER BY DESC(?totalAmt2)
      LIMIT 10
   }
   BIND(afn:uuid() as ?uuid).

}





</ps:sparql>
        <ps:hasDimension rdf:resource="&rs;DimensionCustomerCountry"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureCost"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DynCockpitReportRevenueVsCost -->

    <owl:NamedIndividual rdf:about="&rs;DynCockpitReportRevenueVsCost">
        <rdf:type rdf:resource="&as;DynCockpitReport"/>
        <rdfs:label xml:lang="en">Revenue Vs Cost per Customer</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">COLUMN</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX ase: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {
   ?uuid a rs:DynamicReportRevenueVsCostData;
      a ps:Data;
      rs:valueId ?customer;
      rs:dynamicCost ?totalAmt2;
      rs:dynamicRevenue ?totalAmt1;
      rs:dynamicCustomer ?customer;

}
WHERE
{
   {
      SELECT DISTINCT ?customer (sum(?amt1) AS ?totalAmt1) (sum(?amt2) AS ?totalAmt2)
      WHERE{
         {
            select distinct ?customer  ?amt1 ?amt2
            {

               ?data ase:customer ?dynamicCustomer.
               ?data ase:customerCountry ?dynamicCustomerCountry.
               ?data ase:sellingManufacturedPart ?dynamicPartNumber.

               OPTIONAL{?data ase:actualBilledValueInPeriod ?amt1.}
               OPTIONAL{?data ase:actualCOGSInPeriod ?amt2.}

               BIND(str(?dynamicCustomer) AS ?customer)
            }
         }


      } GROUP BY ?customer
      ORDER BY DESC(?totalAmt1)
      LIMIT 10
   }
   BIND(afn:uuid() as ?uuid).

}

</ps:sparql>
        <ps:hasDimension rdf:resource="&rs;DimensionCustomer"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureCost"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureRevenue"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DynCockpitReportRevenueVsCostPerPartNumber -->

    <owl:NamedIndividual rdf:about="&rs;DynCockpitReportRevenueVsCostPerPartNumber">
        <rdf:type rdf:resource="&as;DynCockpitReport"/>
        <rdfs:label xml:lang="en">Revenue Vs Cost per Part Number</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">COLUMN</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX ase: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {
   ?uuid a rs:DynamicReportRevenueVsCostData;
      a ps:Data;
      rs:valueId ?partNumber;
      rs:dynamicCost ?totalAmt2;
      rs:dynamicRevenue ?totalAmt1;
      rs:dynamicPartNumber ?partNumber;

}
WHERE
{
   {
      SELECT DISTINCT ?partNumber (sum(?amt1) AS ?totalAmt1) (sum(?amt2) AS ?totalAmt2)
      WHERE{
         {
            select distinct ?partNumber  ?amt1 ?amt2
            {

               ?data ase:customer ?dynamicCustomer.
               ?data ase:customerCountry ?dynamicCustomerCountry.
               ?data ase:sellingManufacturedPart ?dynamicPartNumber.
               OPTIONAL{?data ase:actualBilledValueInPeriod ?amt1.}
               OPTIONAL{?data ase:actualCOGSInPeriod ?amt2.}
               BIND(str(?dynamicPartNumber) as ?partNumber)

            }
         }


      } GROUP BY ?partNumber
      ORDER BY DESC(?totalAmt1)
      LIMIT 10
   }
   BIND(afn:uuid() as ?uuid).

}

</ps:sparql>
        <ps:hasDimension rdf:resource="&rs;DimensionPartNumber"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureCost"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureRevenue"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DynCockpitReportTest -->

    <owl:NamedIndividual rdf:about="&rs;DynCockpitReportTest">
        <rdf:type rdf:resource="&as;InactiveReport"/>
        <rdfs:label xml:lang="en">Dynamic Cockpit Report Test</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">LINE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX ase: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;


CONSTRUCT {
   ?uuid a rs:DynamicReportData;
      ps:orderBy ?orderBy;
      a ps:Data;
      rs:dynamicSalesPeriod ?period;
      rs:dynamicQuoted ?quotedAmt;
      rs:dynamicPlanned ?plannedAmt;
      rs:dynamicActual ?acutalAmt;
      rs:dynamicYear ?year.
}
WHERE
{
   {
      SELECT DISTINCT ?year  ?period (sum(?actual) AS ?acutalAmt) (sum(?quoted) AS ?quotedAmt) (sum(?planned) AS ?plannedAmt)
      WHERE{
         {
            select distinct ?period ?actual ?quoted ?planned ?year
            {
               OPTIONAL{
                  ?data ase:plannedTotalCostPerUnit ?p.
               }
               OPTIONAL{
                  ?data ase:actualMaterialProductionCostPerUnit ?a.
               }
               OPTIONAL{
                  ?data ase:quotedTotalCostperUnit ?q.
               }
               ?data ase:customer ?customer.
               ?data ase:customerCountry ?customerCountry.
               ?data ase:sellingManufacturedPart ?sellingMfgrPart.
               ?data ase:period ?period.
               ?data ase:year ?yearInt.
               BIND(xsd:string(?yearInt) as ?year).
               BIND(IF(!BOUND(?p),xsd:decimal(0),?p) AS ?planned)
               BIND(IF(!BOUND(?q),xsd:decimal(0),?q) AS ?quoted)
               BIND(IF(!BOUND(?a),xsd:decimal(0),?a) AS ?actual)
            }
         }

      } GROUP BY ?period ?year
   }
   BIND(afn:uuid() as ?uuid).
   BIND(?period as ?orderBy)
}




</ps:sparql>
        <ps:hasDimension rdf:resource="&rs;DimensionSalesPeriod"/>
        <ps:hasDimension rdf:resource="&rs;DimensionYear"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureActual"/>
        <ps:hasMeasure rdf:resource="&rs;MeasurePlanned"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureQuoted"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DynCockpitReportTimeSeriesBooking -->

    <owl:NamedIndividual rdf:about="&rs;DynCockpitReportTimeSeriesBooking">
        <rdf:type rdf:resource="&as;DynCockpitReport"/>
        <rdfs:label xml:lang="en">Time Series Booking</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">LINE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX ase: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;


CONSTRUCT {
   ?uuid a rs:DynamicReportData;
      ps:orderBy ?orderBy;
      a ps:Data;
      rs:dynamicSalesPeriod ?period;
      rs:dynamicQuoted ?quotedAmt;
      rs:dynamicPlanned ?plannedAmt;
      rs:dynamicActual ?acutalAmt;
      rs:dynamicYear ?year.
}
WHERE
{
   {
      select distinct (sum(?quoted) as ?quotedAmt) (sum(?ac) as ?acutalAmt) (sum(?pl) as ?plannedAmt) ?period ?year ?orderBy
      WHERE{
         {
            select distinct ?id ?quoted (sum(?planned) as ?pl) (sum(?actual) as ?ac) ?period ?yyyy
            {

               ?data ase:customerCode ?id.
               ?data ase:customer ?dynamicCustomer.
               ?data ase:customerCountry ?dynamicCustomerCountry.
               ?data ase:sellingManufacturedPart ?dynamicPartNumber.
               ?data ase:period ?period.
               ?data ase:year ?yyyy.
               ?data ase:reportDate ?dynamicReportDate.
               OPTIONAL{?data ase:plannedRevenueBookedInPeriod ?p.}
               OPTIONAL{?data ase:actualBilledValueInPeriod ?a.}
               {
                  SELECT distinct ?id (sum(?moq*?price) AS ?quoted)
                  WHERE {
                     ?quote as:quoteContainedBy ?account.
                     ?account as:objectERPId ?id1.
                     BIND(xsd:int(?id1) as ?id)

                     #?quote as:hasSalesDocumentStatus as:WON.
                     ?quote as:includesDocumentHeaderPriceItem ?dhpi.
                     ?dhpi as:documentHeaderPrice ?price.

                     ?quote ase:zQuoteQuantityPerMonth1 ?moq.
                  }GROUP BY ?id

               }


               BIND(?dateFrom AS ?start)
               BIND(?dateTo AS ?end)
               FILTER(IF((BOUND(?start) &amp;&amp; BOUND(?end)),
                     (?dynamicReportDate &gt;= ps:epoch2dateTime(?start) &amp;&amp; ?dynamicReportDate &lt;= ps:epoch2dateTime(?end)),?dynamicReportDate != false))
               BIND(IF(!BOUND(?p),xsd:decimal(0),?p) AS ?planned)
               BIND(IF(!BOUND(?a),xsd:decimal(0),?a) AS ?actual)

            }GROUP BY ?id ?period ?yyyy ?quoted
         }


         #sorting
         BIND(xsd:string(?yyyy) as ?year).
         BIND(IF(fn:string-length(str(?period)) = 2, str(?period), fn:concat(&quot;0&quot;+str(?period))) AS ?mm)
         BIND(xsd:int(concat(?year,?mm)) AS ?orderBy)

      } GROUP BY ?year ?period ?orderBy

   }
   BIND(afn:uuid() as ?uuid).
}








</ps:sparql>
        <ps:hasDimension rdf:resource="&rs;DimensionSalesPeriod"/>
        <ps:hasDimension rdf:resource="&rs;DimensionYear"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureActual"/>
        <ps:hasMeasure rdf:resource="&rs;MeasurePlanned"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureQuoted"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DynCockpitReportTimeSeriesCost -->

    <owl:NamedIndividual rdf:about="&rs;DynCockpitReportTimeSeriesCost">
        <rdf:type rdf:resource="&as;InactiveReport"/>
        <rdfs:label xml:lang="en">Time Series Cost</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">LINE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX ase: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;


CONSTRUCT {
   ?uuid a rs:DynReportTimeSeriesCostData;
      ps:orderBy ?orderBy;
      #ps:orderBy ?period;
      a ps:Data;
      rs:dynamicSalesPeriod ?period;
      rs:dynamicQuotedCost ?quotedAmt;
      rs:dynamicPlannedCost ?plannedAmt;
      rs:dynamicActualCost ?acutalAmt;
      rs:dynamicYear ?year.
}
WHERE
{
   {
      SELECT DISTINCT ?year  ?period (sum(?actual) AS ?acutalAmt) (sum(?quoted) AS ?quotedAmt) (sum(?planned) AS ?plannedAmt) ?orderBy
      WHERE{
         {
            select distinct ?period ?actual ?quoted ?planned ?yearInt
            {

               ?data ase:customer ?customer.
               ?data ase:customerCountry ?customerCountry.
               ?data ase:sellingManufacturedPart ?sellingMfgrPart.
               ?data ase:period ?period.
     OPTIONAL{
                  ?data ase:reportDate ?dynamicReportDate.
               }

               OPTIONAL{
                  ?data ase:year ?yearInt.
               }
               OPTIONAL{
                  ?data ase:plannedcostInPeriod ?p.
               }
               OPTIONAL{
                  ?data ase:actualCOGSInPeriod ?a.
               }
               OPTIONAL{
                  ?data ase:quotedCostInPeriod ?q.
               }
               FILTER(!BOUND(?dynamicCustomer))
               FILTER(!BOUND(?dynamicCustomerCountry))
               FILTER(IF((BOUND(?dateFrom) &amp;&amp; BOUND(?dateTo)),
                     (?dynamicReportDate &gt;= ps:epoch2dateTime(?dateFrom) &amp;&amp; ?dynamicReportDate &lt;= ps:epoch2dateTime(?dateTo)),?dynamicReportDate != false))
               BIND(IF(!BOUND(?p),xsd:decimal(0),?p) AS ?planned)
               BIND(IF(!BOUND(?q),xsd:decimal(0),?q) AS ?quoted)
               BIND(IF(!BOUND(?a),xsd:decimal(0),?a) AS ?actual)
            }
         }
         UNION
         {
            select distinct ?period ?actual ?quoted ?planned ?yearInt
            {

               ?data ase:customer ?customer.
               ?data ase:customerCountry ?customerCountry.
               ?data ase:sellingManufacturedPart ?sellingMfgrPart.
               ?data ase:period ?period.
                OPTIONAL{
                  ?data ase:reportDate ?dynamicReportDate.
               }

               OPTIONAL{
                  ?data ase:year ?yearInt.
               }
               OPTIONAL{
                  ?data ase:plannedcostInPeriod ?p.
               }
               OPTIONAL{
                  ?data ase:actualCOGSInPeriod ?a.
               }
               OPTIONAL{
                  ?data ase:quotedCostInPeriod ?q.
               }
               FILTER(!BOUND(?dynamicCustomerCountry))
               FILTER(BOUND(?dynamicCustomer))
               FILTER(?dynamicCustomer = ?customer)
               FILTER(IF((BOUND(?dateFrom) &amp;&amp; BOUND(?dateTo)),
                     (?dynamicReportDate &gt;= ps:epoch2dateTime(?dateFrom) &amp;&amp; ?dynamicReportDate &lt;= ps:epoch2dateTime(?dateTo)),?dynamicReportDate != false))
               BIND(IF(!BOUND(?p),xsd:decimal(0),?p) AS ?planned)
               BIND(IF(!BOUND(?q),xsd:decimal(0),?q) AS ?quoted)
               BIND(IF(!BOUND(?a),xsd:decimal(0),?a) AS ?actual)
            }
         }
         UNION
         {
            select distinct ?period ?actual ?quoted ?planned ?yearInt
            {

               ?data ase:customer ?customer.
               ?data ase:customerCountry ?customerCountry.
               ?data ase:sellingManufacturedPart ?sellingMfgrPart.
               ?data ase:period ?period.
               OPTIONAL{
                  ?data ase:reportDate ?dynamicReportDate.
               }

               OPTIONAL{
                  ?data ase:year ?yearInt.
               }
               OPTIONAL{
                  ?data ase:plannedcostInPeriod ?p.
               }
               OPTIONAL{
                  ?data ase:actualCOGSInPeriod ?a.
               }
               OPTIONAL{
                  ?data ase:quotedCostInPeriod ?q.
               }

               FILTER(BOUND(?dynamicCustomerCountry))
               FILTER(!BOUND(?dynamicCustomer))
               FILTER(?dynamicCustomerCountry = ?customerCountry)
               FILTER(IF((BOUND(?dateFrom) &amp;&amp; BOUND(?dateTo)),
                     (?dynamicReportDate &gt;= ps:epoch2dateTime(?dateFrom) &amp;&amp; ?dynamicReportDate &lt;= ps:epoch2dateTime(?dateTo)),?dynamicReportDate != false))
               BIND(IF(!BOUND(?p),xsd:decimal(0),?p) AS ?planned)
               BIND(IF(!BOUND(?q),xsd:decimal(0),?q) AS ?quoted)
               BIND(IF(!BOUND(?a),xsd:decimal(0),?a) AS ?actual)
            }
         }
         UNION
         {
            select distinct ?period ?actual ?quoted ?planned ?yearInt
            {

               ?data ase:customer ?customer.
               ?data ase:customerCountry ?customerCountry.
               ?data ase:sellingManufacturedPart ?sellingMfgrPart.
               ?data ase:period ?period.
                OPTIONAL{
                  ?data ase:reportDate ?dynamicReportDate.
               }

               OPTIONAL{
                  ?data ase:year ?yearInt.
               }
               OPTIONAL{
                  ?data ase:plannedcostInPeriod ?p.
               }
               OPTIONAL{
                  ?data ase:actualCOGSInPeriod ?a.
               }
               OPTIONAL{
                  ?data ase:quotedCostInPeriod ?q.
               }
               FILTER(BOUND(?dynamicCustomerCountry))
               FILTER(BOUND(?dynamicCustomer))
               FILTER(?dynamicCustomerCountry = ?customerCountry)
               FILTER(?dynamicCustomer = ?customer)
               FILTER(IF((BOUND(?dateFrom) &amp;&amp; BOUND(?dateTo)),
                     (?dynamicReportDate &gt;= ps:epoch2dateTime(?dateFrom) &amp;&amp; ?dynamicReportDate &lt;= ps:epoch2dateTime(?dateTo)),?dynamicReportDate != false))
               BIND(IF(!BOUND(?p),xsd:decimal(0),?p) AS ?planned)
               BIND(IF(!BOUND(?q),xsd:decimal(0),?q) AS ?quoted)
               BIND(IF(!BOUND(?a),xsd:decimal(0),?a) AS ?actual)
            }
         }

         #sorting
      BIND(xsd:string(?yearInt) as ?year).
               BIND(IF(fn:string-length(str(?period)) = 2, str(?period), fn:concat(&quot;0&quot;+str(?period))) AS ?mm)
               BIND(xsd:int(concat(?year,?mm)) AS ?orderBy)

      } GROUP BY ?year ?period ?orderBy
   }
   BIND(afn:uuid() as ?uuid).

}




</ps:sparql>
        <ps:hasDimension rdf:resource="&rs;DimensionSalesPeriod"/>
        <ps:hasDimension rdf:resource="&rs;DimensionYear"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureActualCost"/>
        <ps:hasMeasure rdf:resource="&rs;MeasurePlannedCost"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureQuotedCost"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DynCockpitReportTimeSeriesQuantity -->

    <owl:NamedIndividual rdf:about="&rs;DynCockpitReportTimeSeriesQuantity">
        <rdf:type rdf:resource="&as;InactiveReport"/>
        <rdfs:label xml:lang="en">Time Series Quantity</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">LINE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX ase: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;


CONSTRUCT {
   ?uuid a rs:DynReportTimeSeriesQtyData;
      ps:orderBy ?orderBy;
      #ps:orderBy ?period;
      a ps:Data;
      rs:dynamicSalesPeriod ?period;
      rs:dynamicQuotedQuantity ?quotedAmt;
      rs:dynamicPlannedQuantity ?plannedAmt;
      rs:dynamicActualProducedQuantity ?actualAmt;
      rs:dynamicActualDeliveredQuantity ?actualDelAmt;
      rs:dynamicYear ?year.
}
WHERE
{
   {
      SELECT DISTINCT ?year  ?period (sum(?actual) AS ?actualAmt) (sum(?quoted) AS ?quotedAmt) (sum(?planned) AS ?plannedAmt) (sum(?actualDel) AS ?actualDelAmt) ?orderBy
      WHERE{
         {
            select distinct ?period ?actual ?actualDel ?quoted ?planned ?yearInt
            {


               ?data ase:customer ?customer.
               ?data ase:customerCountry ?customerCountry.
               ?data ase:sellingManufacturedPart ?sellingMfgrPart.
               ?data ase:period ?period.
OPTIONAL{
                  ?data ase:reportDate ?dynamicReportDate.
               }

               OPTIONAL{
                  ?data ase:year ?yearInt.
               }
               OPTIONAL{
                  ?data ase:plannedSalesQuantityPerUnit ?p.
               }

               OPTIONAL{
                  ?data ase:quotedSalesQuantity ?q.
               }
               OPTIONAL{
                  ?data ase:actualProducedQuantityInPeriod ?a.
               }
               OPTIONAL{
                  ?data ase:actualDeliveredQuantityInPeriod ?ad.
               }
               FILTER(!BOUND(?dynamicCustomer))
               FILTER(!BOUND(?dynamicCustomerCountry)             )

               FILTER(IF((BOUND(?dateFrom) &amp;&amp; BOUND(?dateTo)),
                     (?dynamicReportDate &gt;= ps:epoch2dateTime(?dateFrom) &amp;&amp; ?dynamicReportDate &lt;= ps:epoch2dateTime(?dateTo)),?dynamicReportDate != false))
               BIND(IF(!BOUND(?p),xsd:decimal(0),?p) AS ?planned)
               BIND(IF(!BOUND(?q),xsd:decimal(0),?q) AS ?quoted)
               BIND(IF(!BOUND(?a),xsd:decimal(0),?a) AS ?actual)
               BIND(IF(!BOUND(?ad),xsd:decimal(0),?ad) AS ?actualDel)
            }
         }
         UNION
         {
            select distinct ?period ?actual ?actualDel ?quoted ?planned ?yearInt
            {


               ?data ase:customer ?customer.
               ?data ase:customerCountry ?customerCountry.
               ?data ase:sellingManufacturedPart ?sellingMfgrPart.
               ?data ase:period ?period.
OPTIONAL{
                  ?data ase:reportDate ?dynamicReportDate.
               }

               OPTIONAL{
                  ?data ase:year ?yearInt.
               }
               OPTIONAL{
                  ?data ase:plannedSalesQuantityPerUnit ?p.
               }

               OPTIONAL{
                  ?data ase:quotedSalesQuantity ?q.
               }
               OPTIONAL{
                  ?data ase:actualProducedQuantityInPeriod ?a.
               }
               OPTIONAL{
                  ?data ase:actualDeliveredQuantityInPeriod ?ad.
               }

               FILTER(BOUND(?dynamicCustomer))
               FILTER(!BOUND(?dynamicCustomerCountry)             )
               FILTER(?dynamicCustomer = ?customer)
               FILTER(IF((BOUND(?dateFrom) &amp;&amp; BOUND(?dateTo)),
                     (?dynamicReportDate &gt;= ps:epoch2dateTime(?dateFrom) &amp;&amp; ?dynamicReportDate &lt;= ps:epoch2dateTime(?dateTo)),?dynamicReportDate != false))
               BIND(IF(!BOUND(?p),xsd:decimal(0),?p) AS ?planned)
               BIND(IF(!BOUND(?q),xsd:decimal(0),?q) AS ?quoted)
               BIND(IF(!BOUND(?a),xsd:decimal(0),?a) AS ?actual)
               BIND(IF(!BOUND(?ad),xsd:decimal(0),?ad) AS ?actualDel)
            }
         }
         UNION
         {
            select distinct ?period ?actual ?actualDel ?quoted ?planned ?yearInt
            {


               ?data ase:customer ?customer.
               ?data ase:customerCountry ?customerCountry.
               ?data ase:sellingManufacturedPart ?sellingMfgrPart.
               ?data ase:period ?period.
 OPTIONAL{
                  ?data ase:reportDate ?dynamicReportDate.
               }

               OPTIONAL{
                  ?data ase:year ?yearInt.
               }
               OPTIONAL{
                  ?data ase:plannedSalesQuantityPerUnit ?p.
               }

               OPTIONAL{
                  ?data ase:quotedSalesQuantity ?q.
               }
               OPTIONAL{
                  ?data ase:actualProducedQuantityInPeriod ?a.
               }
               OPTIONAL{
                  ?data ase:actualDeliveredQuantityInPeriod ?ad.
               }
               FILTER(!BOUND(?dynamicCustomer))
               FILTER(BOUND(?dynamicCustomerCountry)             )
               FILTER(?dynamicCustomerCountry = ?customerCountry)


               FILTER(IF((BOUND(?dateFrom) &amp;&amp; BOUND(?dateTo)),
                     (?dynamicReportDate &gt;= ps:epoch2dateTime(?dateFrom) &amp;&amp; ?dynamicReportDate &lt;= ps:epoch2dateTime(?dateTo)),?dynamicReportDate != false))
               BIND(IF(!BOUND(?p),xsd:decimal(0),?p) AS ?planned)
               BIND(IF(!BOUND(?q),xsd:decimal(0),?q) AS ?quoted)
               BIND(IF(!BOUND(?a),xsd:decimal(0),?a) AS ?actual)
               BIND(IF(!BOUND(?ad),xsd:decimal(0),?ad) AS ?actualDel)
            }
         }
         UNION{
            select distinct ?period ?actual ?actualDel ?quoted ?planned ?yearInt
            {


               ?data ase:customer ?customer.
               ?data ase:customerCountry ?customerCountry.
               ?data ase:sellingManufacturedPart ?sellingMfgrPart.
               ?data ase:period ?period.
OPTIONAL{
                  ?data ase:reportDate ?dynamicReportDate.
               }

               OPTIONAL{
                  ?data ase:year ?yearInt.
               }
               OPTIONAL{
                  ?data ase:plannedSalesQuantityPerUnit ?p.
               }

               OPTIONAL{
                  ?data ase:quotedSalesQuantity ?q.
               }
               OPTIONAL{
                  ?data ase:actualProducedQuantityInPeriod ?a.
               }
               OPTIONAL{
                  ?data ase:actualDeliveredQuantityInPeriod ?ad.
               }
               FILTER(BOUND(?dynamicCustomer))
               FILTER(BOUND(?dynamicCustomerCountry)             )
               FILTER(?dynamicCustomerCountry = ?customerCountry)
               FILTER(?dynamicCustomer = ?customer)



               FILTER(IF((BOUND(?dateFrom) &amp;&amp; BOUND(?dateTo)),
                     (?dynamicReportDate &gt;= ps:epoch2dateTime(?dateFrom) &amp;&amp; ?dynamicReportDate &lt;= ps:epoch2dateTime(?dateTo)),?dynamicReportDate != false))
               BIND(IF(!BOUND(?p),xsd:decimal(0),?p) AS ?planned)
               BIND(IF(!BOUND(?q),xsd:decimal(0),?q) AS ?quoted)
               BIND(IF(!BOUND(?a),xsd:decimal(0),?a) AS ?actual)
               BIND(IF(!BOUND(?ad),xsd:decimal(0),?ad) AS ?actualDel)
            }
         }
         #sorting
         BIND(xsd:string(?yearInt) as ?year).
         BIND(IF(fn:string-length(str(?period)) = 2, str(?period), fn:concat(&quot;0&quot;+str(?period))) AS ?mm)
         BIND(xsd:int(concat(?year,?mm)) AS ?orderBy)

      } GROUP BY ?year ?period ?orderBy

   }
   BIND(afn:uuid() as ?uuid).

}



</ps:sparql>
        <ps:hasDimension rdf:resource="&rs;DimensionSalesPeriod"/>
        <ps:hasDimension rdf:resource="&rs;DimensionYear"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureActualDeliveredQuantity"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureActualProducedQuantity"/>
        <ps:hasMeasure rdf:resource="&rs;MeasurePlannedQuantity"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureQuotedQuantity"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DynCockpitReportTimeSeriesRevVsCost -->

    <owl:NamedIndividual rdf:about="&rs;DynCockpitReportTimeSeriesRevVsCost">
        <rdf:type rdf:resource="&as;InactiveReport"/>
        <rdfs:label xml:lang="en">Time Series Rev Vs Cost</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">LINE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX ase: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;


CONSTRUCT {
   ?uuid a rs:DynReportTimeSeriesRevVsCostData;
      ps:orderBy ?orderBy;
      #ps:orderBy ?period;
      a ps:Data;
      rs:dynamicSalesPeriod ?period;
      rs:dynamicQuotedRev ?quotedAmt;
      rs:dynamicPlannedRev ?plannedAmt;
      rs:dynamicActualBill ?acutalAmt;
      rs:dynamicYear ?year.
}
WHERE
{
   {
      SELECT DISTINCT ?year  ?period (sum(?actual) AS ?acutalAmt) (sum(?quoted) AS ?quotedAmt) (sum(?planned) AS ?plannedAmt) ?orderBy
      WHERE{
         {
            select distinct ?period ?actual ?quoted ?planned ?yearInt
            {

               ?data ase:customer ?customer.
               ?data ase:customerCountry ?customerCountry.
               ?data ase:sellingManufacturedPart ?sellingMfgrPart.
               ?data ase:period ?period.
OPTIONAL{
            ?data ase:reportDate ?dynamicReportDate.
               }

               OPTIONAL{
            ?data ase:year ?yearInt.
               }
               OPTIONAL{
            ?data ase:plannedRevenueBookedInPeriod ?p.
               }
               OPTIONAL{
                  ?data ase:actualBilledValueInPeriod ?a.
               }
               OPTIONAL{
                  ?data ase:quotedRevenueBookedInPeriod ?q.
               }

               FILTER(!BOUND(?dynamicCustomerCountry))
               FILTER(!BOUND(?dynamicCustomer))
               FILTER(IF((BOUND(?dateFrom) &amp;&amp; BOUND(?dateTo)),
                     (?dynamicReportDate &gt;= ps:epoch2dateTime(?dateFrom) &amp;&amp; ?dynamicReportDate &lt;= ps:epoch2dateTime(?dateTo)),?dynamicReportDate != false))
               BIND(IF(!BOUND(?p),xsd:decimal(0),?p) AS ?planned)
               BIND(IF(!BOUND(?q),xsd:decimal(0),?q) AS ?quoted)
               BIND(IF(!BOUND(?a),xsd:decimal(0),?a) AS ?actual)

            }
         }
         UNION
         {
            select distinct ?period ?actual ?quoted ?planned ?yearInt
            {

               ?data ase:customer ?customer.
               ?data ase:customerCountry ?customerCountry.
               ?data ase:sellingManufacturedPart ?sellingMfgrPart.
               ?data ase:period ?period.
 OPTIONAL{
            ?data ase:reportDate ?dynamicReportDate.
               }

               OPTIONAL{
            ?data ase:year ?yearInt.
               }
               OPTIONAL{
            ?data ase:plannedRevenueBookedInPeriod ?p.
               }
               OPTIONAL{
                  ?data ase:actualBilledValueInPeriod ?a.
               }
               OPTIONAL{
                  ?data ase:quotedRevenueBookedInPeriod ?q.
               }

               FILTER(!BOUND(?dynamicCustomerCountry))
               FILTER(BOUND(?dynamicCustomer))
               FILTER(?dynamicCustomer = ?customer)
               FILTER(IF((BOUND(?dateFrom) &amp;&amp; BOUND(?dateTo)),
                     (?dynamicReportDate &gt;= ps:epoch2dateTime(?dateFrom) &amp;&amp; ?dynamicReportDate &lt;= ps:epoch2dateTime(?dateTo)),?dynamicReportDate != false))
               BIND(IF(!BOUND(?p),xsd:decimal(0),?p) AS ?planned)
               BIND(IF(!BOUND(?q),xsd:decimal(0),?q) AS ?quoted)
               BIND(IF(!BOUND(?a),xsd:decimal(0),?a) AS ?actual)

            }
         }
         UNION
         {
            select distinct ?period ?actual ?quoted ?planned ?yearInt
            {

               ?data ase:customer ?customer.
               ?data ase:customerCountry ?customerCountry.
               ?data ase:sellingManufacturedPart ?sellingMfgrPart.
               ?data ase:period ?period.
 OPTIONAL{
            ?data ase:reportDate ?dynamicReportDate.
               }

               OPTIONAL{
            ?data ase:year ?yearInt.
               }
               OPTIONAL{
            ?data ase:plannedRevenueBookedInPeriod ?p.
               }
               OPTIONAL{
                  ?data ase:actualBilledValueInPeriod ?a.
               }
               OPTIONAL{
                  ?data ase:quotedRevenueBookedInPeriod ?q.
               }

               FILTER(BOUND(?dynamicCustomerCountry))
               FILTER(!BOUND(?dynamicCustomer))
               FILTER(?dynamicCustomerCountry = ?customerCountry)
               FILTER(IF((BOUND(?dateFrom) &amp;&amp; BOUND(?dateTo)),
                     (?dynamicReportDate &gt;= ps:epoch2dateTime(?dateFrom) &amp;&amp; ?dynamicReportDate &lt;= ps:epoch2dateTime(?dateTo)),?dynamicReportDate != false))
               BIND(IF(!BOUND(?p),xsd:decimal(0),?p) AS ?planned)
               BIND(IF(!BOUND(?q),xsd:decimal(0),?q) AS ?quoted)
               BIND(IF(!BOUND(?a),xsd:decimal(0),?a) AS ?actual)

            }
         }
         UNION
         {
            select distinct ?period ?actual ?quoted ?planned ?yearInt
            {

               ?data ase:customer ?customer.
               ?data ase:customerCountry ?customerCountry.
               ?data ase:sellingManufacturedPart ?sellingMfgrPart.
               ?data ase:period ?period.
 OPTIONAL{
            ?data ase:reportDate ?dynamicReportDate.
               }

               OPTIONAL{
            ?data ase:year ?yearInt.
               }
               OPTIONAL{
            ?data ase:plannedRevenueBookedInPeriod ?p.
               }
               OPTIONAL{
                  ?data ase:actualBilledValueInPeriod ?a.
               }
               OPTIONAL{
                  ?data ase:quotedRevenueBookedInPeriod ?q.
               }

               FILTER(BOUND(?dynamicCustomerCountry))
               FILTER(BOUND(?dynamicCustomer))
               FILTER(?dynamicCustomer = ?customer)
               FILTER(?dynamicCustomerCountry = ?customerCountry)
               FILTER(IF((BOUND(?dateFrom) &amp;&amp; BOUND(?dateTo)),
                     (?dynamicReportDate &gt;= ps:epoch2dateTime(?dateFrom) &amp;&amp; ?dynamicReportDate &lt;= ps:epoch2dateTime(?dateTo)),?dynamicReportDate != false))
               BIND(IF(!BOUND(?p),xsd:decimal(0),?p) AS ?planned)
               BIND(IF(!BOUND(?q),xsd:decimal(0),?q) AS ?quoted)
               BIND(IF(!BOUND(?a),xsd:decimal(0),?a) AS ?actual)

            }

         }
         #sorting
         BIND(xsd:string(?yearInt) as ?year).
         BIND(IF(fn:string-length(str(?period)) = 2, str(?period), fn:concat(&quot;0&quot;+str(?period))) AS ?mm)
         BIND(xsd:int(concat(?year,?mm)) AS ?orderBy)

      } GROUP BY ?year ?period ?orderBy

   }
   BIND(afn:uuid() as ?uuid).
}








</ps:sparql>
        <ps:hasDimension rdf:resource="&rs;DimensionSalesPeriod"/>
        <ps:hasDimension rdf:resource="&rs;DimensionYear"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureActualBilledValue"/>
        <ps:hasMeasure rdf:resource="&rs;MeasurePlannedRevenue"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureQuotedRevenue"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#DynCockpitReportTimeSeriesUnitCost -->

    <owl:NamedIndividual rdf:about="&rs;DynCockpitReportTimeSeriesUnitCost">
        <rdf:type rdf:resource="&as;DynCockpitReport"/>
        <rdfs:label xml:lang="en">Time Series Unit Cost</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">LINE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX ase: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;


CONSTRUCT {
   ?uuid a rs:DynReportTimeSeriesUnitCostData;
      ps:orderBy ?orderBy;
      a ps:Data;
      rs:dynamicSalesPeriod ?period;
      rs:dynamicQuotedTotalCostUnit ?quotedAmt;
      rs:dynamicPlannedTotalCostUnit ?plannedAmt;
      rs:dynamicYear ?year.
}
WHERE
{
   {
      select distinct (sum(?quoted) as ?quotedAmt)  (sum(?pl) as ?plannedAmt) ?period ?year ?orderBy
      WHERE{
         {
            select distinct ?id ?quoted (sum(?planned) as ?pl) ?period ?yyyy
            {

               ?data ase:customerCode ?id.
               ?data ase:customer ?dynamicCustomer.
               ?data ase:customerCountry ?dynamicCustomerCountry.
               ?data ase:sellingManufacturedPart ?dynamicPartNumber.
               ?data ase:period ?period.
               ?data ase:year ?yyyy.
               ?data ase:reportDate ?dynamicReportDate.
               OPTIONAL{?data ase:plannedTotalCostPerUnit ?p.}

               {
                  #to be removed multiply by 500
                  SELECT distinct ?id (sum(?q*500) AS ?quoted)
                  WHERE {
                     ?quote as:quoteContainedBy ?account.
                     ?account as:objectERPId ?id1.
                     BIND(xsd:int(?id1) as ?id)

                     # ?quote ase:zQuoteQuantityPerMonth1 ?moq.
                     #?quote as:hasSalesDocumentStatus as:WON.
                     ?salesItem as:salesItemIncludedBy ?quote.
                     ?salesItem as:includesConfigItem ?config.
                     ?config pcsm:metalStampingGMMUSD ?gmm.
                     ?config pcs:metalStampingCostPerSetMRBUSD ?total.
                     BIND(xsd:decimal(?total-?gmm) AS ?q)
                  }GROUP BY ?id

               }

               BIND(?dateFrom AS ?start)
               BIND(?dateTo AS ?end)
               FILTER(IF((BOUND(?start) &amp;&amp; BOUND(?end)),
                     (?dynamicReportDate &gt;= ps:epoch2dateTime(?start) &amp;&amp; ?dynamicReportDate &lt;= ps:epoch2dateTime(?end)),?dynamicReportDate != false))
               BIND(IF(!BOUND(?p),xsd:decimal(0),?p) AS ?planned)
               BIND(IF(!BOUND(?a),xsd:decimal(0),?a) AS ?actual)

            }GROUP BY ?id ?period ?yyyy ?quoted
         }

         #sorting
         BIND(xsd:string(?yyyy) as ?year).
         BIND(IF(fn:string-length(str(?period)) = 2, str(?period), fn:concat(&quot;0&quot;+str(?period))) AS ?mm)
         BIND(xsd:int(concat(?year,?mm)) AS ?orderBy)

      } GROUP BY ?year ?period ?orderBy

   }
   BIND(afn:uuid() as ?uuid).
}








</ps:sparql>
        <ps:hasDimension rdf:resource="&rs;DimensionSalesPeriod"/>
        <ps:hasDimension rdf:resource="&rs;DimensionYear"/>
        <ps:hasMeasure rdf:resource="&rs;MeasurePlannedTotalCostUnit"/>
        <ps:hasMeasure rdf:resource="&rs;MeasureQuotedTotalCostUnit"/>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasureActual -->

    <owl:NamedIndividual rdf:about="&rs;MeasureActual">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Sum of Actual Billed Value in Period</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">3</ps:sequenceID>
        <ps:value>dynamicActual</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasureActualBilledValue -->

    <owl:NamedIndividual rdf:about="&rs;MeasureActualBilledValue">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Sum of Actual Billed Value in Period</rdfs:label>
        <ps:value>dynamicActualBill</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasureActualCost -->

    <owl:NamedIndividual rdf:about="&rs;MeasureActualCost">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Sum of Actual COGS in Period
</rdfs:label>
        <ps:value>dynamicActualCost</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasureActualDeliveredQuantity -->

    <owl:NamedIndividual rdf:about="&rs;MeasureActualDeliveredQuantity">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Sum of Actual Delivered Quantity in Period</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">4</ps:sequenceID>
        <ps:value>dynamicActualDeliveredQuantity</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasureActualProducedQuantity -->

    <owl:NamedIndividual rdf:about="&rs;MeasureActualProducedQuantity">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Sum of Actual Produced Quantity in Period</rdfs:label>
        <ps:value>dynamicActualProducedQuantity</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasureAwardedJobs -->

    <owl:NamedIndividual rdf:about="&rs;MeasureAwardedJobs">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Awarded Jobs</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">1</ps:sequenceID>
        <ps:measureGroup rdf:datatype="&xsd;integer">1</ps:measureGroup>
        <ps:value rdf:datatype="&xsd;string">rAwardedJobs</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasureCOPA -->

    <owl:NamedIndividual rdf:about="&rs;MeasureCOPA">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">COPA %</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">3</ps:sequenceID>
        <ps:measureGroup rdf:datatype="&xsd;integer">3</ps:measureGroup>
        <ps:value rdf:datatype="&xsd;string">pcopa</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasureCost -->

    <owl:NamedIndividual rdf:about="&rs;MeasureCost">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Cost</rdfs:label>
        <ps:measureGroup rdf:datatype="&xsd;int">1</ps:measureGroup>
        <ps:sequenceID rdf:datatype="&xsd;int">2</ps:sequenceID>
        <ps:value>dynamicCost</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasureLostJobs -->

    <owl:NamedIndividual rdf:about="&rs;MeasureLostJobs">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Lost Jobs</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">2</ps:sequenceID>
        <ps:measureGroup rdf:datatype="&xsd;integer">2</ps:measureGroup>
        <ps:value rdf:datatype="&xsd;string">rLostJobs</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasurePlanned -->

    <owl:NamedIndividual rdf:about="&rs;MeasurePlanned">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Sum of Planned Revenue Booked in Period</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">2</ps:sequenceID>
        <ps:value>dynamicPlanned</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasurePlannedCost -->

    <owl:NamedIndividual rdf:about="&rs;MeasurePlannedCost">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Sum of Planned Cost in Period</rdfs:label>
        <ps:value>dynamicPlannedCost</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasurePlannedQuantity -->

    <owl:NamedIndividual rdf:about="&rs;MeasurePlannedQuantity">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Sum of Planned Sales Quantity  / unit</rdfs:label>
        <ps:value>dynamicPlannedQuantity</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasurePlannedRevenue -->

    <owl:NamedIndividual rdf:about="&rs;MeasurePlannedRevenue">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Sum of Planned Revenue Booked in Period</rdfs:label>
        <ps:value>dynamicPlannedRev</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasurePlannedTotalCostUnit -->

    <owl:NamedIndividual rdf:about="&rs;MeasurePlannedTotalCostUnit">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Sum of Planned Total Cost  / unit</rdfs:label>
        <ps:value>dynamicPlannedTotalCostUnit</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasureQuoted -->

    <owl:NamedIndividual rdf:about="&rs;MeasureQuoted">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Sum of Quoted Revenue Booked in Period
</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">1</ps:sequenceID>
        <ps:value>dynamicQuoted</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasureQuotedCost -->

    <owl:NamedIndividual rdf:about="&rs;MeasureQuotedCost">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Sum of Quoted Cost in Period</rdfs:label>
        <ps:value>dynamicQuotedCost</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasureQuotedQuantity -->

    <owl:NamedIndividual rdf:about="&rs;MeasureQuotedQuantity">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Sum of Quoted Sales Quantity</rdfs:label>
        <ps:value>dynamicQuotedQuantity</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasureQuotedRevenue -->

    <owl:NamedIndividual rdf:about="&rs;MeasureQuotedRevenue">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Sum of Quoted Revenue Booked in Period
</rdfs:label>
        <ps:value>dynamicQuotedRev</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasureQuotedTotalCostUnit -->

    <owl:NamedIndividual rdf:about="&rs;MeasureQuotedTotalCostUnit">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Sum of Quoted Total Cost  / unit</rdfs:label>
        <ps:value>dynamicQuotedTotalCostUnit</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#MeasureRevenue -->

    <owl:NamedIndividual rdf:about="&rs;MeasureRevenue">
        <rdf:type rdf:resource="&ps;Measure"/>
        <rdfs:label xml:lang="en">Revenue</rdfs:label>
        <ps:sequenceID rdf:datatype="&xsd;int">1</ps:sequenceID>
        <ps:measureGroup rdf:datatype="&xsd;int">1</ps:measureGroup>
        <ps:value>dynamicRevenue</ps:value>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#QuotationListAnalyticReport -->

    <owl:NamedIndividual rdf:about="&rs;QuotationListAnalyticReport">
        <rdf:type rdf:resource="&as;AnalyticReport"/>
        <rdfs:label xml:lang="en">Quotation List </rdfs:label>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;

CONSTRUCT {
   ?uuid a rs:QuotationListData;
      #ps:orderBy ?companyName;
      a ps:Data;
      rs:quoteName ?quoteName;
      rs:quoteId ?quoteId;
      rs:rCompanyName ?companyName;
      rs:accountName ?accountName;
      rs:creatorName ?creatorName;
      rs:firstName ?firstName;
      rs:lastName ?lastName;
      rs:creationDate ?creationDate;
      rs:lastUpdate ?lastUpdate.
}
WHERE
{
  {
      SELECT ?quoteName ?quoteId ?companyName ?accountName ?creatorName ?firstName ?lastName ?creationDate ?lastUpdate
      WHERE {
         #?quote rdf:type as:Quote.
         ?quote as:containsCompany ?company.
         ?quote as:quoteContainedBy ?account.
         ?account ps:objectName ?accountName.
         ?quote ps:objectName ?quoteName.
         ?quote as:quoteId ?quoteId.
         ?company ps:objectName ?companyName.
         ?quote ps:objectDateOfCreation ?cDate.
         BIND (xsd:dateTime(?cDate) AS ?creationDate).
         ?quote ps:objectDateOfUpdate ?uDate.
         BIND (xsd:dateTime(?uDate) AS ?lastUpdate).
         ?quote as:hasSalesDocumentStatus ?status.
         ?quote as:containsCreator ?creator.
         ?creator ps:objectName ?creatorName.
         ?creator as:includesPerson ?person.
         OPTIONAL { ?person as:personFirstName ?firstName.}
         OPTIONAL {  ?person as:personLastName ?lastName.}
         BIND(xsd:dateTime(xsd:dateTime(now()) + &quot;-P30D&quot;^^xsd:duration) AS ?date30before).
         Filter (?creationDate &gt;= ?date30before || ?lastUpdate &gt;= ?date30before)
      }


   }
   BIND(afn:uuid() as ?uuid).
}</ps:sparql>
        <reportDescription rdf:datatype="&xsd;string">Quotation List for All Company</reportDescription>
        <reportFileName rdf:datatype="&xsd;string">QuotationListAnalyticReport</reportFileName>
        <rdfs:comment xml:lang="en">Quotation List [30 days before]</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://www.inmindcomputing.com/application/report-schema.owl#VolumePerIndustryCurrentMonthDynamic -->

    <owl:NamedIndividual rdf:about="&rs;VolumePerIndustryCurrentMonthDynamic">
        <rdf:type rdf:resource="&as;InactiveReport"/>
        <rdfs:label xml:lang="en">Parts Volume Per Product Hierarchy Current Month (US$) Dynmic</rdfs:label>
        <ps:preferredReportRepresentation rdf:datatype="&xsd;string">PIE</ps:preferredReportRepresentation>
        <ps:sparql rdf:datatype="&xsd;string">PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
PREFIX ps: &lt;http://www.inmindcomputing.com/platform/platform-schema.owl#&gt;
PREFIX as: &lt;http://www.inmindcomputing.com/application/application-schema.owl#&gt;
PREFIX ai: &lt;http://www.inmindcomputing.com/application/application-implementation.owl#&gt;
PREFIX pcs: &lt;http://www.inmindcomputing.com/application/products/products-schema.owl#&gt;
PREFIX pci: &lt;http://www.inmindcomputing.com/application/products/products-implementation.owl#&gt;
PREFIX pcsm: &lt;http://www.inmindcomputing.com/application/products/products-schema-metalstamping.owl#&gt;
PREFIX as-ext: &lt;http://www.inmindcomputing.com/application/application-schema-ext.owl#&gt;
PREFIX rs: &lt;http://www.inmindcomputing.com/application/report-schema.owl#&gt;
PREFIX afn: &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
PREFIX fn: &lt;http://www.w3.org/2005/xpath-functions#&gt;

CONSTRUCT {
  ?uuid a rs:VolumePerIndustryData;

      a ps:Data;
      rs:valueId ?industry;
      as-ext:won ?wonAmt;
      rs:rIndustry ?industryname.
} WHERE {
  {
      SELECT DISTINCT ?industryname ?industry (sum(?won) AS ?wonAmt)
      WHERE{
        {

            select distinct ?quote ?industryname ?industry ?won
            {

              ?quote as:quoteContainedBy ?account.
                ?account as:hasIndustry ?rIndustry.
              BIND (str(?rIndustry) as ?industry)
              ?rIndustry ps:objectName ?industryname.
              ?quote as:hasSalesDocumentStatus ?status.
              #awarded date
              ?quote as-ext:zQuoteClosedDate ?cdate.
              ?quote as:hasSalesDocumentType ?quotetype.
              ?salesitem as:salesItemIncludedBy ?quote.
              ?salesitem as:isProduct pci:MetalStamping.
              ?salesitem as:includesConfigItem ?metalstamping.
              ?metalstamping pcs:metalStampingTotalCostUSD ?totalcost.
              ?metalstamping pcsm:metalStampingProjectVolume ?projvol.
              OPTIONAL{?metalstamping pcs:partPartNumber  ?partNumber.}
              BIND(fn:floor(?totalcost*?projvol)  AS ?won)

              #   FILTER(?quotetype != ai:BenchMarking)
              #    FILTER(?status = as:ACCEPTED)
              #     FILTER(MONTH(?cdate) = MONTH(NOW()))

            }
        }


      } GROUP BY ?industryname ?industry
  }
  BIND(afn:uuid() as ?uuid).

}
</ps:sparql>
        <ps:hasMeasure rdf:resource="&ase;MeasureWon"/>
        <ps:hasDimension rdf:resource="&rs;DimensionIndustry"/>
    </owl:NamedIndividual>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // General axioms
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    <owl:Class>
        <rdfs:subClassOf>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ps;Dimension"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ps;axis"/>
                        <owl:hasValue rdf:datatype="&xsd;integer">2</owl:hasValue>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </rdfs:subClassOf>
        <owl:intersectionOf rdf:parseType="Collection">
            <owl:Class>
                <owl:oneOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ase;DimensionDocumentType"/>
                    <rdf:Description rdf:about="&ase;DimensionSalesPhase"/>
                </owl:oneOf>
            </owl:Class>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ps;dimensionIncludedBy"/>
                <owl:someValuesFrom rdf:resource="&as;CockpitReport"/>
            </owl:Restriction>
        </owl:intersectionOf>
    </owl:Class>
    <owl:Class>
        <rdfs:subClassOf rdf:resource="&ase;CockpitOpportunitiesPerVolumeData"/>
        <owl:intersectionOf rdf:parseType="Collection">
            <rdf:Description rdf:about="&ase;OpportunitiesPerVolumeData"/>
            <owl:Restriction>
                <owl:onProperty>
                    <rdf:Description>
                        <owl:inverseOf rdf:resource="&ps;definesData"/>
                    </rdf:Description>
                </owl:onProperty>
                <owl:someValuesFrom rdf:resource="&as;CockpitReport"/>
            </owl:Restriction>
        </owl:intersectionOf>
    </owl:Class>
    <owl:Class>
        <rdfs:subClassOf rdf:resource="&ase;CockpitOpportunitiesPerVolumeData"/>
        <owl:intersectionOf rdf:parseType="Collection">
            <rdf:Description rdf:about="&ase;QuotesPerPriceData"/>
            <owl:Restriction>
                <owl:onProperty>
                    <rdf:Description>
                        <owl:inverseOf rdf:resource="&ps;definesData"/>
                    </rdf:Description>
                </owl:onProperty>
                <owl:someValuesFrom rdf:resource="&as;CockpitReport"/>
            </owl:Restriction>
        </owl:intersectionOf>
    </owl:Class>
    <owl:Class>
        <rdfs:subClassOf>
            <owl:Class>
                <owl:intersectionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ps;Dimension"/>
                    <owl:Restriction>
                        <owl:onProperty rdf:resource="&ps;axis"/>
                        <owl:hasValue rdf:datatype="&xsd;integer">1</owl:hasValue>
                    </owl:Restriction>
                </owl:intersectionOf>
            </owl:Class>
        </rdfs:subClassOf>
        <owl:intersectionOf rdf:parseType="Collection">
            <owl:Class>
                <owl:oneOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="&ase;DimensionFiscalYear"/>
                    <rdf:Description rdf:about="&ase;DimensionProduct"/>
                    <rdf:Description rdf:about="&ase;DimensionYearQuarter"/>
                    <rdf:Description rdf:about="&ase;DimensionCalendarYear"/>
                </owl:oneOf>
            </owl:Class>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&ps;dimensionIncludedBy"/>
                <owl:someValuesFrom rdf:resource="&as;CockpitReport"/>
            </owl:Restriction>
        </owl:intersectionOf>
    </owl:Class>
    <owl:Class>
        <rdfs:subClassOf rdf:resource="&ase;OpportunityOpportunitiesPerVolumeData"/>
        <owl:intersectionOf rdf:parseType="Collection">
            <rdf:Description rdf:about="&ase;OpportunitiesPerVolumeData"/>
            <owl:Restriction>
                <owl:onProperty>
                    <rdf:Description>
                        <owl:inverseOf rdf:resource="&ps;definesData"/>
                    </rdf:Description>
                </owl:onProperty>
                <owl:someValuesFrom rdf:resource="&as;OpportunityReport"/>
            </owl:Restriction>
        </owl:intersectionOf>
    </owl:Class>
    <owl:Class>
        <rdfs:subClassOf rdf:resource="&ase;OpportunityOpportunitiesPerVolumeData"/>
        <owl:intersectionOf rdf:parseType="Collection">
            <rdf:Description rdf:about="&ase;QuotesPerPriceData"/>
            <owl:Restriction>
                <owl:onProperty>
                    <rdf:Description>
                        <owl:inverseOf rdf:resource="&ps;definesData"/>
                    </rdf:Description>
                </owl:onProperty>
                <owl:someValuesFrom rdf:resource="&as;QuoteReport"/>
            </owl:Restriction>
        </owl:intersectionOf>
    </owl:Class>
</rdf:RDF>



<!-- Generated by the OWL API (version 3.4.2) http://owlapi.sourceforge.net -->

